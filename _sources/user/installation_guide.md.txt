# Installation Guide
Our software is available on [GitHub][bte_github]. You will need to create an account if you have not done so already.

In the following section, we present the different types of installation of our software, i) laptop/desktop, ii) client-server, and iii) docker. Also, we go through the system requirements for these installations.


## 1. Laptop/Desktop Installation
The installation is simpler in that case since there is no communication with the server. You will still need to install Julia and Python:
* Install Python as instructed [here][python]
* Install Gurobi
* [Fork][git guide] the [REISE.jl][reisejl_github] git repo and follow the instruction in the REISE.jl [README][reisejl_local]
* Download the scenario input data from [zenodo] and run a scenario following the instructions in the REISE.jl [README][reisejl_local]

The input data consist of the demand, hydro, solar and wind profiles as `csv` files together with the grid as a `MAT-file`. The files have been produced for a benchmark scenario that the Breakthrough Energy Sciences team has previously ran. There are a couple of things you need to know before starting: i) the model has high spatial and temporal resolution and, consequently, the run time can be quite extensive; ii) it generates a large amount of data. For this reason, we recommend that you don't run the simulation for more than a couple of weeks

We understand the research is pretty limited with this option. Once again future releases will allow to run on the cloud. Meanwhile, we hope that you will contribute to this project by requesting/developing new features.


## 2. Client-Server Installation
In that case, you will [Fork][git guide] the [PowerSimData][powersimdata_github] git repo to create and run scenarios. This is the way we function at Breakthrough Energy Sciences. Here is what needs to be done to use this framework.


### On Laptop/Desktop
+ Generate authentication keys (SSH keys) using the `ssh-keygen` program
+ [Fork][git guide] the [PowerSimData][powersimdata_github] git repo
+ Create a ***PowerSimData/powersimdata/utility/.server_user*** file enclosing your server username
+ Enter the server address in ***PowerSimData/powersimdata/utility/server_setup.py***
+ Install Python and its dependencies using as instructed [here][python]


### On Server
* Copy the generated public key in your ***~/.ssh/authorized_keys*** file
* Install Gurobi
* Create the following directories:
  * **DATA_ROOT_DIR**: the root of the file system
  * **EXECUTE_DIR**: scenario inputs and outputs will be stored there - note that these files are temporary files and are not necessary to load an already ran scenario
  * **BASE_PROFILE_DIR**: the demand, hydro, solar and wind profiles are stored there - these can be generated by [forking][git guide] the [PreREISE][prereise_github] git repo or by downloading them on [zenodo] - anyway, you will need to follow the naming convention described in the PreREISE [README][prereise_local]
  * **INPUT_DIR**: the input data of the scenario - after the scenario has finished running and the temporary data are extracted, the `MAT-file` that encloses the grid used for the scenario is stored there along with the `pickle` file enclosing the change table listing the transformation applied to the original grid
  * **OUTPUT_DIR**: all the scenario outputs are stored in this directory after being extracted - the list of scenario output data is given in the PowerSimData [README][powersimdata_local]
  * **MODEL_DIR**: this folder encloses the simulation engine
* Create the ***ScenarioList.csv*** and ***ExecuteList.csv*** files in **DATA_ROOT_DIR**
* [Fork][git guide] the [REISE.jl][reisejl_github] git repo on the server into **MODEL_DIR** and install it following the instructions in the REISE.jl [README][reisejl_local] - note that the Julia Programming Language and Python will need to be installed on the server

Before using the scenario framework, you need to update the path to the variables in ***PowerSimData/powersimdata/utility/server_setup.py*** file. Note that the **LOCAL_DIR** does not need to be updated if having a **ScenarioData** directory in your home folder is a good place to store scenario data. You can now create, execute, extract and analyze scenarios. The PowerSimData [README][powersimdata_local] goes over these steps.


## 3. Using docker
This option enables running the full framework in containers, colocated on the same machine.
In this case, the only system requirement is to have [docker][docker], (including docker-compose) installed. 

All the data and configuration needed to run a simulation are located in the [plug][plug_github] repository, along with usage examples.


## 4. How to Run Scenario
Scenarios will be created, executed and extracted differently depending on the installation you selected. Follow the instructions in the following README links:
* PowerSimData [README][powersimdata_local] for the server-client installation
* REISE.jl [README][reisejl_local] for the laptop/desktop installation.


[bte_github]: https://github.com/Breakthrough-Energy
[git guide]: git_guide
[powersimdata_github]: https://github.com/Breakthrough-Energy/PowerSimData
[powersimdata_local]: ../powersimdata_package
[prereise_github]: https://github.com/Breakthrough-Energy/PreREISE
[prereise_local]: ../prereise_package
[python]: python_guide
[reisejl_github]: https://github.com/Breakthrough-Energy/REISE.jl
[reisejl_local]: ../reisejl_package
[plug_github]: https://github.com/Breakthrough-Energy/plug
[tox]: https://tox.readthedocs.io
[zenodo]: https://zenodo.org/record/3905429
[docker]: https://docs.docker.com/get-docker/
