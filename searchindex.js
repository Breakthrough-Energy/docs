Search.setIndex({"docnames": ["communication/code_of_conduct", "communication/project_ideas", "dev/coding_guide", "dev/contribution_guide", "dev/docstring_guide", "dev/import_guide", "dev/testing_guide", "index", "postreise", "postreise.analyze", "postreise.analyze.generation", "postreise.analyze.generation.tests", "postreise.analyze.tests", "postreise.analyze.transmission", "postreise.analyze.transmission.tests", "postreise.data", "postreise.plot", "postreise.plot.tests", "postreise/README", "postreise/analyze", "postreise/index", "postreise/plot", "postreise/scenario", "powersimdata", "powersimdata.data_access", "powersimdata.data_access.tests", "powersimdata.design", "powersimdata.design.compare", "powersimdata.design.generation", "powersimdata.design.generation.tests", "powersimdata.design.investment", "powersimdata.design.investment.tests", "powersimdata.design.tests", "powersimdata.design.transmission", "powersimdata.design.transmission.tests", "powersimdata.input", "powersimdata.input.changes", "powersimdata.input.changes.tests", "powersimdata.input.const", "powersimdata.input.converter", "powersimdata.input.converter.tests", "powersimdata.input.exporter", "powersimdata.input.tests", "powersimdata.network", "powersimdata.network.constants", "powersimdata.network.constants.carrier", "powersimdata.network.constants.region", "powersimdata.network.constants.region.tests", "powersimdata.network.europe_tub", "powersimdata.network.hifld", "powersimdata.network.usa_tamu", "powersimdata.output", "powersimdata.scenario", "powersimdata.scenario.tests", "powersimdata.tests", "powersimdata.utility", "powersimdata.utility.templates", "powersimdata.utility.tests", "powersimdata/capacity_planning", "powersimdata/grid", "powersimdata/index", "powersimdata/scenario", "powersimdata/scenario_design", "prereise", "prereise.cli", "prereise.cli.data_sources", "prereise.cli.data_sources.tests", "prereise.cli.download", "prereise.cli.download.tests", "prereise.cli.tests", "prereise.gather", "prereise.gather.demanddata", "prereise.gather.demanddata.bldg_electrification", "prereise.gather.demanddata.bldg_electrification.tests", "prereise.gather.demanddata.eia", "prereise.gather.demanddata.eia.tests", "prereise.gather.demanddata.nrel_efs", "prereise.gather.demanddata.nrel_efs.tests", "prereise.gather.demanddata.transportation_electrification", "prereise.gather.demanddata.transportation_electrification.data", "prereise.gather.demanddata.transportation_electrification.tests", "prereise.gather.flexibilitydata", "prereise.gather.flexibilitydata.doe", "prereise.gather.flexibilitydata.doe.examples", "prereise.gather.flexibilitydata.doe.tests", "prereise.gather.griddata", "prereise.gather.griddata.transmission", "prereise.gather.griddata.transmission.tests", "prereise.gather.hydrodata", "prereise.gather.hydrodata.eia", "prereise.gather.solardata", "prereise.gather.solardata.ga_wind", "prereise.gather.solardata.nsrdb", "prereise.gather.solardata.nsrdb.tests", "prereise.gather.solardata.tests", "prereise.gather.tests", "prereise.gather.winddata", "prereise.gather.winddata.hrrr", "prereise.gather.winddata.hrrr.tests", "prereise.gather.winddata.rap", "prereise.gather.winddata.rap.tests", "prereise/demand/historical/eastern", "prereise/demand/historical/texas", "prereise/demand/historical/western", "prereise/demand/nrel/efs", "prereise/demand/transportation_electrification/manual", "prereise/demand/transportation_electrification/sources", "prereise/demand/transportation_electrification/summary", "prereise/hydro/eastern", "prereise/hydro/legacy/capacity_factor", "prereise/hydro/texas", "prereise/hydro/western", "prereise/index", "prereise/renewables/download", "prereise/renewables/notebook", "prereise/renewables/solar/method", "prereise/renewables/solar/nsrdb", "prereise/renewables/solar/wind", "prereise/renewables/wind/hrrr", "prereise/renewables/wind/method", "prereise/renewables/wind/rap", "reisejl/formulation", "reisejl/index", "reisejl/installation", "reisejl/requirements", "reisejl/usage", "user/git_guide", "user/installation_guide", "user/python_guide"], "filenames": ["communication/code_of_conduct.rst", "communication/project_ideas.rst", "dev/coding_guide.rst", "dev/contribution_guide.rst", "dev/docstring_guide.rst", "dev/import_guide.rst", "dev/testing_guide.rst", "index.rst", "postreise.rst", "postreise.analyze.rst", "postreise.analyze.generation.rst", "postreise.analyze.generation.tests.rst", "postreise.analyze.tests.rst", "postreise.analyze.transmission.rst", "postreise.analyze.transmission.tests.rst", "postreise.data.rst", "postreise.plot.rst", "postreise.plot.tests.rst", "postreise/README.md", "postreise/analyze.rst", "postreise/index.rst", "postreise/plot.rst", "postreise/scenario.rst", "powersimdata.rst", "powersimdata.data_access.rst", "powersimdata.data_access.tests.rst", "powersimdata.design.rst", "powersimdata.design.compare.rst", "powersimdata.design.generation.rst", "powersimdata.design.generation.tests.rst", "powersimdata.design.investment.rst", "powersimdata.design.investment.tests.rst", "powersimdata.design.tests.rst", "powersimdata.design.transmission.rst", "powersimdata.design.transmission.tests.rst", "powersimdata.input.rst", "powersimdata.input.changes.rst", "powersimdata.input.changes.tests.rst", "powersimdata.input.const.rst", "powersimdata.input.converter.rst", "powersimdata.input.converter.tests.rst", "powersimdata.input.exporter.rst", "powersimdata.input.tests.rst", "powersimdata.network.rst", "powersimdata.network.constants.rst", "powersimdata.network.constants.carrier.rst", "powersimdata.network.constants.region.rst", "powersimdata.network.constants.region.tests.rst", "powersimdata.network.europe_tub.rst", "powersimdata.network.hifld.rst", "powersimdata.network.usa_tamu.rst", "powersimdata.output.rst", "powersimdata.scenario.rst", "powersimdata.scenario.tests.rst", "powersimdata.tests.rst", "powersimdata.utility.rst", "powersimdata.utility.templates.rst", "powersimdata.utility.tests.rst", "powersimdata/capacity_planning.rst", "powersimdata/grid.rst", "powersimdata/index.rst", "powersimdata/scenario.rst", "powersimdata/scenario_design.rst", "prereise.rst", "prereise.cli.rst", "prereise.cli.data_sources.rst", "prereise.cli.data_sources.tests.rst", "prereise.cli.download.rst", "prereise.cli.download.tests.rst", "prereise.cli.tests.rst", "prereise.gather.rst", "prereise.gather.demanddata.rst", "prereise.gather.demanddata.bldg_electrification.rst", "prereise.gather.demanddata.bldg_electrification.tests.rst", "prereise.gather.demanddata.eia.rst", "prereise.gather.demanddata.eia.tests.rst", "prereise.gather.demanddata.nrel_efs.rst", "prereise.gather.demanddata.nrel_efs.tests.rst", "prereise.gather.demanddata.transportation_electrification.rst", "prereise.gather.demanddata.transportation_electrification.data.rst", "prereise.gather.demanddata.transportation_electrification.tests.rst", "prereise.gather.flexibilitydata.rst", "prereise.gather.flexibilitydata.doe.rst", "prereise.gather.flexibilitydata.doe.examples.rst", "prereise.gather.flexibilitydata.doe.tests.rst", "prereise.gather.griddata.rst", "prereise.gather.griddata.transmission.rst", "prereise.gather.griddata.transmission.tests.rst", "prereise.gather.hydrodata.rst", "prereise.gather.hydrodata.eia.rst", "prereise.gather.solardata.rst", "prereise.gather.solardata.ga_wind.rst", "prereise.gather.solardata.nsrdb.rst", "prereise.gather.solardata.nsrdb.tests.rst", "prereise.gather.solardata.tests.rst", "prereise.gather.tests.rst", "prereise.gather.winddata.rst", "prereise.gather.winddata.hrrr.rst", "prereise.gather.winddata.hrrr.tests.rst", "prereise.gather.winddata.rap.rst", "prereise.gather.winddata.rap.tests.rst", "prereise/demand/historical/eastern.rst", "prereise/demand/historical/texas.rst", "prereise/demand/historical/western.rst", "prereise/demand/nrel/efs.rst", "prereise/demand/transportation_electrification/manual.rst", "prereise/demand/transportation_electrification/sources.rst", "prereise/demand/transportation_electrification/summary.rst", "prereise/hydro/eastern.rst", "prereise/hydro/legacy/capacity_factor.rst", "prereise/hydro/texas.rst", "prereise/hydro/western.rst", "prereise/index.rst", "prereise/renewables/download.rst", "prereise/renewables/notebook.rst", "prereise/renewables/solar/method.rst", "prereise/renewables/solar/nsrdb.rst", "prereise/renewables/solar/wind.rst", "prereise/renewables/wind/hrrr.rst", "prereise/renewables/wind/method.rst", "prereise/renewables/wind/rap.rst", "reisejl/formulation.rst", "reisejl/index.rst", "reisejl/installation.rst", "reisejl/requirements.rst", "reisejl/usage.rst", "user/git_guide.rst", "user/installation_guide.rst", "user/python_guide.rst"], "titles": ["<span class=\"section-number\">2. </span>Code of Conduct", "Mentored Project Ideas", "Coding Standards", "<span class=\"section-number\">3. </span>Contribution Guide", "Docstring Guide", "Import Statement Guide", "Testing Guide", "Facilitating the Energy Transition", "postreise package", "postreise.analyze package", "postreise.analyze.generation package", "postreise.analyze.generation.tests package", "postreise.analyze.tests package", "postreise.analyze.transmission package", "postreise.analyze.transmission.tests package", "postreise.data package", "postreise.plot package", "postreise.plot.tests package", "Requirements", "Analysis of Scenario Data", "<span class=\"section-number\">7. </span>PostREISE", "Plotting Scenario Data", "Scenario used", "powersimdata package", "powersimdata.data_access package", "powersimdata.data_access.tests package", "powersimdata.design package", "powersimdata.design.compare package", "powersimdata.design.generation package", "powersimdata.design.generation.tests package", "powersimdata.design.investment package", "powersimdata.design.investment.tests package", "powersimdata.design.tests package", "powersimdata.design.transmission package", "powersimdata.design.transmission.tests package", "powersimdata.input package", "powersimdata.input.changes package", "powersimdata.input.changes.tests package", "powersimdata.input.const package", "powersimdata.input.converter package", "powersimdata.input.converter.tests package", "powersimdata.input.exporter package", "powersimdata.input.tests package", "powersimdata.network package", "powersimdata.network.constants package", "powersimdata.network.constants.carrier package", "powersimdata.network.constants.region package", "powersimdata.network.constants.region.tests package", "powersimdata.network.europe_tub package", "powersimdata.network.hifld package", "powersimdata.network.usa_tamu package", "powersimdata.output package", "powersimdata.scenario package", "powersimdata.scenario.tests package", "powersimdata.tests package", "powersimdata.utility package", "powersimdata.utility.templates package", "powersimdata.utility.tests package", "Capacity Planning Framework", "Grid Object", "<span class=\"section-number\">5. </span>PowerSimData", "Scenario Framework", "Analyzing Scenario Designs", "prereise package", "prereise.cli package", "prereise.cli.data_sources package", "prereise.cli.data_sources.tests package", "prereise.cli.download package", "prereise.cli.download.tests package", "prereise.cli.tests package", "prereise.gather package", "prereise.gather.demanddata package", "prereise.gather.demanddata.bldg_electrification package", "prereise.gather.demanddata.bldg_electrification.tests package", "prereise.gather.demanddata.eia package", "prereise.gather.demanddata.eia.tests package", "prereise.gather.demanddata.nrel_efs package", "prereise.gather.demanddata.nrel_efs.tests package", "prereise.gather.demanddata.transportation_electrification package", "prereise.gather.demanddata.transportation_electrification.data package", "prereise.gather.demanddata.transportation_electrification.tests package", "prereise.gather.flexibilitydata package", "prereise.gather.flexibilitydata.doe package", "prereise.gather.flexibilitydata.doe.examples package", "prereise.gather.flexibilitydata.doe.tests package", "prereise.gather.griddata package", "prereise.gather.griddata.transmission package", "prereise.gather.griddata.transmission.tests package", "prereise.gather.hydrodata package", "prereise.gather.hydrodata.eia package", "prereise.gather.solardata package", "prereise.gather.solardata.ga_wind package", "prereise.gather.solardata.nsrdb package", "prereise.gather.solardata.nsrdb.tests package", "prereise.gather.solardata.tests package", "prereise.gather.tests package", "prereise.gather.winddata package", "prereise.gather.winddata.hrrr package", "prereise.gather.winddata.hrrr.tests package", "prereise.gather.winddata.rap package", "prereise.gather.winddata.rap.tests package", "Eastern", "Texas", "Western", "&lt;no title&gt;", "User Manual", "Data Sources", "Summary", "Eastern", "Capacity Factor", "Texas", "Western", "<span class=\"section-number\">6. </span>PreREISE", "Command Line Interface", "Notebooks", "From Solar Irradiance to Power Output", "The National Solar Radiation Database", "Gridded Atmospheric Wind Integration National Dataset", "High-Resolution Rapid Refresh", "From Wind Speed to Power Output", "Rapid Refresh", "Formulation", "<span class=\"section-number\">8. </span>REISE.jl", "Installation", "System Requirements", "Usage", "<span class=\"section-number\">4. </span>Working with Git/GitHub", "<span class=\"section-number\">1. </span>Installation Guide", "Installing Python and its Dependencies"], "terms": {"breakthrough": [0, 1, 3, 7, 107, 112, 122, 123, 126], "energi": [0, 1, 3, 10, 16, 20, 22, 28, 30, 36, 45, 52, 58, 60, 61, 72, 76, 78, 104, 105, 106, 107, 108, 112, 121, 122, 123, 125, 126], "foundat": 0, "i": [0, 1, 3, 4, 5, 6, 7, 9, 10, 13, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 33, 35, 36, 39, 41, 43, 45, 46, 48, 51, 52, 54, 55, 58, 59, 60, 61, 62, 64, 70, 72, 74, 76, 78, 86, 89, 90, 96, 97, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "commit": [0, 10, 18, 19, 20, 23, 24], "creat": [0, 3, 5, 7, 16, 23, 24, 28, 35, 36, 43, 48, 55, 59, 62, 70, 72, 75, 76, 78, 82, 89, 94, 95, 97, 108, 112, 119, 122, 123, 125, 126, 127, 128], "harass": 0, "free": [0, 1, 2, 3, 20, 22, 122, 123], "experi": [0, 7], "everyon": 0, "regardless": 0, "ag": 0, "bodi": 0, "size": [0, 2, 16, 89, 99, 112, 115, 122, 124, 127], "visibl": 0, "invis": 0, "disabl": 0, "ethnic": 0, "sex": 0, "characterist": [0, 6, 59, 60], "gender": 0, "ident": [0, 58, 60, 112, 126], "express": [0, 2, 58, 60], "level": [0, 1, 3, 5, 6, 13, 16, 19, 20, 35, 36, 41, 45, 58, 59, 60, 61, 89, 96, 97, 99, 104, 107, 108, 112, 119, 121, 122, 128], "educ": 0, "socio": 0, "econom": 0, "statu": [0, 24, 52, 60, 61, 112], "nation": [0, 104, 105, 106, 113, 114, 120], "person": [0, 112], "appear": 0, "race": 0, "religion": 0, "sexual": 0, "orient": 0, "we": [0, 1, 2, 3, 4, 5, 7, 16, 20, 21, 30, 33, 58, 60, 61, 92, 97, 101, 105, 108, 109, 111, 112, 115, 122, 123, 126, 127, 128], "act": [0, 2], "interact": [0, 2, 6, 18, 24, 35, 64, 97, 107, 112, 126], "wai": [0, 1, 2, 3, 4, 6, 60, 61, 70, 82, 122, 123, 126, 127, 128], "contribut": [0, 1, 2, 7], "an": [0, 1, 2, 3, 4, 5, 6, 10, 16, 19, 20, 21, 24, 28, 33, 35, 39, 45, 51, 52, 58, 59, 60, 61, 62, 64, 70, 72, 76, 78, 92, 103, 105, 112, 116, 119, 120, 121, 122, 123, 125, 127], "open": [0, 1, 2, 7, 20, 30, 60, 97, 107, 112, 115, 122, 123, 126], "welcom": [0, 7], "divers": 0, "inclus": [0, 9, 16, 28, 78, 97, 99], "healthi": 0, "commun": [0, 1], "exampl": [0, 2, 3, 4, 5, 16, 61, 74, 81, 82, 113, 117, 122, 123, 124, 126, 127], "behavior": [0, 2, 28, 52, 74, 105, 112, 126], "posit": [0, 6, 16, 27, 30, 36, 112, 113, 122, 125], "environ": [0, 2, 18, 24, 52, 55, 122, 123, 125, 127, 128], "includ": [0, 2, 6, 7, 9, 10, 16, 19, 20, 28, 30, 33, 35, 41, 64, 70, 76, 104, 105, 107, 112, 115, 121, 122, 123, 125, 126, 127], "show": [0, 6, 7, 16, 20, 21, 111, 112, 113, 122, 125], "empathi": 0, "kind": [0, 35, 36, 41, 52, 54, 97], "toward": [0, 58, 60], "member": [0, 126], "Being": 0, "respect": [0, 19, 20, 24, 52, 60, 61, 62, 72, 96, 101, 112], "differ": [0, 2, 4, 6, 7, 10, 16, 19, 20, 27, 28, 36, 60, 62, 101, 107, 111, 121, 122, 125, 126, 127], "opinion": 0, "viewpoint": 0, "give": [0, 35, 59, 60, 61, 74, 105, 112, 127], "gracefulli": 0, "accept": [0, 35, 58, 60], "construct": [0, 48, 51, 96, 101, 112, 122, 125], "feedback": [0, 126], "mistak": 0, "us": [0, 1, 3, 4, 5, 6, 7, 9, 10, 13, 16, 18, 19, 21, 24, 28, 30, 33, 35, 36, 41, 43, 45, 46, 48, 52, 54, 55, 58, 59, 60, 61, 62, 70, 72, 74, 76, 78, 82, 86, 89, 91, 92, 96, 97, 99, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128], "languag": [0, 2, 122, 125], "unaccept": 0, "The": [0, 2, 3, 4, 6, 7, 10, 13, 16, 18, 19, 20, 21, 24, 28, 30, 35, 36, 41, 45, 55, 58, 60, 61, 62, 70, 74, 76, 92, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128], "imageri": 0, "attent": 0, "advanc": [0, 30, 60, 61, 72, 76, 104, 105, 112], "ani": [0, 1, 2, 3, 5, 7, 16, 18, 20, 21, 27, 28, 33, 35, 36, 54, 55, 58, 59, 60, 61, 70, 76, 78, 96, 97, 122, 123, 125, 126], "troll": 0, "insult": 0, "derogatori": 0, "comment": 0, "polit": 0, "attack": 0, "public": [0, 3, 45, 112, 127], "privat": [0, 107, 112], "publish": [0, 102, 104, 109, 110, 112], "other": [0, 2, 4, 6, 7, 20, 21, 36, 60, 61, 70, 72, 74, 86, 105, 106, 107, 111, 112, 115, 122, 123, 125, 126], "inform": [0, 2, 3, 6, 7, 19, 20, 24, 26, 28, 35, 36, 39, 43, 45, 46, 52, 59, 61, 72, 74, 86, 90, 97, 104, 112, 115, 122, 123, 125, 126], "physic": [0, 112, 116], "email": [0, 1, 3, 7, 92, 112, 113, 126], "address": [0, 3, 126, 127], "without": [0, 2, 10, 24, 28, 35, 112, 119, 122, 123, 125, 126], "explicit": 0, "permiss": [0, 2], "which": [0, 2, 3, 5, 6, 9, 10, 16, 18, 19, 20, 24, 28, 30, 33, 35, 36, 41, 52, 55, 58, 60, 61, 62, 70, 72, 74, 76, 78, 86, 92, 97, 107, 112, 121, 122, 123, 125, 128], "could": [0, 2, 16, 20, 22, 105, 107, 112], "reason": [0, 2, 3, 5, 74, 112], "consid": [0, 6, 35, 36, 60, 62, 74, 101, 104, 108, 112, 115, 122, 124], "inappropri": 0, "profession": 0, "set": [0, 2, 5, 6, 9, 10, 11, 16, 19, 20, 24, 26, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 43, 48, 52, 54, 55, 58, 60, 61, 76, 92, 104, 105, 106, 107, 109, 112, 115, 123, 125, 126, 127, 128], "project": [0, 2, 3, 7, 16, 72, 76, 78, 104, 105, 106, 107, 113, 126, 128], "maintain": [0, 2, 28], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 16, 19, 20, 22, 28, 30, 33, 35, 36, 39, 41, 45, 46, 52, 55, 58, 59, 60, 61, 62, 70, 72, 74, 75, 76, 78, 86, 89, 90, 92, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 115, 119, 121, 122, 123, 125, 126, 127, 128], "clarifi": 0, "enforc": [0, 2], "take": [0, 2, 6, 13, 18, 24, 28, 35, 45, 60, 62, 76, 78, 97, 105, 112, 122, 123, 124, 126], "appropri": [0, 16, 24, 28, 36, 60, 62, 76, 127], "restor": [0, 41], "action": [0, 2, 70, 126], "thei": [0, 2, 10, 18, 60, 62, 103, 108, 112, 121, 122, 126], "deem": 0, "threaten": 0, "offens": 0, "harm": 0, "have": [0, 1, 2, 3, 4, 6, 7, 9, 10, 16, 19, 20, 21, 35, 36, 58, 60, 61, 72, 76, 89, 96, 97, 101, 104, 105, 107, 109, 111, 112, 122, 125, 126, 127, 128], "right": [0, 6, 16, 60, 61, 112, 121, 122, 126], "remov": [0, 23, 24, 35, 36, 52, 60, 61, 70, 78, 122, 123], "edit": [0, 122, 123, 126, 127], "reject": 0, "wiki": 0, "issu": [0, 1, 2, 3, 128], "align": [0, 112], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 16, 18, 19, 20, 22, 24, 27, 28, 30, 33, 35, 36, 41, 52, 54, 58, 59, 60, 61, 62, 72, 74, 76, 78, 86, 92, 97, 104, 105, 107, 111, 112, 113, 115, 119, 121, 122, 123, 124, 125, 126, 127, 128], "ban": 0, "temporarili": 0, "perman": 0, "contributor": [0, 1], "appli": [0, 3, 16, 26, 35, 41, 58, 60, 61, 74, 78, 111, 112, 114, 121, 122, 127], "within": [0, 1, 2, 6, 16, 24, 35, 60, 62, 74, 76, 101, 108, 112, 122, 123, 125, 127], "all": [0, 2, 3, 4, 6, 9, 10, 16, 19, 20, 22, 26, 27, 28, 30, 33, 35, 36, 41, 43, 46, 54, 55, 58, 60, 61, 70, 74, 76, 78, 82, 84, 89, 90, 96, 97, 101, 104, 105, 108, 109, 112, 115, 121, 122, 123, 126, 127, 128], "space": [0, 70, 72, 85, 86, 107, 112], "also": [0, 1, 2, 3, 5, 7, 24, 36, 41, 45, 58, 60, 61, 62, 76, 104, 105, 108, 112, 122, 123, 124, 125, 127], "when": [0, 1, 2, 3, 4, 5, 9, 26, 41, 45, 54, 55, 58, 60, 61, 62, 74, 78, 89, 97, 107, 112, 113, 121, 122, 125, 126, 127, 128], "individu": [0, 3, 10, 19, 20, 30, 78, 112], "interpret": [0, 16, 28, 58, 60, 122, 123, 125, 127], "offici": [0, 122, 123], "repres": [0, 16, 20, 22, 28, 36, 55, 58, 59, 60, 62, 76, 78, 86, 92, 97, 104, 105, 107, 112, 119, 122, 125], "e": [0, 2, 3, 5, 6, 7, 16, 18, 19, 20, 28, 30, 33, 35, 36, 43, 46, 52, 54, 58, 59, 60, 62, 74, 76, 78, 101, 104, 105, 107, 108, 112, 119, 121, 122, 125, 126, 127, 128], "mail": 0, "post": 0, "via": [0, 1, 3, 16, 20, 22, 24, 28, 33, 52, 60, 61, 64, 86, 101, 105, 111, 112, 113, 115, 122, 125, 126, 128], "social": 0, "media": 0, "account": [0, 2, 76, 112, 119, 121, 122, 123, 126, 127], "appoint": 0, "onlin": [0, 76], "offlin": 0, "event": [0, 2, 74, 112], "If": [0, 1, 2, 3, 4, 5, 10, 16, 27, 28, 30, 33, 35, 41, 43, 48, 52, 60, 61, 74, 76, 78, 92, 97, 112, 115, 121, 122, 123, 125, 126, 127, 128], "you": [0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 20, 21, 22, 28, 60, 61, 112, 113, 122, 123, 125, 126, 127, 128], "believ": 0, "someon": 0, "one": [0, 2, 3, 6, 7, 9, 10, 16, 18, 20, 21, 24, 26, 28, 30, 33, 35, 36, 43, 52, 54, 58, 59, 60, 61, 72, 76, 78, 86, 97, 105, 107, 112, 122, 123, 125, 126, 127], "platform": [0, 7, 122, 123], "ask": [0, 3], "report": [0, 13, 45, 89, 104, 106, 108, 110, 112, 115, 119], "modelinfo": 0, "breakthroughenergi": [0, 1], "org": [0, 1, 54, 106, 112, 122, 123], "complaint": 0, "review": [0, 1, 2, 3, 7, 60, 61, 126], "investig": 0, "promptli": 0, "fairli": 0, "oblig": 0, "privaci": 0, "secur": 0, "incid": [0, 16], "your": [0, 1, 2, 4, 18, 20, 21, 112, 116, 122, 123, 127, 128], "contact": [0, 101, 112], "so": [0, 2, 6, 18, 19, 20, 24, 30, 45, 58, 60, 61, 74, 76, 97, 112, 121, 122, 123, 125, 126, 127, 128], "can": [0, 1, 2, 3, 4, 6, 7, 16, 18, 19, 20, 28, 35, 43, 45, 54, 55, 58, 59, 60, 61, 62, 64, 70, 75, 76, 78, 86, 92, 97, 101, 103, 104, 105, 107, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128], "get": [0, 2, 3, 6, 9, 10, 16, 19, 20, 21, 23, 24, 28, 35, 43, 52, 54, 55, 60, 61, 74, 78, 89, 90, 92, 96, 97, 112, 116, 128], "touch": 0, "need": [0, 1, 2, 3, 4, 5, 6, 16, 18, 24, 28, 30, 35, 36, 58, 60, 61, 74, 76, 78, 82, 92, 97, 112, 122, 123, 124, 125, 126, 127, 128], "follow": [0, 1, 2, 3, 4, 5, 6, 55, 59, 60, 61, 62, 72, 97, 105, 106, 111, 112, 122, 123, 125, 126, 127, 128], "up": [0, 2, 3, 6, 7, 11, 16, 18, 26, 28, 32, 33, 34, 42, 43, 52, 54, 58, 60, 61, 82, 86, 92, 112, 119, 121, 122, 127, 128], "name": [0, 4, 5, 6, 10, 16, 23, 24, 28, 30, 33, 35, 36, 39, 43, 46, 48, 49, 50, 52, 55, 58, 59, 60, 61, 62, 65, 70, 74, 76, 78, 85, 86, 89, 96, 111, 112, 126], "involv": [0, 78], "real": [0, 2, 74, 112, 118, 119], "nicknam": 0, "pseudonym": 0, "were": [0, 104, 112, 122, 125], "wit": [0, 35], "besid": 0, "pleas": [0, 1, 2, 3, 7], "try": [0, 2, 7], "them": [0, 2, 33, 86, 96], "well": [0, 2, 3, 35, 60, 61, 62, 112, 115, 127], "where": [0, 2, 3, 5, 6, 10, 16, 20, 21, 22, 24, 28, 33, 35, 52, 60, 61, 62, 64, 74, 76, 78, 82, 97, 112, 126, 127], "occur": [0, 76, 78, 112, 122, 125], "specif": [0, 2, 16, 26, 35, 45, 54, 55, 59, 60, 78, 89, 97, 112, 119, 122, 123], "possibl": [0, 2, 24, 30, 52, 60, 61, 112], "publicli": [0, 107, 112, 118], "avail": [0, 3, 7, 9, 10, 13, 16, 18, 19, 20, 24, 26, 30, 35, 41, 45, 52, 54, 59, 60, 72, 78, 108, 110, 111, 112, 118, 121, 122, 123, 124, 125, 126, 127], "record": [0, 43, 48, 97], "g": [0, 2, 5, 6, 16, 18, 28, 30, 35, 36, 43, 45, 46, 52, 60, 62, 74, 76, 101, 104, 105, 107, 112, 121, 122, 125, 126], "list": [0, 3, 4, 5, 7, 9, 10, 13, 16, 24, 26, 28, 33, 35, 36, 41, 43, 46, 52, 54, 55, 58, 59, 60, 61, 62, 70, 72, 74, 76, 78, 82, 89, 90, 92, 97, 99, 101, 103, 112, 116, 121, 122, 125, 127], "archiv": [0, 43], "chat": 0, "logger": 0, "link": [0, 2, 4, 7, 41, 74, 97, 112], "slack": [0, 1, 3, 7], "team": [0, 3, 7, 107, 112, 126], "current": [0, 2, 16, 18, 24, 30, 33, 35, 36, 52, 55, 58, 60, 78, 86, 97, 104, 112, 113, 119, 122, 125, 126, 128], "plan": [0, 1, 28, 61, 104, 112, 122, 123, 126, 127], "doe": [0, 2, 3, 9, 20, 22, 41, 43, 70, 76, 78, 81, 89, 121, 122, 125, 127], "retain": 0, "more": [0, 1, 2, 3, 4, 6, 7, 10, 16, 26, 28, 33, 35, 36, 45, 54, 58, 60, 61, 74, 97, 105, 107, 108, 110, 112, 121, 122, 123, 125, 126, 127], "than": [0, 2, 4, 16, 27, 36, 39, 74, 76, 105, 108, 112, 121, 122, 124, 125], "10": [0, 16, 20, 21, 22, 58, 60, 112], "000": [0, 112], "messag": [0, 55, 97, 112, 113, 122, 125], "histori": 0, "screenshot": 0, "lost": [0, 36], "extra": [0, 33], "context": [0, 3, 23], "exist": [0, 3, 16, 24, 43, 55, 58, 60, 61, 84, 112, 113, 122, 125], "whether": [0, 2, 10, 16, 24, 28, 30, 33, 35, 41, 52, 60, 62, 70, 76, 78, 92, 96, 99, 105, 112, 121, 122], "ongo": [0, 24, 52], "should": [0, 1, 2, 3, 4, 5, 6, 7, 16, 18, 24, 28, 35, 52, 55, 58, 60, 62, 74, 76, 78, 96, 97, 122, 123, 127, 128], "impact": [0, 104, 112, 121, 122], "guidelin": [0, 2, 3, 128], "determin": [0, 2, 16, 26, 28, 35, 55, 58, 60, 61, 70, 74, 76, 78, 104, 107, 112], "consequ": 0, "1": [0, 6, 10, 13, 16, 19, 20, 21, 28, 30, 33, 35, 36, 45, 48, 58, 60, 61, 62, 74, 75, 78, 86, 90, 97, 105, 107, 112, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127], "correct": [0, 2, 6, 28, 74, 75, 76, 99], "unprofession": 0, "unwelcom": 0, "A": [0, 2, 3, 6, 28, 30, 35, 45, 54, 58, 59, 60, 61, 76, 86, 97, 107, 112, 116, 122, 125], "written": [0, 2, 3, 6, 7, 20, 60, 112, 122], "warn": [0, 122, 125], "from": [0, 2, 3, 4, 5, 6, 7, 13, 14, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 33, 35, 36, 41, 43, 45, 46, 48, 51, 52, 54, 55, 59, 61, 62, 70, 72, 74, 75, 76, 78, 82, 84, 86, 89, 90, 92, 96, 97, 99, 101, 104, 105, 106, 107, 111, 113, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128], "provid": [0, 1, 2, 3, 7, 9, 16, 18, 28, 35, 60, 62, 64, 70, 74, 76, 89, 92, 97, 104, 105, 108, 110, 111, 112, 115, 116, 117, 118, 119, 120, 122, 123, 125], "clariti": 0, "around": [0, 2, 3, 24, 30, 55, 112, 115], "natur": [0, 20, 21, 45, 60, 61], "explan": 0, "why": [0, 112], "wa": [0, 19, 20, 21, 22, 58, 60, 61, 111, 112, 122, 125], "apologi": 0, "mai": [0, 2, 3, 18, 58, 60, 74, 86, 106, 112, 120, 122, 123], "request": [0, 2, 92, 99, 101, 112], "2": [0, 6, 13, 14, 16, 19, 20, 21, 35, 36, 45, 58, 60, 61, 74, 78, 90, 96, 97, 105, 107, 111, 112, 115, 119, 122, 124, 127], "through": [0, 2, 20, 21, 52, 58, 60, 72, 74, 104, 106, 107, 112, 119, 122, 125, 126, 128], "singl": [0, 2, 16, 35, 36, 41, 76, 78, 86, 101, 105, 112, 119], "seri": [0, 4, 9, 10, 16, 20, 21, 27, 28, 30, 33, 35, 41, 60, 61, 72, 74, 78, 89, 92, 96, 108, 112, 122, 123, 125], "continu": 0, "No": 0, "peopl": [0, 2, 112, 127], "unsolicit": 0, "those": [0, 3, 4, 35, 112, 122, 123, 126, 128], "specifi": [0, 9, 10, 16, 24, 26, 28, 33, 35, 36, 51, 52, 54, 58, 60, 61, 62, 76, 78, 92, 99, 105, 112, 122, 123, 125], "period": [0, 6, 10, 54, 74, 78, 112, 115, 118, 121, 122], "time": [0, 1, 2, 3, 5, 8, 10, 13, 16, 20, 21, 26, 41, 43, 46, 52, 54, 58, 59, 60, 61, 70, 72, 74, 76, 78, 89, 92, 95, 97, 99, 104, 107, 108, 112, 118, 121, 122, 123, 124, 125, 127], "avoid": [0, 2, 5, 33, 111, 112, 113], "extern": [0, 2, 3, 4, 16, 76, 78, 122, 123], "channel": [0, 1, 3], "like": [0, 2, 3, 4, 6, 35, 105, 107, 112, 113, 122, 123, 126, 128], "term": [0, 16, 28, 60, 62, 112], "lead": [0, 2], "temporari": [0, 24, 127], "3": [0, 2, 4, 6, 13, 14, 16, 19, 20, 21, 28, 45, 54, 55, 60, 62, 78, 101, 105, 107, 112, 118, 122, 123, 124, 125, 128], "seriou": 0, "sustain": 0, "sort": [0, 2, 5, 16, 78], "allow": [0, 3, 6, 10, 16, 23, 35, 51, 52, 58, 60, 61, 62, 76, 78, 104, 105, 112, 118, 122, 123, 128], "dure": [0, 2, 10, 26, 52, 54, 76, 78, 108, 112, 126], "4": [0, 2, 6, 7, 14, 20, 22, 45, 74, 78, 96, 105, 108, 112], "demonstr": [0, 2, 6, 18, 101, 112, 117, 122, 123], "pattern": [0, 2, 24, 78, 105, 106, 107], "aggress": 0, "disparag": 0, "class": [0, 2, 3, 4, 5, 6, 10, 11, 16, 19, 20, 24, 26, 32, 34, 35, 36, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 60, 61, 64, 65, 70, 72, 74, 78, 86, 92, 95, 96, 97, 99, 112, 119], "adapt": 0, "coven": 0, "version": [0, 24, 35, 36, 41, 45, 48, 52, 59, 60, 61, 89, 112, 116, 122, 123, 126, 128], "0": [0, 2, 6, 7, 9, 10, 13, 16, 19, 20, 21, 28, 30, 33, 35, 36, 45, 58, 60, 61, 62, 75, 86, 96, 97, 111, 112, 119, 121, 122], "http": [0, 4, 24, 54, 99, 106, 109, 112, 122, 123, 126], "www": [0, 99, 106, 109, 112], "code_of_conduct": 0, "html": [0, 54, 106, 109, 112], "inspir": [0, 13], "mozilla": 0, "": [0, 1, 4, 7, 10, 16, 18, 19, 20, 22, 28, 35, 36, 41, 43, 45, 46, 48, 49, 50, 52, 59, 60, 61, 62, 74, 76, 78, 86, 90, 92, 96, 97, 99, 101, 104, 105, 106, 112, 116, 117, 119, 121, 122, 123, 125, 126, 127, 128], "ladder": 0, "For": [0, 1, 2, 3, 4, 5, 16, 18, 26, 28, 33, 36, 45, 54, 58, 60, 72, 78, 96, 108, 112, 115, 122, 123, 124, 127], "answer": [0, 7], "common": [0, 24, 35, 105, 112], "question": [0, 1, 3, 7, 36, 107, 112], "about": [0, 1, 2, 3, 60, 62, 97, 112, 127], "see": [0, 2, 3, 6, 16, 26, 35, 36, 45, 54, 60, 62, 65, 97, 101, 103, 105, 110, 111, 112, 115, 122, 125, 126, 127], "faq": 0, "translat": [0, 24, 36, 52, 58, 60, 78, 86, 119], "scienc": [1, 3, 7, 112, 126], "BES": [1, 3, 112, 122], "activ": [1, 4, 35, 55, 78, 107, 112, 122, 123, 127, 128], "develop": [1, 2, 6, 7, 18, 104, 105, 106, 107, 108, 112, 115, 122, 123, 126], "tool": [1, 2, 5, 19, 20, 30, 64, 76, 106, 111, 112, 126], "carri": [1, 2, 60, 61, 103, 112, 128], "out": [1, 2, 3, 28, 60, 62, 97, 103, 109, 112, 119, 126, 128], "realist": 1, "power": [1, 2, 6, 7, 10, 13, 16, 19, 20, 21, 33, 35, 36, 45, 52, 59, 60, 61, 74, 78, 86, 92, 96, 97, 99, 101, 104, 121, 122, 125], "flow": [1, 7, 13, 16, 19, 20, 21, 33, 35, 52, 60, 61, 112, 121, 122, 125], "studi": [1, 7, 60, 76, 104, 105, 106, 122], "u": [1, 2, 3, 4, 7, 16, 20, 22, 45, 59, 60, 74, 76, 78, 89, 96, 97, 99, 101, 105, 106, 109, 111, 112, 116, 117, 119, 120, 122], "electr": [1, 7, 45, 59, 60, 61, 72, 74, 76, 78, 103, 104, 105, 106, 107, 109, 122, 123, 124], "grid": [1, 5, 6, 7, 10, 16, 19, 20, 21, 23, 26, 27, 28, 30, 33, 36, 39, 41, 42, 43, 45, 46, 48, 51, 52, 54, 58, 61, 62, 74, 78, 89, 97, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], "thu": [1, 2, 41], "support": [1, 7, 16, 18, 33, 35, 52, 86, 92, 111, 112, 113, 122, 125, 128], "mission": 1, "help": [1, 3, 6, 7, 19, 20, 21, 41, 60, 104, 112, 113, 122, 123, 125], "world": [1, 2, 112], "net": [1, 9, 10, 16, 19, 20, 45, 70, 89, 108, 111, 112], "zero": [1, 10, 19, 20, 24, 28, 55, 58, 60, 106, 112], "greenhous": [1, 45], "gase": [1, 45], "emiss": [1, 8, 9, 16, 43, 44, 106, 107, 112], "new": [1, 2, 3, 6, 9, 10, 16, 18, 20, 22, 24, 27, 28, 35, 36, 52, 58, 60, 61, 62, 96, 104, 112, 122, 123, 125, 126], "visit": 1, "our": [1, 2, 3, 6, 20, 58, 60, 61, 101, 108, 112, 113, 115, 126, 127], "websit": [1, 3, 7, 19, 20, 82, 101, 103, 112, 126, 128], "learn": [1, 3], "organ": 1, "There": [1, 3, 7, 60, 61, 112, 121, 122, 123, 125, 127, 128], "shortag": 1, "work": [1, 2, 3, 58, 60, 78, 112, 122, 125, 127, 128], "some": [1, 2, 19, 20, 30, 60, 61, 72, 103, 108, 112, 122, 123, 125, 127], "want": [1, 2, 3, 7, 16, 28, 122, 123, 126, 127, 128], "sourc": [1, 2, 3, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 64, 65, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 113, 122, 126, 127], "aim": [1, 2, 7], "decarbon": [1, 107, 112], "reach": [1, 3, 70, 112], "best": [1, 3, 105, 112, 128], "join": [1, 3, 7, 19, 20, 21, 30, 74], "fill": [1, 3, 28, 74, 103, 112, 126], "form": [1, 2, 35, 41, 70, 76, 90, 96, 108, 111, 112, 115, 119, 126], "introduc": [1, 2], "yourself": [1, 122, 123, 126], "discuss": [1, 3, 107, 112], "potenti": [1, 20, 22, 28, 52, 55, 104, 112], "let": [1, 2, 60, 61, 122, 125], "know": [1, 2, 3, 18, 97], "code": [1, 4, 6, 7, 16, 18, 19, 20, 21, 60, 61, 74, 82, 86, 96, 107, 112, 126], "conduct": [1, 3, 7, 16, 19, 20, 112], "befor": [1, 2, 3, 7, 9, 11, 16, 24, 32, 34, 42, 52], "compil": 1, "would": [1, 2, 3, 6, 35, 105, 112, 113, 122, 124], "love": 1, "each": [1, 2, 4, 6, 7, 9, 10, 16, 18, 19, 20, 21, 30, 33, 35, 36, 41, 45, 52, 55, 58, 60, 61, 62, 74, 76, 78, 82, 86, 89, 96, 97, 101, 104, 105, 107, 109, 110, 111, 112, 115, 119, 121, 122, 123, 125, 126, 127, 128], "repositori": [1, 3, 122, 123, 127, 128], "found": [1, 3, 19, 20, 24, 26, 36, 39, 43, 45, 51, 54, 55, 74, 90, 96, 97, 103, 104, 112, 122, 123, 125, 128], "good": [1, 2, 5, 18, 60, 62, 126], "first": [1, 2, 3, 7, 10, 14, 16, 18, 24, 27, 28, 30, 41, 55, 74, 78, 92, 96, 97, 99, 108, 112, 115, 122, 123, 125, 126, 127, 128], "label": [1, 2, 3, 9, 16, 20, 21, 43, 44], "prerequisit": 1, "along": [1, 2, 16, 19, 20, 60, 61, 103, 112, 115, 122, 127, 128], "difficulti": 1, "assist": 1, "decis": [1, 2, 104, 112], "t": [1, 2, 5, 6, 9, 16, 19, 20, 28, 35, 36, 43, 60, 61, 86, 89, 90, 92, 99, 106, 111, 112, 121, 122, 123, 125], "find": [1, 2, 7, 19, 20, 22, 26, 30, 54, 74, 82, 91, 122, 123, 126], "ideal": 1, "someth": [1, 2, 6], "els": [1, 2], "mind": 1, "benefit": 1, "keep": [1, 2, 3, 6, 78, 122, 125, 126], "expect": [1, 2, 6, 28, 55, 58, 60, 92, 107, 112], "guid": [1, 2, 7, 18, 122, 123, 125, 128], "present": [2, 3, 4, 5, 7, 16, 20, 28, 35, 36, 58, 60, 61, 74, 96, 104, 112, 126], "write": [2, 3, 4, 5, 23, 24, 30, 35, 72, 97], "design": [2, 3, 20, 21, 22, 23, 35, 58, 78, 86, 97], "In": [2, 3, 4, 5, 6, 7, 18, 59, 60, 86, 97, 104, 107, 112, 122, 126, 127], "short": [2, 4, 5, 20, 22, 112, 126], "re": [2, 70, 72, 126], "invent": 2, "wheel": 2, "most": [2, 3, 18, 35, 36, 70, 107, 111, 112, 122, 123, 127, 128], "librari": [2, 112, 115, 122, 123], "plu": [2, 27, 28, 97, 112, 121, 122], "matur": 2, "third": [2, 14, 112], "parti": 2, "packag": [2, 3, 5, 7, 19, 20, 60, 61, 104, 112, 115, 122, 123, 125, 128], "alreadi": [2, 7, 9, 18, 97, 122, 125, 126, 127], "veri": [2, 4], "respons": [2, 99, 112], "principl": 2, "simpl": [2, 10, 19, 20, 70, 92, 96, 112, 115, 126], "onli": [2, 6, 10, 16, 18, 19, 20, 28, 33, 35, 45, 58, 60, 61, 62, 70, 78, 86, 108, 112, 121, 122, 124, 125, 126, 127, 128], "therefor": [2, 3, 89, 112], "chang": [2, 6, 10, 18, 23, 27, 28, 33, 35, 41, 45, 52, 61, 62, 104, 112, 126, 127], "data": [2, 4, 6, 7, 8, 9, 10, 13, 16, 24, 27, 28, 30, 35, 39, 41, 43, 45, 46, 48, 51, 52, 54, 55, 58, 59, 62, 64, 70, 71, 72, 74, 75, 76, 78, 82, 84, 86, 89, 90, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128], "process": [2, 20, 21, 24, 41, 52, 58, 60, 61, 82, 101, 103, 104, 122, 125, 126], "output": [2, 6, 7, 16, 18, 19, 20, 23, 24, 28, 36, 52, 55, 76, 78, 82, 92, 97, 99, 122, 125, 127], "debug": 2, "becaus": [2, 6, 28, 30, 76], "anywher": [2, 78], "codebas": [2, 126], "constant": [2, 5, 23, 35, 43, 55, 63, 70, 96, 111, 112, 121, 122], "fine": 2, "though": [2, 60, 62, 122, 123], "wari": 2, "do": [2, 3, 4, 28, 60, 61, 70, 76, 122, 123, 126, 127], "modifi": [2, 16, 33, 41, 52, 60, 61, 96], "local": [2, 3, 23, 24, 35, 41, 51, 55, 76, 108, 112, 122, 123, 126, 127], "variabl": [2, 4, 5, 24, 55, 72, 96, 97, 112, 123, 126], "argument": [2, 6, 16, 24, 30, 35, 51, 54, 55, 112, 113, 122, 125], "pass": [2, 10, 16, 24, 28, 30, 35, 41, 54, 58, 60, 86, 92, 97, 122, 125], "refer": [2, 4, 26, 28, 33, 35, 36, 45, 54, 58, 60, 62, 70, 72, 76, 104, 112, 115], "perform": [2, 6, 7, 30, 58, 60, 61, 62, 70, 72, 101, 106, 112, 122, 125, 126], "o": [2, 19, 20, 21, 69, 122, 125, 128], "call": [2, 30, 52, 61, 62, 70, 75, 97, 122, 125, 126, 127], "isol": [2, 128], "random": [2, 54, 74, 75], "number": [2, 6, 10, 16, 19, 20, 24, 28, 33, 35, 36, 45, 48, 52, 54, 60, 61, 62, 70, 74, 75, 76, 78, 82, 86, 89, 97, 112, 122, 125], "gener": [2, 3, 4, 6, 7, 8, 9, 13, 16, 18, 22, 23, 24, 26, 30, 33, 35, 36, 41, 45, 52, 54, 55, 58, 59, 61, 70, 72, 74, 78, 89, 92, 95, 96, 97, 99, 104, 105, 107, 108, 110, 111, 114, 121, 122, 123, 124, 125, 127, 128], "solut": [2, 7, 10], "pure": 2, "whenev": 2, "given": [2, 6, 10, 16, 18, 19, 20, 24, 26, 28, 30, 33, 35, 36, 41, 52, 54, 55, 60, 62, 70, 72, 76, 86, 89, 91, 92, 96, 99, 101, 107, 112, 119, 122, 125, 127], "same": [2, 3, 4, 5, 6, 10, 16, 28, 33, 35, 39, 60, 62, 72, 76, 89, 96, 97, 101, 108, 109, 112, 115, 122, 123, 125, 126, 127, 128], "input": [2, 5, 6, 7, 9, 10, 13, 16, 19, 20, 23, 26, 27, 28, 30, 33, 51, 52, 54, 55, 61, 72, 74, 76, 78, 89, 115, 122, 123, 125, 127], "alwai": [2, 5, 10, 19, 20, 78], "impur": 2, "inevit": 2, "read": [2, 3, 4, 6, 23, 24, 39, 43, 72, 86, 96, 97], "file": [2, 3, 5, 6, 16, 24, 28, 30, 35, 39, 43, 46, 51, 52, 58, 60, 61, 62, 64, 70, 74, 75, 76, 78, 82, 84, 86, 96, 97, 99, 105, 112, 122, 123, 125, 126, 127], "databas": [2, 91, 113, 119], "user": [2, 7, 16, 18, 28, 35, 55, 60, 61, 64, 72, 76, 92, 97, 104, 122, 123, 127, 128], "etc": [2, 3, 16, 20, 21, 30, 36, 60, 61, 126], "But": 2, "far": [2, 18, 30, 78], "awai": [2, 30], "break": 2, "swap": 2, "materi": [2, 85, 86], "mostli": 2, "summari": [2, 45, 126], "content": [2, 127], "articl": [2, 112, 115], "detail": [2, 3, 7, 16, 30, 35, 97, 105, 106, 107, 110, 112, 118, 122, 123, 126], "go": [2, 3, 18, 126], "often": [2, 58, 60], "think": [2, 3], "struggl": 2, "caus": 2, "lack": [2, 18], "fundament": 2, "knowledg": 2, "secret": 2, "techniqu": 2, "quit": 2, "easi": [2, 76], "complic": 2, "expens": 2, "complex": [2, 6, 58, 60, 86, 108, 112], "result": [2, 6, 7, 18, 24, 30, 35, 41, 52, 55, 61, 62, 70, 74, 99, 104, 105, 109, 112, 126, 127], "poorli": 2, "untest": 2, "testabl": [2, 3], "just": [2, 6, 7, 33, 35], "less": [2, 6, 16, 27, 112, 121, 122, 124], "troublesom": 2, "itself": [2, 122, 125, 128], "robust": 2, "easier": [2, 78], "ecosystem": 2, "wonder": 2, "place": [2, 4, 33, 60, 61, 96, 112], "full": [2, 19, 20, 35, 48, 52, 59, 60, 105, 112, 122, 125, 127], "ha": [2, 3, 6, 7, 9, 10, 16, 20, 22, 24, 28, 35, 52, 59, 60, 61, 78, 97, 104, 105, 108, 111, 112, 122, 123, 125, 126, 127], "been": [2, 6, 9, 20, 22, 60, 61, 78, 108, 112, 122, 123, 125], "mani": [2, 5, 60, 62, 97, 107, 112, 115, 126, 128], "case": [2, 6, 7, 14, 16, 18, 30, 35, 55, 72, 86, 112, 122, 123, 127], "dozen": 2, "over": [2, 10, 16, 20, 22, 99, 112, 115, 118, 121, 122], "year": [2, 20, 22, 30, 64, 72, 76, 78, 92, 96, 104, 105, 107, 113, 117, 122, 125], "gone": 2, "rigor": 2, "ensur": [2, 3, 6, 24, 28, 41, 52, 55, 76, 127, 128], "accur": [2, 107, 112], "effici": [2, 7, 36, 43, 44, 60, 61, 72, 78, 105, 121, 122], "document": [2, 4, 7, 18, 19, 20, 35, 106, 112, 119, 122, 123, 125, 126], "By": [2, 122, 125, 126], "advantag": [2, 7], "focu": [2, 16], "improv": [2, 3, 72, 112, 126], "qualiti": 2, "thing": [2, 3, 60, 62, 70], "novel": 2, "rather": [2, 3, 76, 122, 125], "both": [2, 3, 5, 16, 28, 35, 45, 60, 61, 62, 76, 89, 112, 122, 123, 124, 125, 127, 128], "duplic": 2, "python": [2, 4, 7, 20, 60, 112, 113, 115, 127], "oper": [2, 24, 35, 41, 60, 61, 101, 104, 107, 112, 120, 121, 122, 123], "arrai": [2, 16, 41, 78, 96, 97, 112, 115], "matric": 2, "un": 2, "probabl": [2, 126], "numpi": [2, 5, 6, 9, 10, 16, 74, 78, 89, 96, 97], "scipi": 2, "tabl": [2, 13, 19, 20, 24, 27, 28, 33, 35, 36, 41, 45, 52, 61, 62, 109, 112, 127], "panda": [2, 4, 5, 6, 9, 10, 13, 16, 19, 20, 21, 24, 27, 28, 30, 33, 35, 39, 41, 43, 46, 51, 52, 54, 55, 59, 60, 62, 70, 72, 74, 76, 78, 86, 89, 90, 92, 94, 95, 96, 97, 99, 122, 125], "analyz": [2, 5, 8, 16, 19, 20, 21, 23, 26, 28, 33, 54, 58, 61, 89, 127], "collect": [2, 16, 24, 43, 54, 78, 112], "node": [2, 16, 30, 48, 52, 105, 112], "connect": [2, 3, 6, 24, 33, 35, 41, 60, 61], "networkx": 2, "It": [2, 4, 5, 55, 60, 61, 62, 74, 92, 105, 112, 122, 125], "requir": [2, 3, 5, 28, 35, 36, 41, 62, 82, 112, 116, 123, 125, 127], "manual": [2, 6, 18, 60, 61, 62, 75, 122, 125, 126, 128], "implement": [2, 35, 60, 61, 64], "overlap": [2, 78], "substanti": [2, 112], "especi": [2, 28, 128], "suggest": [2, 126], "being": [2, 3, 6, 9, 16, 52, 55, 58, 60, 61, 62, 76, 78, 82, 97, 105, 112, 127], "merg": [2, 3, 27, 30, 126], "familiar": [2, 3, 7, 126], "okai": 2, "unfamiliar": 2, "abl": [2, 6, 112, 122, 123, 126, 127], "snippet": [2, 18, 19, 20, 60, 61], "git": [2, 3, 7, 18, 122, 123, 127], "branch": [2, 6, 13, 16, 19, 20, 23, 27, 30, 33, 35, 39, 41, 52, 55, 59, 60, 61, 62, 121, 122], "even": [2, 5, 111, 112], "simplifi": [2, 30, 112], "pre": [2, 16, 18, 74], "submit": [2, 3, 103, 112], "pull": [2, 3, 30, 112], "appreci": 2, "method": [2, 3, 4, 9, 10, 11, 16, 19, 20, 24, 28, 30, 32, 33, 34, 35, 42, 58, 60, 61, 74, 86, 108, 111, 113, 114, 128], "instanti": [2, 30, 35, 52, 60, 61, 86, 122, 123], "small": [2, 6, 16, 111, 112], "portion": [2, 60, 61, 108, 112], "applic": [2, 28, 55], "verifi": [2, 6, 24, 122, 123], "its": [2, 3, 41, 60, 61, 70, 74, 102, 105, 107, 108, 112, 121, 122, 127], "independ": [2, 16, 28, 58, 60, 101, 109, 112], "part": [2, 18, 35, 76, 99, 101, 104, 112, 117, 126], "everyth": [2, 35], "togeth": [2, 3, 7, 16, 33, 58, 60, 107, 112, 126], "typic": [2, 105, 107, 112, 126], "three": [2, 6, 7, 60, 61, 104, 111, 112, 115], "check": [2, 8, 9, 18, 23, 28, 43, 75, 84, 86, 101, 109, 112, 122, 123, 126], "return": [2, 4, 6, 9, 10, 13, 16, 19, 20, 24, 26, 27, 28, 30, 33, 35, 36, 39, 41, 43, 45, 46, 48, 51, 52, 54, 55, 58, 60, 62, 64, 65, 70, 72, 74, 76, 78, 86, 89, 90, 91, 92, 94, 95, 96, 97, 99], "valu": [2, 6, 9, 10, 13, 16, 19, 20, 21, 23, 24, 27, 28, 30, 33, 35, 36, 39, 41, 45, 55, 58, 60, 62, 70, 72, 74, 76, 78, 86, 89, 90, 92, 96, 103, 112, 115, 121, 122, 125], "match": [2, 6, 18, 24, 26, 28, 33, 35, 60, 61, 74, 76, 78, 82, 89, 99, 112, 122, 125], "throw": 2, "except": [2, 18, 24, 28, 58, 60, 63, 64, 70, 95], "goe": 2, "wrong": [2, 6, 60, 61], "here": [2, 7, 13, 18, 36, 45, 60, 61, 75, 89, 102, 104, 112, 116, 122, 123, 126, 127, 128], "super": 2, "def": [2, 4, 6], "my_func": 2, "val": 2, "test_my_func": 2, "5": [2, 6, 13, 14, 16, 19, 20, 21, 33, 35, 36, 60, 61, 70, 78, 82, 112, 122, 123, 127], "returned_v": 2, "expected_result": 2, "7": [2, 6, 76, 112, 117, 128], "assert": [2, 6], "info": [2, 16, 26, 33, 35, 36, 46, 51, 54, 94, 97], "imagin": 2, "program": [2, 76, 106, 112, 122, 123, 125, 127], "smart": [2, 78, 105], "home": [2, 55, 78, 112, 122, 123], "microcontrol": 2, "automat": [2, 3, 5, 18, 24, 52, 121, 122, 125, 126, 128], "turn": [2, 107, 112], "light": [2, 76, 78, 106, 107], "backyard": 2, "motion": 2, "detect": [2, 6, 10, 30, 33, 74, 103, 112], "night": 2, "start": [2, 3, 7, 9, 16, 18, 26, 30, 54, 55, 58, 60, 61, 74, 78, 89, 97, 99, 112, 121, 122, 123, 125], "bottom": [2, 16], "string": [2, 9, 16, 28, 33, 35, 36, 60, 61, 62, 64, 74, 75, 76, 89, 97, 122, 125], "represent": 2, "approxim": [2, 20, 22, 58, 60, 86, 103, 112], "dai": [2, 9, 16, 20, 21, 74, 76, 78, 92, 105], "morn": 2, "afternoon": 2, "get_time_of_dai": 2, "datetim": [2, 9, 10, 16, 35, 74, 89, 97, 99], "now": [2, 6, 7, 18, 41, 127], "hour": [2, 4, 6, 9, 10, 16, 19, 20, 28, 33, 36, 45, 52, 74, 76, 78, 96, 97, 99, 111, 112, 116, 117, 119, 120, 121, 122, 124, 125], "6": [2, 6, 9, 16, 20, 21, 48, 78, 105, 112, 122, 124], "12": [2, 6, 16, 45, 89, 99, 112], "18": [2, 4, 16, 45, 112], "look": [2, 6, 18, 33, 43, 74, 86, 112, 119, 122, 123], "difficult": [2, 126], "proper": [2, 60, 62, 76], "base": [2, 3, 4, 6, 11, 16, 24, 26, 28, 30, 32, 33, 34, 35, 36, 39, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 58, 60, 61, 65, 70, 72, 74, 76, 78, 86, 89, 92, 95, 96, 97, 99, 104, 105, 112, 119, 121, 122, 126], "essenti": [2, 28], "hidden": 2, "control": [2, 97], "everi": [2, 9, 16, 78, 82, 105, 112, 118, 120], "run": [2, 3, 5, 6, 7, 18, 24, 28, 52, 92, 105, 112, 113, 121, 123, 126, 128], "might": [2, 76], "subsequ": [2, 6, 18, 112], "produc": [2, 26, 60, 61, 78, 82, 84, 109, 112, 119], "Such": 2, "imposs": 2, "intern": [2, 3, 33, 35, 55, 101, 112, 116], "logic": [2, 28, 70, 122, 125], "actual": [2, 16, 110, 112], "system": [2, 7, 16, 35, 36, 59, 60, 86, 101, 104, 105, 107, 120, 123, 127, 128], "date": [2, 9, 60, 61, 64, 74, 89, 92, 97, 99, 104, 112, 113, 120, 122, 125, 126], "test_get_time_of_day_at_6am_returns_morn": 2, "setup": [2, 3, 10, 11, 26, 32, 33, 34, 35, 42, 122, 123, 127], "am": [2, 16], "arrang": [2, 3, 45, 86], "phase": [2, 86], "empti": [2, 16, 82], "noth": [2, 28, 74], "initi": [2, 23, 52, 54, 55, 60, 61, 74, 78, 99, 112, 118, 120, 121, 122, 125, 127], "time_of_dai": 2, "final": [2, 4, 5, 6, 58, 60, 61, 78, 99, 105, 112, 122, 123, 125], "teardown": 2, "roll": [2, 16, 121, 122], "back": [2, 3, 6, 16, 24, 52, 104, 112, 126, 127], "lot": 2, "trivial": 2, "unreli": 2, "sinc": [2, 5, 6, 7, 10, 18, 30, 58, 60, 111, 112, 115, 119, 122, 124, 126], "fail": [2, 70], "bug": [2, 6, 126], "under": [2, 107, 112], "due": [2, 6, 18, 28, 78, 104, 107, 112], "guarante": 2, "fast": [2, 112, 126], "between": [2, 4, 10, 16, 27, 28, 30, 55, 58, 60, 61, 62, 70, 72, 74, 78, 86, 92, 96, 97, 113, 126], "integr": [2, 3, 7, 24, 105, 107, 112, 113, 114, 122, 126], "pretend": 2, "edg": [2, 9, 74, 86], "particular": [2, 6, 52, 60, 62, 112, 115], "low": [2, 10, 60, 61, 72], "api": [2, 3, 54, 74, 75, 92, 99, 103, 112, 116, 122, 123], "suffer": 2, "sever": [2, 3, 7, 19, 20, 101, 112, 121, 122, 123, 126], "tightli": 2, "coupl": [2, 6, 60, 61, 122, 123], "concret": [2, 112, 113], "reus": 2, "retriev": [2, 55, 92, 97, 99, 112, 115, 118, 120], "machin": [2, 51, 76, 127], "execut": [2, 23, 24, 60, 61, 122, 125, 126, 127], "tight": 2, "primari": [2, 72], "root": [2, 3, 6, 24, 55, 82, 112, 113, 127], "violat": [2, 111, 112, 121, 122], "srp": 2, "multipl": [2, 3, 24, 60, 61, 101, 104, 105, 112, 127], "consum": [2, 112], "anoth": [2, 5, 18, 24, 33, 58, 60, 122, 123, 125, 126], "indic": [2, 6, 7, 10, 16, 27, 30, 35, 36, 43, 46, 52, 59, 60, 62, 74, 76, 78, 89, 91, 97, 104, 105, 106, 112], "perspect": 2, "either": [2, 9, 10, 16, 24, 28, 30, 33, 35, 51, 52, 54, 58, 60, 61, 62, 74, 76, 78, 86, 101, 112, 121, 122, 123, 126, 127], "adjust": [2, 30, 35, 78, 112], "li": 2, "job": 2, "done": [2, 3, 4, 60, 61, 96, 122, 123, 126, 127, 128], "must": [2, 3, 5, 6, 10, 16, 18, 35, 36, 54, 58, 60, 62, 112, 115, 122, 125, 126], "line": [2, 3, 5, 16, 19, 20, 21, 22, 24, 30, 33, 35, 52, 59, 60, 61, 62, 64, 74, 85, 86, 97, 121, 122, 123, 125, 126], "understand": [2, 6, 97, 126], "come": [2, 7, 20, 22, 45, 112, 128], "signatur": 2, "alon": 2, "enough": [2, 6], "predict": [2, 7, 112, 113, 120], "cannot": 2, "mere": [2, 76], "necessari": [2, 41, 48, 70, 72, 78, 107, 112, 122, 123, 124, 125, 127], "whole": [2, 86, 97, 107, 111, 112], "sequenc": [2, 16], "earlier": 2, "unravel": 2, "stuff": 2, "becom": [2, 112], "headach": 2, "great": 2, "fulli": 2, "date_tim": 2, "2015": [2, 45, 74], "31": [2, 60, 61, 89, 99], "06": [2, 30, 112, 113], "00": [2, 54, 60, 61, 89], "whoever": 2, "move": [2, 23, 105, 106, 112, 126], "chain": 2, "invers": 2, "wherebi": 2, "object": [2, 3, 5, 10, 11, 16, 19, 20, 24, 26, 28, 33, 35, 36, 39, 41, 43, 45, 46, 48, 51, 52, 54, 55, 58, 61, 62, 64, 70, 72, 74, 76, 86, 89, 91, 92, 95, 97, 99, 107, 112], "suppli": [2, 28, 30, 112], "kei": [2, 10, 16, 24, 28, 30, 33, 35, 36, 39, 41, 52, 55, 74, 82, 90, 92, 99, 107, 112, 113, 116, 122, 125, 127], "point": [2, 30, 55, 58, 60, 74, 76, 86, 92, 112, 119, 122, 123, 125], "ioc": 2, "separ": [2, 5, 16, 55, 76, 92, 104, 108, 112, 122, 123, 128], "happen": [2, 7, 18, 74, 78, 107, 112], "increas": [2, 16, 20, 22, 33, 35, 58, 60, 104, 112], "flexibl": [2, 35, 36, 52, 76, 82, 104, 107, 121, 122, 125], "modular": 2, "reduc": [2, 70, 112, 126], "compon": [2, 4, 36, 39, 41, 55, 76, 96, 97, 99, 107, 112, 119, 120, 121, 122], "quick": [2, 7], "datetimegett": 2, "get_tim": 2, "date_time_gett": 2, "mockdatetimegett": 2, "__init__": [2, 5], "self": [2, 35], "time_gett": 2, "product": [2, 45, 76, 97, 126], "life": 2, "howev": [2, 5, 128], "fake": [2, 54], "predefin": 2, "suitabl": [2, 60, 61], "scenario": [2, 4, 7, 9, 10, 11, 13, 16, 18, 23, 24, 26, 28, 30, 33, 35, 41, 51, 54, 58, 59, 72, 76, 89, 104, 112, 122, 125], "altern": [2, 126], "approach": 2, "thought": 2, "least": [2, 16, 35, 36, 112, 126], "procedur": [2, 96, 101, 112, 115], "paramet": [2, 4, 9, 10, 13, 16, 19, 20, 24, 26, 27, 28, 30, 33, 35, 36, 39, 41, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 58, 61, 64, 70, 72, 74, 76, 78, 82, 86, 89, 90, 91, 92, 96, 97, 99, 107, 112, 115, 125], "note": [2, 3, 7, 9, 16, 18, 20, 41, 60, 61, 62, 89, 108, 109, 111, 112, 113, 122, 123, 125, 126, 127, 128], "almost": 2, "matlab": [2, 122, 125], "java": 2, "lisp": 2, "rubi": 2, "get_date_time_method": 2, "lambda": 2, "As": [2, 7, 60, 61, 104, 107, 112, 113, 122, 124], "achiev": [2, 59, 60, 107, 112, 128], "longer": [2, 16, 112], "instead": [2, 6, 10, 16, 60, 62, 101, 112, 122, 125, 126, 127], "definit": [2, 101, 112], "trigger": 2, "outsid": [2, 30, 60, 62, 108, 112], "correctli": 2, "correspond": [2, 6, 16, 30, 35, 36, 39, 41, 60, 62, 76, 78, 82, 89, 97, 108, 112, 122, 125, 126], "pain": 2, "decept": 2, "reusabl": 2, "ll": [2, 18], "rare": 2, "realli": [2, 3], "replac": [2, 46, 74], "overridden": [2, 105, 112], "abstract": [2, 24, 35, 64], "toxic": 2, "foo": 2, "bar": [2, 16, 20, 21, 24], "eventu": [2, 3], "end": [2, 9, 16, 26, 33, 35, 36, 54, 55, 60, 61, 74, 76, 78, 89, 97, 99, 104, 106, 112, 121, 122, 125], "poison": 2, "entir": [2, 10, 16, 20, 22, 78, 89, 112, 116, 122, 124, 125, 126], "multipli": [2, 30, 33, 45, 105, 112], "ourselv": 2, "encumb": 2, "smell": 2, "anti": 2, "ugli": 2, "unpleas": 2, "manipul": 2, "configur": [2, 18, 23, 24, 55, 112, 115, 126, 127], "web": 2, "servic": [2, 76, 82, 101, 112, 117, 120], "elimin": 2, "altogeth": 2, "idea": [2, 7], "limit": [2, 35, 36, 52, 60, 61, 74, 78, 121, 122, 125], "much": [2, 3, 28, 58, 60], "hide": 2, "promot": 2, "extens": [2, 20, 35], "usag": [2, 55, 72, 74, 97, 112, 113, 123, 127], "inher": 2, "smarthomeset": 2, "cost_saving_en": 2, "fals": [2, 10, 13, 16, 20, 21, 28, 33, 35, 41, 52, 60, 61, 62, 70, 72, 76, 78, 96, 99, 122, 123, 125], "_swimmingpoolcontrol": 2, "heat_wat": 2, "doesn": [2, 36, 60, 61], "sure": [2, 3, 28, 122, 125, 126], "ve": 2, "seen": 2, "purpos": 2, "still": [2, 6, 101, 112, 122, 125, 127], "never": [2, 33], "circumfer": 2, "radiu": [2, 30, 85, 86], "math": 2, "pi": 2, "obscur": 2, "lie": 2, "unnecessarili": 2, "addit": [2, 6, 28, 58, 59, 60, 64, 76, 78, 97, 104, 107, 108, 112, 121, 122, 125, 127, 128], "duti": [2, 76, 78, 106, 107], "own": [2, 58, 60, 107, 112, 116, 126], "lifecycl": 2, "easili": [2, 6, 7, 122, 123, 128], "lifetim": 2, "suit": 2, "get_us": 2, "user_id": 2, "user_cach": 2, "instanc": [2, 6, 9, 10, 13, 16, 24, 26, 27, 28, 30, 33, 35, 39, 41, 52, 54, 55, 60, 61, 62, 64, 72, 89, 112, 122, 123, 125, 126], "_userservic": 2, "load_us": 2, "abov": [2, 3, 16, 19, 20, 52, 97, 99, 105, 111, 112, 116, 120, 126, 127], "cach": [2, 35, 55, 82, 84, 92], "hit": 2, "add": [2, 7, 16, 24, 27, 28, 33, 35, 36, 39, 41, 55, 60, 61, 64, 121, 122, 123, 126, 128], "miss": [2, 4, 28, 35, 74, 96, 97, 99, 103, 112, 113, 114, 126], "assum": [2, 9, 10, 28, 43, 72, 74, 86, 97, 112, 122, 125], "To": [2, 6, 60, 61, 62, 76, 104, 112, 119, 122, 123, 125, 126, 128], "overcom": 2, "clean": [2, 7, 16, 20, 22, 28, 58, 60, 101, 103, 104, 112], "usercach": 2, "after": [2, 24, 52, 60, 61, 70, 78, 112, 122, 125, 126, 127], "sound": 2, "is_my_dog_nearbi": 2, "my_id": 2, "dog_id": 2, "dog_loc": 2, "gp": 2, "get_loc": 2, "my_loc": 2, "distanc": [2, 4, 16, 23, 30, 35, 86, 112], "mi": [2, 112], "true": [2, 4, 9, 10, 16, 20, 21, 24, 28, 30, 33, 35, 39, 41, 48, 52, 60, 62, 70, 72, 78, 96, 126], "test_is_my_dog_nearby_returns_true_when_nearbi": 2, "figur": [2, 16, 45, 112], "123": 2, "456": 2, "locat": [2, 3, 4, 5, 6, 10, 16, 19, 20, 21, 24, 30, 35, 43, 45, 52, 55, 60, 61, 72, 74, 76, 78, 85, 86, 90, 92, 96, 97, 107, 108, 109, 111, 112, 115, 116, 121, 122, 123, 125, 127], "easiest": [2, 122, 123, 127], "onto": [2, 16, 105, 112, 126], "handl": [2, 6, 7, 10, 24, 52, 60, 61, 70, 78, 108, 112, 122, 125], "bit": 2, "class_that_gets_current_loc": 2, "method_to_get_current_loc": 2, "simul": [2, 6, 7, 16, 24, 52, 60, 61, 92, 105, 107, 112, 115, 123, 124, 127], "id": [2, 4, 6, 10, 16, 24, 28, 30, 33, 35, 36, 39, 43, 46, 48, 51, 52, 55, 58, 59, 60, 61, 72, 74, 76, 82, 89, 112, 122, 125], "coord": 2, "thrill": 3, "decid": [3, 122, 125], "softwar": [3, 7, 60, 123, 126, 127], "wrote": [3, 7, 117], "consist": [3, 6, 35, 60, 61, 107, 112, 121, 122], "standard": [3, 24, 28, 60, 62, 86, 96, 112, 119], "henc": [3, 74, 122, 123], "facilit": [3, 78], "order": [3, 6, 7, 16, 24, 76, 97, 107, 112, 122, 123], "structur": [3, 35, 36, 55, 76, 99, 112, 126], "item": [3, 16, 58, 60, 106, 112], "make": [3, 7, 16, 28, 74, 112, 126, 128], "thank": 3, "instal": [3, 7, 18, 55, 90, 125, 126], "github": [3, 7, 20, 60, 112, 122, 123, 127], "workflow": [3, 112, 126], "section": [3, 5, 7, 14, 45, 86, 105, 112, 122, 123, 126, 127], "explain": 3, "page": [3, 45, 112, 122, 123, 126], "navig": 3, "identifi": [3, 10, 19, 20, 33, 76, 82, 90, 108, 112], "belong": [3, 7, 60, 62, 74, 101, 112, 115], "stem": 3, "feel": 3, "request_softwar": 3, "clear": [3, 23, 35, 60, 61], "choos": [3, 76, 122, 123], "tab": [3, 45], "templat": [3, 23, 55, 108, 111, 112, 127], "select": [3, 10, 16, 33, 52, 60, 61, 76, 78, 126], "regard": [3, 112], "click": [3, 126], "dataset": [3, 74, 78, 105, 113, 114], "absolut": [3, 4, 5, 10, 19, 20], "certain": [3, 9, 16, 35], "redistribut": 3, "obtain": [3, 16, 19, 20, 60, 62, 74, 75, 96, 101, 104, 105, 111, 112, 119], "download": [3, 4, 7, 16, 18, 23, 24, 43, 63, 64, 70, 72, 74, 75, 76, 82, 84, 92, 96, 99, 101, 102, 103, 112, 113, 122, 123, 126], "upload": [3, 23, 24, 35, 48, 82], "storag": [3, 10, 18, 19, 20, 21, 22, 23, 24, 28, 30, 35, 43, 44, 52, 54, 59, 60, 61, 70, 82, 108, 112, 121, 122, 125, 127], "reli": [3, 20, 111, 112], "unless": [3, 121, 122, 126, 127], "wast": 3, "center": [3, 16, 86, 112, 113, 120, 122, 123], "below": [3, 4, 6, 7, 10, 19, 20, 22, 35, 52, 59, 60, 61, 105, 112, 126, 128], "prereis": [3, 4, 7, 60, 61, 105, 113], "powersimdata": [3, 4, 5, 6, 7, 9, 10, 13, 16, 19, 20, 21, 58, 59, 61, 62, 89, 112, 122, 125, 126, 127], "postreis": [3, 5, 7, 19, 21, 60, 61, 127], "field": [3, 51, 54, 72], "daniel": 3, "olsen": 3, "benjamin": 3, "rouill\u00e9": 3, "d": [3, 6, 9, 16, 20, 21, 74, 106, 112, 122, 125], "orfeuil": 3, "assign": [3, 9, 16, 35, 74, 112], "ben": 3, "legal": 3, "ad": [3, 10, 16, 18, 19, 20, 28, 36, 41, 54, 59, 60, 61, 74, 76, 78, 112, 118, 121, 122, 123, 125, 126], "attribut": [3, 24, 46, 51, 52, 59, 60, 92, 97], "directori": [3, 5, 16, 18, 24, 43, 51, 55, 74, 82, 92, 96, 97, 112, 113, 122, 123, 125, 127, 128], "collabor": [3, 16, 20, 22, 28, 58, 60], "recommend": [3, 4, 122, 123, 126, 127, 128], "second": [3, 14, 16, 27, 28, 30, 51, 55, 70, 74, 92, 95, 97, 99, 112], "test": [3, 8, 9, 10, 13, 16, 23, 24, 26, 28, 30, 33, 35, 36, 39, 44, 46, 52, 55, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 74, 76, 78, 81, 82, 85, 86, 90, 92, 96, 97, 99, 126, 128], "unit": [3, 13, 30, 45, 52, 55, 59, 60, 61, 76, 86, 106, 112, 115, 121, 122, 125], "group": [3, 6, 78, 127], "folder": [3, 6, 20, 21, 24, 82, 112, 122, 123, 125], "modul": [3, 4, 5, 6, 7, 19, 20, 21, 104, 105, 107, 112], "pytest": [3, 5, 6], "m": [3, 9, 16, 96, 97, 99, 106, 112, 113, 121, 122, 127], "marker": [3, 16], "command": [3, 24, 64, 65, 122, 123, 126, 127], "deselect": 3, "infrastructur": [3, 106, 112], "practic": 3, "mock": [3, 54, 94, 95], "rule": [3, 5], "wildcard": [3, 5], "import": [3, 6, 19, 20, 21, 22, 41, 58, 59, 60, 61, 62, 97, 122, 123, 125, 127, 128], "accord": [3, 28, 35, 74, 122, 123], "black": [3, 16], "style": [3, 126], "isort": [3, 5], "tox": [3, 5], "statement": 3, "function": [3, 4, 5, 6, 16, 19, 20, 21, 24, 28, 61, 62, 64, 70, 76, 78, 84, 97, 104, 105, 112, 125], "pep": [3, 5], "257": 3, "docstr": 3, "adopt": [3, 36, 106], "sphinx": [3, 4], "convent": [3, 108, 112, 126], "propos": 3, "hesit": 3, "subscrib": 3, "workspac": [3, 7], "stai": [3, 7], "updat": [3, 7, 16, 24, 35, 45, 46, 60, 62, 78, 112, 118, 120, 122, 123, 126], "tutori": [4, 7, 20, 22, 60, 126, 127], "encount": [4, 128], "That": [4, 112], "said": 4, "format": [4, 9, 16, 26, 30, 44, 46, 54, 64, 76, 90, 92, 97, 99, 112, 122, 123, 125, 126], "slightli": [4, 101, 108, 112, 127], "compact": 4, "what": [4, 7, 35, 97, 107, 112, 126, 127], "type": [4, 5, 6, 10, 16, 19, 20, 21, 26, 28, 30, 35, 36, 39, 45, 52, 54, 55, 58, 60, 61, 62, 70, 72, 76, 78, 86, 97, 105, 107, 110, 112, 115, 119, 122, 123, 126, 127], "encapsul": [4, 52], "descript": [4, 10, 20, 22, 112, 122, 125], "param": [4, 6, 41, 72], "paramtyp": 4, "paramnam": 4, "paramdescript": 4, "default": [4, 9, 10, 13, 16, 19, 20, 24, 28, 30, 33, 35, 41, 52, 55, 58, 60, 62, 72, 76, 78, 96, 97, 115, 122, 123, 125, 126, 128], "defaultparamv": 4, "returntyp": 4, "returndescript": 4, "mention": [4, 127], "referenc": 4, "uv1": [4, 55], "angular_dist": [4, 23, 55], "util": [4, 8, 9, 16, 19, 20, 21, 23, 24, 105, 112, 122, 125, 126, 127], "ll2uv": [4, 23, 55], "defin": [4, 5, 16, 28, 35, 52, 58, 60, 61, 72, 74, 78, 86, 112], "uv2": [4, 55], "calcul": [4, 6, 9, 10, 13, 19, 20, 26, 27, 28, 30, 33, 35, 45, 52, 54, 55, 58, 60, 61, 62, 70, 72, 78, 86, 89, 92, 96, 99, 105, 112, 115], "angular": [4, 55], "two": [4, 9, 10, 16, 20, 21, 26, 27, 28, 30, 54, 55, 58, 59, 60, 61, 62, 74, 82, 104, 122, 123, 125, 126], "vector": [4, 10, 55, 72], "func": [4, 16, 24], "float": [4, 6, 10, 13, 16, 26, 27, 28, 30, 33, 36, 54, 55, 70, 72, 78, 86, 91, 92, 96], "angl": [4, 55, 121, 122], "degre": [4, 55], "py": [4, 5, 78, 112, 113, 122, 125, 127], "path": [4, 16, 19, 20, 21, 24, 25, 28, 41, 43, 59, 60, 62, 64, 76, 78, 96, 99, 122, 123, 125, 127], "shown": [4, 16, 28, 60, 62, 112, 119], "gaussian": [4, 70, 96, 112, 113], "wind_farm": [4, 96, 97, 99], "inplac": [4, 33, 35, 96], "curv": [4, 10, 16, 19, 20, 21, 28, 30, 35, 36, 59, 61, 86, 96, 97, 111, 112, 119, 121, 122], "state": [4, 9, 10, 16, 19, 20, 22, 23, 26, 28, 33, 35, 36, 43, 46, 54, 58, 60, 61, 62, 70, 72, 76, 78, 89, 90, 96, 97, 101, 104, 105, 106, 108, 111, 112, 115, 119, 121, 122, 123, 125], "imput": [4, 63, 70, 112, 113, 114], "distribut": [4, 78, 96, 97, 107, 112, 119, 122, 123], "v": [4, 16, 20, 21, 28, 96, 97, 99, 119, 120, 121, 122, 123], "entri": [4, 10, 16, 24, 28, 33, 35, 36, 60, 61, 74, 89, 96, 112, 121, 122], "sampl": [4, 9, 96, 97, 112, 122, 123], "mean": [4, 9, 10, 19, 20, 24, 33, 36, 52, 86, 96, 112], "covari": [4, 96], "non": [4, 10, 19, 20, 58, 60, 74, 76, 96, 112, 119, 121, 122, 126], "month": [4, 9, 16, 89, 96], "datafram": [4, 6, 9, 10, 13, 16, 24, 27, 28, 30, 35, 39, 41, 43, 46, 51, 52, 54, 55, 59, 60, 62, 70, 72, 74, 76, 78, 86, 89, 90, 92, 94, 95, 96, 97, 99], "frame": [4, 6, 10, 13, 16, 24, 27, 28, 30, 35, 39, 41, 43, 46, 48, 51, 52, 58, 60, 70, 72, 74, 75, 86, 89, 90, 92, 94, 95, 96, 97, 99], "gather": [4, 26, 35, 36, 63, 105, 112], "winddata": [4, 63, 70], "rap": [4, 70, 96, 112, 114, 120], "retrieve_data": [4, 90, 92, 96, 97, 99], "wind": [4, 7, 16, 19, 20, 21, 28, 30, 35, 36, 39, 52, 54, 58, 59, 60, 61, 92, 96, 97, 99, 113, 114, 120, 121, 122, 123, 125], "farm": [4, 45, 60, 61, 96, 97, 112, 119], "bool": [4, 9, 10, 16, 24, 28, 30, 33, 39, 41, 48, 52, 70, 72, 76, 78, 92, 96, 99], "str": [4, 9, 10, 16, 24, 26, 28, 30, 33, 35, 36, 41, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 59, 60, 61, 64, 65, 70, 72, 74, 76, 78, 82, 86, 89, 92, 96, 97, 99], "averag": [4, 10, 16, 19, 20, 35, 45, 52, 60, 61, 74, 96, 97, 109, 112, 115, 119, 122, 125], "otherwis": [4, 10, 24, 30, 33, 52, 72, 86, 89, 96, 112, 115, 121, 122], "eiagov": [4, 71, 74], "copi": [4, 18, 24, 33, 52, 74, 76, 96, 112, 122, 123, 127], "quantcorn": 4, "wordpress": 4, "com": [4, 24, 55, 72, 112, 122, 123, 126], "2014": [4, 112], "11": [4, 20, 21, 112, 122, 123], "eia": [4, 70, 71, 82, 88, 95, 96, 97, 101, 103, 108, 109, 111, 112, 115, 119], "_": [4, 108, 109, 121, 122, 123], "token": [4, 74, 75], "word": [4, 46], "8": [5, 6, 16, 60, 61, 112, 122, 124], "ok": [5, 112], "change_t": [5, 23, 26, 33, 36, 58, 60, 61], "change_time_zon": [5, 8, 9, 16], "resample_time_seri": [5, 8, 9], "wherea": [5, 112, 115], "put": [5, 23, 55], "top": [5, 10, 19, 20, 33, 111, 112, 119, 126], "alphabet": 5, "checkformat": 5, "enclos": [5, 6, 20, 21, 30, 35, 39, 43, 52, 59, 60, 61, 112, 122, 123, 127, 128], "ini": [5, 127], "notifi": 5, "irregular": 5, "accomplish": [5, 60, 61], "task": [5, 60, 61, 126], "western": [5, 19, 20, 21, 22, 59, 60, 61, 76, 101, 108, 113, 122, 124], "don": [5, 16, 35, 89, 92, 111, 112], "network": [5, 7, 16, 20, 22, 23, 26, 35, 39, 40, 41, 52, 54, 59, 60, 61, 112, 115, 119, 121, 122], "usa_tamu": [5, 10, 23, 35, 43, 52, 54, 60, 61], "zone": [5, 9, 10, 16, 19, 20, 23, 26, 28, 30, 35, 36, 39, 43, 44, 52, 58, 59, 60, 61, 62, 72, 74, 76, 101, 102, 103, 105, 112], "unclear": 5, "namespac": 5, "confus": 5, "reader": [5, 39], "autom": [5, 128], "prevent": [5, 76], "collis": [5, 55], "wild": 5, "card": 5, "__all__": 5, "effect": [6, 60, 62, 121, 122], "understood": 6, "rest": [6, 30, 111, 112], "unexpect": 6, "valid": [6, 16, 28, 35, 39, 46, 60, 61, 64, 74, 76, 112, 119, 122, 125], "fix": [6, 10, 19, 20, 30, 36, 90, 103, 112, 115, 121, 122, 126], "problem": [6, 7, 112, 122, 125], "futur": [6, 7, 58, 60, 76, 82, 97, 104, 105, 106, 107], "speed": [6, 92, 96, 97, 99, 120], "instantli": 6, "deal": [6, 126], "toi": 6, "model": [6, 7, 16, 23, 26, 30, 33, 35, 36, 39, 45, 46, 52, 54, 58, 59, 60, 61, 72, 78, 97, 99, 101, 103, 105, 106, 107, 108, 110, 111, 116, 118, 120, 122, 125, 126], "variat": [6, 16, 105, 107, 112, 119], "aris": [6, 107, 112], "scale": [6, 16, 20, 21, 26, 28, 33, 35, 36, 58, 59, 60, 61, 78, 89, 105, 107, 119, 120], "yet": 6, "overal": [6, 7, 28, 30, 74, 101, 107, 112], "confirm": [6, 24, 52], "624754": 6, "better": [6, 7, 28, 60, 62, 126], "error": [6, 24, 52, 70, 122, 123], "ever": 6, "attempt": [6, 24, 70, 97, 126], "unexpectedli": 6, "discover": 6, "prefix": 6, "themselv": 6, "test_scale_capacity_argument_typ": 6, "scale_capac": 6, "argument_typ": 6, "helper": [6, 20, 21, 23, 26, 63, 71, 78, 85, 88, 96], "squar": [6, 72, 112, 116, 117, 120], "declar": 6, "test_help": [6, 23, 35, 55, 63, 64, 70, 85, 86, 90, 96, 97], "calculate_square_root": 6, "nth": 6, "int": [6, 10, 16, 24, 27, 28, 30, 33, 35, 36, 48, 51, 52, 54, 55, 60, 61, 70, 72, 74, 76, 78, 86, 92, 96, 122, 125], "princip": 6, "rais": [6, 9, 10, 16, 24, 26, 28, 30, 33, 35, 36, 39, 41, 43, 46, 51, 52, 54, 64, 70, 72, 74, 76, 78, 86, 89, 90, 97, 99], "typeerror": [6, 9, 16, 26, 28, 30, 33, 35, 36, 39, 41, 43, 46, 52, 70, 72, 76, 89, 90, 99], "valueerror": [6, 9, 10, 16, 26, 28, 30, 33, 35, 36, 39, 43, 46, 51, 52, 54, 64, 70, 72, 76, 78, 86, 89, 90, 97, 99], "neg": [6, 10, 16, 121, 122], "isinst": 6, "test_calculate_square_root_argument_typ": 6, "arg": [6, 16, 24, 30, 43, 55], "16": [6, 16, 112, 122, 124], "9": [6, 13, 19, 20, 36, 78, 112, 122, 123], "test_calculate_square_root_argument_valu": 6, "test_calculate_square_root": 6, "64": 6, "49": 6, "36": 6, "One": [6, 18, 52, 60, 61], "summar": [6, 8, 9, 19, 20, 28, 112, 126], "total": [6, 9, 10, 16, 19, 20, 21, 22, 26, 28, 30, 33, 54, 58, 60, 70, 72, 78, 89, 108, 110, 111, 112, 121, 122], "per": [6, 10, 13, 16, 35, 36, 45, 58, 60, 70, 72, 74, 78, 86, 97, 112, 122, 124, 126, 127], "bu": [6, 10, 16, 19, 20, 23, 30, 35, 39, 41, 52, 54, 59, 60, 61, 74, 101, 108, 112, 121, 122, 125], "relat": [6, 59, 60, 61, 78, 122, 123, 128], "summarize_plant_to_bu": [6, 23, 35], "pg": [6, 10, 16, 24, 51, 52, 54, 60, 61, 122, 125], "plant": [6, 10, 16, 23, 26, 27, 28, 30, 33, 35, 39, 43, 44, 58, 59, 60, 61, 62, 89, 90, 92, 97, 99, 108, 109, 110, 112, 115], "column": [6, 9, 10, 16, 19, 20, 21, 27, 28, 30, 35, 39, 41, 43, 45, 46, 48, 52, 58, 60, 70, 74, 75, 76, 78, 89, 90, 92, 96, 97, 99], "sum": [6, 9, 10, 20, 21, 30, 35, 36, 82, 108, 111, 112], "utc": [6, 9, 16, 74, 76, 89, 112], "timestamp": [6, 9, 10, 16, 20, 21, 26, 35, 54, 74, 76, 89, 112, 122, 125], "buse": [6, 16, 35, 36, 41, 59, 60, 61, 74, 107, 112, 121, 122], "build": [6, 16, 23, 28, 30, 35, 36, 39, 43, 48, 49, 50, 52, 55, 58, 60, 61, 72, 99, 102, 104, 107, 112, 122, 123, 126], "map": [6, 16, 20, 21, 24, 26, 28, 30, 36, 39, 43, 44, 52, 54, 59, 60, 74, 76, 82, 101, 103, 112, 119, 121, 122], "all_buses_in_grid": 6, "bus_id": [6, 35, 36, 60, 61], "row": [6, 16, 45, 76, 78, 92, 112, 122, 125], "buses_in_df": 6, "loc": 6, "transpos": 6, "whose": [6, 10, 35], "bus_data": [6, 70, 81], "groupbi": 6, "catalog": [6, 106, 112], "mockgrid": [6, 23, 54], "pd": [6, 19, 20, 21, 35, 36, 46, 92], "assert_array_equ": 6, "mock_grid": [6, 23, 30, 31, 35, 42], "plant_id": [6, 35, 36, 58, 60, 89, 90, 92, 99], "index": [6, 7, 9, 10, 16, 19, 20, 28, 30, 33, 35, 36, 46, 52, 74, 78, 86, 90, 92, 96, 97, 112, 121, 122, 125], "mock_plant": [6, 10, 11, 35, 42], "b": [6, 85, 86, 112, 121, 122, 126], "c": [6, 20, 21, 76, 85, 86, 106, 112, 121, 122, 127], "mock_bu": 6, "lat": [6, 10, 16, 27, 30, 35, 36, 55, 60, 61, 74, 90, 91, 92], "47": 6, "37": [6, 45], "40": [6, 16, 112, 119], "lon": [6, 10, 16, 27, 30, 35, 36, 55, 60, 61, 90, 91, 92], "122": 6, "74": 6, "mock_pg": [6, 10, 11, 23, 54], "date_rang": [6, 54], "2018": [6, 45, 76, 104, 112], "04": [6, 30, 112], "24": [6, 9, 45, 54, 76, 78, 112, 122, 124, 125], "freq": [6, 9, 54, 85, 86], "h": [6, 16, 36, 54, 74, 112, 113, 118, 121, 122, 125], "test_summarize_plant_to_bu": 6, "expected_return": [6, 42], "to_numpi": 6, "featur": [7, 126], "access": [7, 18, 19, 20, 24, 28, 35, 52, 61, 64, 76, 104, 107, 111, 112, 116, 117, 122, 123, 125, 127], "handi": 7, "mentor": 7, "research": 7, "scientist": 7, "engin": [7, 24, 45, 52, 60, 61, 111, 112, 122, 123, 125, 127], "who": [7, 126], "technologi": [7, 30, 35, 36, 45, 76, 90, 104, 106, 112, 115], "nice": 7, "overview": 7, "goal": [7, 20, 22, 58, 60, 112], "cool": [7, 72, 107, 112], "visual": [7, 16, 28], "clearli": 7, "mit": 7, "cc": [7, 45], "BY": 7, "zenodo": [7, 23, 48, 122, 123], "encourag": [7, 126], "effort": [7, 127], "mainli": 7, "focus": [7, 19, 20], "meaning": 7, "deploy": [7, 52, 55, 106, 112], "grown": 7, "while": [7, 18, 35, 59, 60, 104, 112, 114, 122, 125], "webpag": 7, "synthet": 7, "routin": 7, "demand": [7, 8, 10, 16, 19, 20, 26, 28, 35, 36, 39, 52, 54, 58, 60, 61, 74, 76, 78, 82, 89, 101, 103, 104, 105, 107, 108, 111, 121, 122, 125], "hydro": [7, 19, 20, 21, 28, 35, 36, 39, 52, 54, 60, 61, 70, 89, 108, 109, 110, 111, 121, 122, 123, 125], "solar": [7, 16, 19, 20, 21, 28, 30, 35, 36, 39, 52, 54, 58, 60, 61, 90, 92, 113, 114, 121, 122, 123, 125], "profil": [7, 24, 26, 28, 35, 36, 39, 41, 48, 52, 54, 60, 61, 72, 74, 76, 78, 89, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 121, 122, 125], "k": [7, 112, 121, 122, 125], "analysi": [7, 21, 45, 61, 72, 104, 112, 120, 128], "plot": [7, 8, 18, 28, 60, 62, 127, 128], "reis": [7, 90, 97, 99, 125, 126, 127], "jl": [7, 125, 126, 127], "last": [7, 78, 127], "julia": [7, 127], "next": [7, 16, 28, 97, 99, 105, 112], "architectur": [7, 24], "built": [7, 43, 60, 61, 105, 112, 122, 123], "framework": [7, 20, 59, 107, 112, 126, 127], "few": [7, 60, 61, 74, 105, 107, 112, 128], "option": [7, 16, 19, 20, 24, 28, 33, 35, 36, 52, 61, 78, 106, 112, 113, 122, 123, 125, 127, 128], "gurobi": [7, 24, 52, 125, 127], "licens": [7, 122, 123, 127], "mathemat": 7, "solver": [7, 24, 52, 122, 123, 125, 127], "dc": [7, 16, 35, 52, 60, 61, 112, 115, 122, 125], "optim": [7, 24, 41, 52, 78, 107, 121, 122, 123, 125], "dcopf": [7, 122, 125], "sign": [7, 92], "particip": 7, "how": [18, 28, 58, 60, 78, 97, 107, 112, 117, 126, 128], "regener": 18, "docker": 18, "blob": [18, 24, 35, 82], "contain": [16, 18, 23, 24, 28, 35, 36, 41, 52, 55, 59, 60, 62, 72, 74, 76, 78, 82, 86, 89, 92, 97, 99, 122, 123, 125, 127], "notebook": [18, 20, 21, 101, 103, 104, 108, 109, 110, 111, 117, 128], "cd": [18, 122, 123], "doc": [18, 54, 106, 112, 122, 123, 126], "compos": [18, 127], "browser": 18, "localhost": 18, "url": [18, 74, 76, 97, 98, 99, 112], "jupyt": [18, 128], "host": 18, "port": 18, "10001": 18, "insid": [18, 97], "simpli": [18, 105, 110, 111, 112], "bokeh": [16, 18, 20, 21], "save": [9, 16, 18, 24, 28, 35, 41, 64, 72, 76, 82, 107, 108, 112, 122, 125], "png": [16, 18], "powerflow": [13, 16, 18], "snapshot": [16, 18, 20, 21, 41], "notic": [18, 112], "cell": [18, 112], "jupyterlab": 18, "programmat": 18, "rerun": 18, "past": [18, 78, 112, 127], "popul": [18, 72, 82, 106, 112], "img2": 18, "similar": [16, 18, 28, 60, 62, 76], "img": 18, "compar": [10, 18, 19, 20, 21, 23, 26, 28, 30, 72], "categori": [16, 19, 20, 76, 78], "congest": [8, 9, 14, 19, 20, 26, 33, 35, 52, 54, 60, 61, 122, 125], "rm": [19, 20, 101, 112, 121, 122], "co": [19, 20, 45, 60, 61, 112], "_2": [19, 20], "NO": [19, 20, 45], "_x": [19, 20], "thermal": [16, 19, 20, 35, 45, 60, 61], "renew": [10, 16, 19, 20, 21, 28, 33, 35, 45, 58, 60, 61, 104, 105, 106, 122], "therein": [19, 20], "hourli": [9, 10, 13, 19, 20, 35, 60, 61, 72, 74, 78, 89, 97, 101, 102, 104, 108, 111, 112, 115, 118, 119, 120, 122, 123, 125], "surplu": [13, 19, 20], "calculate_congestion_surplu": [9, 13, 19, 20], "403": [19, 20, 21, 22, 58, 60], "congestion_surplu": [19, 20], "extent": [19, 20, 96], "get_util": [9, 13, 16, 19, 20], "get_grid": [19, 20, 21, 23, 35, 52, 54, 58, 60, 61], "pf": [13, 16, 19, 20, 24, 51, 52, 54, 122, 125], "get_pf": [19, 20, 23, 52, 54, 60, 61], "statist": [13, 19, 20, 106, 112], "generate_cong_stat": [9, 13, 16, 19, 20], "congestion_stat": [16, 19, 20], "branch_device_typ": [19, 20], "per_util1": [13, 19, 20], "per_util2": [13, 19, 20], "per_util3": [13, 19, 20], "fraction": [10, 16, 19, 20, 28, 58, 60, 72, 78, 105, 112], "threshold": [10, 13, 16, 19, 20, 74], "75": [13, 19, 20, 21, 60, 61], "99": [13, 19, 20], "bind": [8, 9, 13, 16, 19, 20, 33], "risk": [13, 16, 19, 20, 126], "uflag1": [19, 20], "uflag2": [19, 20], "uflag3": [19, 20], "05": [13, 19, 20, 36, 45, 112, 113], "sumflag": [13, 19, 20], "flag": [9, 13, 19, 20, 112, 113, 122, 125, 126], "dist": [16, 19, 20, 72], "length": [16, 19, 20, 24, 28, 55, 78, 85, 86, 97, 112, 121, 122, 125], "minimum": [10, 16, 19, 20, 28, 35, 36, 58, 60, 70, 92, 112, 121, 122], "maximum": [10, 16, 19, 20, 28, 35, 36, 60, 62, 96, 111, 112, 115, 121, 122], "ramp": [10, 19, 20, 121, 122], "constraint": [10, 19, 20, 60, 61, 78, 112], "pmax_constraint": [9, 10, 19, 20], "pmin_constraint": [9, 10, 19, 20], "ramp_constraint": [9, 10, 19, 20], "3287": [19, 20, 21, 22], "binding_pmin": [19, 20], "binding_pmax": [19, 20], "binding_ramp": [19, 20], "load": [10, 16, 19, 20, 28, 35, 36, 41, 48, 51, 52, 59, 60, 61, 62, 72, 74, 76, 78, 86, 90, 96, 101, 102, 103, 104, 105, 107, 112, 115, 121, 122, 123, 125, 127], "durat": [10, 19, 20, 35, 36, 60, 61, 121, 122, 124], "resourc": [10, 16, 19, 20, 21, 26, 28, 30, 35, 36, 42, 43, 44, 54, 58, 60, 61, 70, 104, 107, 121, 122, 125], "n": [10, 16, 19, 20, 21, 33, 36, 85, 86, 112], "calculate_nldc": [9, 10, 19, 20], "nldc": [10, 19, 20], "ng": [16, 19, 20, 21, 45, 60, 61], "coal": [16, 19, 20, 21, 45, 60, 61], "peak": [10, 19, 20, 104, 111, 112], "calculate_net_load_peak": [9, 10, 19, 20], "nlp": [19, 20], "nuclear": [19, 20, 21, 22], "50": [16, 19, 20, 21, 36, 45, 76, 112], "namepl": [10, 19, 20], "area": [9, 10, 16, 19, 20, 21, 26, 28, 33, 35, 36, 43, 54, 58, 60, 61, 62, 72, 78, 85, 86, 99, 103, 105, 106, 108], "get_capacity_by_resourc": [9, 10, 19, 20], "2497": [19, 20, 21, 22], "resources_capac": [19, 20], "ca": [19, 20, 21, 60, 61, 106, 112], "get_storage_capac": [9, 10, 19, 20], "1171": [19, 20, 21, 22], "storage_capac": [19, 20], "combin": [10, 19, 20, 24, 26, 35, 43, 55, 59, 60, 76, 112, 115], "sum_capacity_by_type_zon": [9, 10, 19, 20], "factor": [10, 16, 19, 20, 21, 26, 28, 30, 33, 35, 36, 45, 54, 58, 60, 61, 78, 89, 115, 121, 122], "fuel": [10, 16, 19, 20, 21, 35, 36, 45, 60, 61, 62, 70, 72, 76, 78, 105, 110], "get_capacity_factor_time_seri": [9, 10, 19, 20], "texa": [19, 20, 46, 59, 60, 62, 76, 105, 111, 113], "area_typ": [9, 10, 16, 19, 20, 26, 28, 35, 43, 54, 60, 62, 78], "interconnect": [9, 10, 16, 19, 20, 21, 22, 26, 28, 30, 35, 39, 42, 43, 44, 48, 49, 50, 52, 54, 58, 59, 60, 61, 62, 76, 89, 101, 102, 103, 108, 110, 111, 112, 113, 115, 122, 124], "sum_generation_by_type_zon": [9, 10, 19, 20], "3101": [19, 20, 21, 22], "sum_generation_by_st": [9, 10, 19, 20], "histor": [10, 16, 19, 20, 97, 101, 102, 108, 111], "inspect": [19, 20, 21, 60, 62], "summarize_hist_gen": [9, 10, 19, 20], "dirnam": [19, 20, 21], "getfil": [19, 20, 21], "hist_gen": [16, 19, 20], "read_csv": [19, 20], "2016_historical_usa_tamu_generation_gwh": [19, 20], "csv": [19, 20, 21, 24, 28, 30, 39, 43, 46, 52, 58, 60, 76, 78, 82, 92, 96, 112, 122, 125, 127], "index_col": [19, 20], "historical_gener": [19, 20], "to_list": [19, 20], "get_generation_time_series_by_resourc": [9, 10, 19, 20], "get_storage_time_seri": [9, 10, 19, 20], "generate_emissions_stat": [9, 10, 19, 20], "pollut": [10, 19, 20], "carbon": [10, 16, 19, 20, 21, 22, 45], "infer": [19, 20, 28, 60, 62], "ratio": [10, 19, 20, 28, 33, 36, 58, 60, 72, 90, 110, 112, 115], "mwh": [10, 19, 20, 26, 28, 35, 36, 45, 54, 60, 61, 112], "heat": [10, 19, 20, 45, 72, 74, 104, 107, 112], "rate": [10, 19, 20, 30, 36, 45, 78, 86], "intercept": [10, 19, 20], "decommit": [10, 19, 20], "de": [10, 19, 20, 82, 112], "off": [10, 19, 20, 126], "dioxid": [19, 20], "nox": [19, 20], "nitrogen": [19, 20], "oxid": [19, 20], "so2": [19, 20], "sulfur": [19, 20], "summarize_emissions_by_bu": [9, 10, 19, 20], "emission_by_resources_and_bu": [19, 20], "cost": [8, 9, 16, 19, 20, 21, 28, 30, 33, 35, 36, 45, 59, 61, 78, 106, 107, 112, 121, 122], "calculate_cost": [9, 10, 19, 20], "calculate_curtailment_time_seri": [9, 10, 19, 20, 21], "calculate_curtailment_time_series_by_resourc": [9, 10, 19, 20], "calculate_curtailment_time_series_by_area": [9, 10, 19, 20], "OR": [19, 20, 60, 61, 112], "nv": [19, 20, 60, 61, 112], "ut": [19, 20, 112], "long": [10, 19, 20, 55, 58, 60, 74, 78, 112], "calculate_curtailment_percentage_by_resourc": [9, 10, 19, 20], "calculate_curtailment_time_series_by_areas_and_resourc": [9, 10, 19, 20], "main": [19, 20, 72, 121, 122, 125, 126], "tx": [19, 20, 112], "calculate_curtailment_time_series_by_resources_and_area": [9, 10, 19, 20], "summarize_curtailment_by_bu": [9, 10, 19, 20], "summarize_curtailment_by_loc": [9, 10, 19, 20], "get_curtailment_time_seri": [9, 10, 19, 20], "across": [20, 22, 74, 101, 104, 105, 112, 122, 124, 126], "eastern": [20, 21, 22, 58, 59, 60, 76], "2020": [20, 22, 76, 104, 112, 113, 122, 123], "2030": [20, 22, 76, 78, 104, 112], "larg": [20, 22, 104, 107, 112, 121, 122, 124], "seam": [20, 22], "70": [20, 22], "cours": [20, 22, 126], "90": [20, 21, 22, 36, 112], "upgrad": [16, 20, 21, 22, 23, 26, 30, 35, 104, 112], "accommod": [20, 22], "Of": [20, 22], "meet": [20, 22, 28, 58, 60], "export": [20, 22, 23, 35, 122, 123], "gw": [16, 20, 21, 22], "enabl": [20, 22, 28, 55, 60, 62, 99, 121, 122, 127], "demo": [20, 21, 109], "numer": [20, 21, 33, 112, 120], "hope": [20, 21], "displai": [16, 20, 21, 28], "io": [20, 21, 97], "plot_powerflow_snapshot": [8, 20, 21], "pf_map": [20, 21], "2016": [20, 21, 54, 60, 61, 89, 90, 92, 96, 97, 99, 122, 125], "22": [16, 20, 21, 55, 112], "legend_font_s": [16, 20, 21], "20": [16, 20, 21, 35, 58, 60, 111, 112], "plot_utilization_map": [8, 20, 21], "map_util": [8, 16, 20, 21], "util_map": [20, 21], "state_borders_kwarg": [16, 20, 21], "background_map": [16, 20, 21], "circl": [16, 20, 21], "overlai": [20, 21, 105, 112], "plot_carbon_map": [8, 20, 21], "map_carbon_emission_gener": [8, 16, 20, 21], "emission_map": [20, 21], "coordinate_round": [16, 20, 21], "scale_factor": [16, 20, 21, 36], "stack": [16, 20, 21, 112], "plot_generation_ts_stack": [8, 20, 21], "plot_generation_time_series_stack": [8, 16, 20, 21], "t2c": [16, 20, 21], "173fa5": [20, 21], "0090ff": [20, 21], "geotherm": [20, 21], "cc67f3": [20, 21], "8b36ff": [16, 20, 21], "dfo": [20, 21], "31e8cb": [20, 21], "37404c": [20, 21], "72818f": [20, 21], "ffbb45": [16, 20, 21], "78d911": [16, 20, 21], "solar_curtail": [16, 20, 21], "wind_curtail": [16, 20, 21], "t2l": [16, 20, 21], "distil": [20, 21], "oil": [20, 21, 45, 76], "ga": [20, 21, 45, 60, 61, 112, 114], "wind_offshor": [20, 21], "offshor": [20, 21], "biomass": [20, 21, 45], "wind_offshore_curtail": [16, 20, 21], "t2hc": [16, 20, 21], "996100": [20, 21], "4e8e0b": [20, 21], "time_freq": [16, 20, 21], "normal": [16, 20, 21, 28, 78, 86, 89, 92, 96, 108, 111, 112, 115, 119, 126], "printmanag": [20, 21, 23, 55], "plot_scatter_capacity_vs_capacity_factor": [8, 20, 21], "percentag": [10, 16, 20, 21, 26, 45, 51, 54, 58, 60, 82, 112], "matplotlib": [16, 20, 21], "pyplot": [16, 20, 21], "plt": [20, 21], "plot_curtailment_t": [8, 20, 21], "plot_curtailment_time_seri": [8, 16, 20, 21], "blue": [20, 21], "label_fonts": [16, 20, 21], "30": [16, 20, 21, 45, 58, 60, 61, 96, 112], "title_fonts": [16, 20, 21], "35": [16, 20, 21], "tick_fonts": [16, 20, 21], "25": [16, 20, 21, 60, 61, 112, 115], "legend_fonts": [16, 20, 21], "plot_scatter_capacity_vs_curtail": [8, 20, 21], "margin": [16, 20, 21, 52, 60, 61, 122, 125], "plot_lmp_map": [8, 20, 21], "map_lmp": [8, 16, 20, 21], "lmp_map": [20, 21], "lmp_min": [16, 20, 21], "lmp_max": [16, 20, 21], "num_tick": [16, 20, 21], "slope": [16, 20, 21, 72, 74], "plot_scatter_capacity_vs_cost_curve_slop": [8, 20, 21], "heatmap": [20, 21], "color": [8, 20, 21, 43, 44], "plot_heatmap": [8, 20, 21], "axi": [16, 20, 21, 90, 112, 115], "cmap": [16, 20, 21], "piyg_r": [20, 21], "1e": [20, 21], "cbar_label": [16, 20, 21], "vmin": [16, 20, 21], "vmax": [16, 20, 21], "250": [20, 21], "cbar_tick_valu": [16, 20, 21], "100": [10, 16, 20, 21, 33, 76, 78, 105, 112], "150": [20, 21, 60, 61], "200": [20, 21, 35, 60, 61, 78, 105, 112], "cbar_tick_label": [16, 20, 21], "time_zon": [10, 16, 20, 21, 43, 46], "gmt": [20, 21], "time_zone_label": [16, 20, 21], "cst": [20, 21], "contour_level": [16, 20, 21], "plot_interconnection_map": [8, 20, 21], "map_interconnect": [8, 16, 20, 21], "transmission_map": [20, 21], "variou": [20, 21, 55, 59, 60, 61, 97, 104, 112], "chart": [16, 20, 21], "plot_bar_generation_vs_capac": [8, 20, 21], "scenario_id": [16, 20, 21, 23, 24, 35, 51, 52, 122, 125], "scenario_nam": [16, 20, 21], "lean": [20, 21], "pie": [16, 20, 21], "plot_pie_generation_vs_capac": [8, 20, 21], "shortfal": [16, 20, 21, 28], "clean_capacity_sc": [20, 21, 23, 26, 58, 60], "load_targets_from_csv": [20, 21, 26, 28], "plot_bar_shortfal": [8, 20, 21], "target": [16, 20, 21, 24, 28, 52, 58, 60, 112], "2030_usa_clean_energy_regular_target": [20, 21], "nevada": [20, 21, 60, 61], "baseline_scenario": [16, 20, 21], "baseline_scenario_nam": [16, 20, 21], "plot_carbon_bar": [8, 20, 21], "scenarioa": [20, 21], "scenariob": [20, 21], "map_carbon_emission_differ": [8, 16, 20, 21], "emission_difference_map": [20, 21], "side": [9, 16, 20, 21, 104, 112], "plot_energy_carbon_stack": [8, 20, 21], "plot_n_scenario": [8, 16, 20, 21], "transmiss": [8, 9, 16, 22, 23, 26, 35, 59, 61, 70, 85, 104, 112, 121, 122], "capac": [8, 9, 16, 22, 26, 27, 28, 33, 35, 36, 41, 54, 61, 74, 78, 89, 104, 108, 110, 111, 112, 115, 119], "data_access": [23, 52], "submodul": [8, 23, 63, 71, 81, 85, 88], "test_data_access": [23, 24], "test_execute_csv": [23, 24], "test_launch": [23, 24], "test_scenario_csv": [23, 24], "get_data_access": [23, 24, 54], "get_launch": [23, 24], "csv_store": 23, "csvstore": [23, 24], "get_tabl": [23, 24], "verify_hash": [23, 24], "dataaccess": [23, 24, 52], "checksum": [23, 24], "copy_from": [23, 24], "get_profile_vers": [23, 24, 35], "push": [23, 24], "tmp_folder": [23, 24], "localdataaccess": [23, 24], "memorydataaccess": [23, 24], "sshdataaccess": [23, 24], "exec_command": [23, 24], "execute_command_async": [23, 24], "f": [23, 24, 25, 35, 60, 62, 112, 121, 122, 125], "tempdataaccess": [23, 24], "execute_list": 23, "executelistmanag": [23, 24], "add_entri": [23, 24], "delete_entri": [23, 24], "get_execute_t": [23, 24], "get_statu": [23, 24], "set_statu": [23, 24], "execute_t": [23, 25], "fs_helper": 23, "get_blob_f": [23, 24], "get_multi_f": [23, 24], "get_scenario_f": [23, 24], "get_ssh_f": [23, 24], "launcher": 23, "httplauncher": [23, 24], "base_url": [23, 24, 96, 97, 99], "check_progress": [23, 24, 52], "extract_simulation_output": [23, 24, 52, 60, 61], "launch_simul": [23, 24, 52, 60, 61], "nativelaunch": [23, 24], "sshlauncher": [23, 24], "scenario_list": 23, "scenariolistmanag": [23, 24], "get_scenario": [23, 24], "get_scenario_t": [23, 24, 52], "scenario_t": [23, 25], "sql_store": 23, "ssh_f": 23, "wrapsshf": [23, 24], "progress_bar": [23, 24], "cost_curv": [23, 26, 60, 62], "curtail": [8, 9, 16, 23, 26, 52, 54, 58, 60, 121, 122, 125], "invest": [23, 26], "const": [23, 26, 35, 63, 71, 85], "create_mapping_fil": [23, 26], "inflat": [23, 26], "investment_cost": [23, 26], "test_scenario_info": [23, 26], "mwmile": [23, 26, 60, 62], "statelin": [23, 26, 60, 62], "substat": [23, 26, 30, 41, 59, 60, 61], "mimic_grid": 23, "mimic_generation_capac": [23, 26], "scenario_info": [23, 24, 35, 41, 51, 52, 54], "scenarioinfo": [23, 26, 54], "area_to_loadzon": [16, 23, 26, 43, 54], "get_available_resourc": [23, 26, 54], "get_capac": [23, 26, 54], "get_capacity_factor": [23, 26, 54], "get_curtail": [23, 26, 54], "get_demand": [23, 26, 52, 54, 58, 60, 61], "get_gener": [23, 26, 54], "get_no_congest_capacity_factor": [23, 26, 54], "get_profile_resourc": [23, 26, 54], "demand_flex": [23, 35, 52, 76], "electrif": [23, 35, 76, 104, 106, 107], "grid_const": [23, 35], "pypsa_const": [23, 35], "convert": [9, 16, 23, 30, 35, 55, 72, 74, 82, 86, 92, 96, 97, 105, 112, 119], "csv_to_grid": [23, 35], "pypsa_to_grid": [23, 35], "pypsa_to_profil": [23, 35], "export_to_pypsa": [23, 35], "export_to_reis": [23, 35], "test_change_t": [23, 35], "test_check": [8, 16, 23, 35, 52], "test_configur": [23, 35], "test_expansion_candid": [23, 35], "test_grid": [23, 35], "test_input_data": [23, 35], "test_profile_input": [23, 35], "test_transform_demand": [23, 35], "test_transform_grid": [23, 35], "test_transform_profil": [23, 35], "abstract_grid": 23, "abstractgrid": [23, 35, 39, 54], "storage_templ": [23, 35], "changet": [23, 26, 33, 35, 36, 51, 60, 61], "add_branch": [23, 35, 60, 61], "add_bu": [23, 35, 36, 60, 61], "add_dclin": [23, 35, 60, 61], "add_demand_flex": [23, 35, 36], "add_electrif": [23, 35, 36], "add_plant": [23, 35, 36, 60, 61], "add_storage_capac": [23, 35, 36], "remove_branch": [23, 35], "remove_bu": [23, 35, 36], "remove_dclin": [23, 35], "remove_pl": [23, 35, 36], "scale_branch_capac": [23, 35, 60, 61], "scale_congested_mesh_branch": [23, 26, 33, 35, 60, 61], "scale_dcline_capac": [23, 35], "scale_demand": [23, 35, 58, 60], "scale_plant_capac": [23, 35, 58, 60, 61], "scale_plant_cost": [23, 35], "scale_plant_pmin": [23, 35, 36], "scale_renewable_stub": [23, 26, 33, 35, 60, 61], "check_grid": [23, 35], "adjust_pmin": [23, 35], "adjust_ramp30": [23, 35], "linearize_gencost": [23, 35], "electrified_demand_input": 23, "electrifieddemand": [23, 35, 36], "get_profil": [23, 35, 41, 52, 54, 88, 89], "expansion_candid": 23, "expansioncandid": [23, 35], "set_branch": [23, 35], "set_plant": [23, 35], "set_storag": [23, 35], "check_branch": [23, 35], "check_branch_voltag": [23, 35], "check_bus_id": [23, 35], "check_plant": [23, 35], "check_storag": [23, 35], "supported_import": [23, 35], "supported_model": [23, 35], "decompose_plant_data_frame_into_area": [23, 35], "decompose_plant_data_frame_into_areas_and_resourc": [23, 35], "decompose_plant_data_frame_into_resourc": [23, 35], "decompose_plant_data_frame_into_resources_and_area": [23, 35], "get_active_resources_in_grid": [23, 35], "get_plant_id_for_resourc": [23, 35], "get_plant_id_for_resources_in_area": [23, 35], "get_plant_id_for_resources_in_interconnect": [23, 35], "get_plant_id_for_resources_in_loadzon": [23, 35], "get_plant_id_for_resources_in_st": [23, 35], "get_plant_id_in_interconnect": [23, 35], "get_plant_id_in_loadzon": [23, 35], "get_plant_id_in_st": [23, 35], "get_resources_in_grid": [23, 35], "get_storage_id_in_area": [23, 35], "summarize_plant_to_loc": [23, 35], "input_bas": 23, "inputbas": [23, 35], "get_data": [23, 35, 51, 54, 71, 74], "input_data": 23, "inputdata": [23, 35], "save_change_t": [23, 35], "distribute_demand_from_zones_to_bus": [23, 35], "profile_input": [23, 42, 54], "profileinput": [23, 35, 54], "transform_demand": 23, "transformdemand": [23, 35], "transform_grid": 23, "transformgrid": [23, 35], "voltage_to_x_per_dist": [23, 35], "transform_profil": 23, "transformprofil": [23, 35, 41], "europe_tub": [23, 35, 43, 52, 59, 60], "hifld": [23, 43], "csv_reader": 23, "csvreader": [23, 43], "check_and_format_interconnect": [23, 43], "check_model": [23, 43], "get_zone_info": [23, 43], "interconnect_to_nam": [23, 43], "powerset": [23, 43], "modelimmut": [23, 43, 46], "load_data": [23, 43, 71, 78], "output_data": 23, "outputdata": [23, 51], "construct_load_sh": [23, 51], "test_creat": [23, 52], "test_scenario": [23, 52], "exported_method": [23, 52, 54], "get_averaged_cong": [23, 52, 60, 61], "get_congl": [23, 52, 54, 60, 61], "get_congu": [23, 52, 54, 60, 61], "get_dcline_pf": [23, 52, 54, 60, 61], "get_lmp": [23, 52, 54, 60, 61], "get_load_sh": [23, 52, 60, 61], "get_load_shift_dn": [23, 52], "get_load_shift_up": [23, 52], "get_pg": [23, 52, 54, 60, 61], "get_storage_": [23, 52, 54, 60, 61], "get_storage_pg": [23, 52, 54, 60, 61], "print_infeas": [23, 52], "refresh": [23, 52, 113], "create_scenario": [23, 52, 60, 61], "default_exported_method": [23, 52], "get_bus_demand": [23, 52, 54], "set_grid": [23, 52, 58, 60, 61], "fromcsv": [23, 35, 39, 49, 50, 52], "get_base_profil": [23, 52], "print_available_profil": [23, 52], "set_base_grid": [23, 52], "set_base_profil": [23, 52, 60, 61], "set_change_t": [23, 52], "frompypsa": [23, 35, 39, 48, 52], "get_build": [23, 52], "delet": [23, 24, 82, 122, 125], "delete_scenario": [23, 52], "prepare_simulation_input": [23, 52, 60, 61], "print_scenario_statu": [23, 52, 60, 61], "simulationinput": [23, 52], "prepare_demand_flexibility_paramet": [23, 52], "prepare_grid": [23, 52], "prepare_profil": [23, 52], "backupdisk": [23, 52], "backup_scenario": [23, 52], "move_scenario": [23, 52, 60, 61], "readi": [23, 122, 123], "get_base_grid": [23, 52], "get_ct": [23, 52, 54, 60, 61], "get_gentype_profil": [23, 52], "get_hydro": [23, 52, 54, 60, 61], "get_solar": [23, 52, 54, 60, 61], "get_wind": [23, 52, 54, 60, 61], "print_scenario_info": [23, 52, 60, 61], "switch": [23, 52, 60, 61], "mock_analyz": 23, "mockanalyz": [23, 54], "mock_build": 23, "mockbuild": [23, 54], "mock_change_t": 23, "mockchanget": [23, 54], "mock_context": 23, "mockcontext": [23, 54], "mock_profile_input": 23, "mockprofileinput": [23, 54], "mock_scenario": [10, 11, 23, 28, 29, 35, 42, 52, 53], "mockscenario": [23, 54], "mock_scenario_info": 23, "mockscenarioinfo": [23, 54], "test_mock": 23, "testmockgrid": [23, 54], "test_mock_grid_failur": [23, 54], "test_mock_grid_success": [23, 54], "testmockinputdata": [23, 54], "test_create_mock_profile_input": [23, 54], "test_happy_cas": [23, 54], "test_multiple_get_data_calls_returns_same_data": [23, 54], "test_no_end_tim": [23, 54], "test_no_freq": [23, 54], "test_no_period": [23, 54], "test_no_start_tim": [23, 54], "test_raise_if_all_date_range_fields_pres": [23, 54], "test_raise_if_no_profile_specifi": [23, 54], "testmockscenario": [23, 54], "test_mock_hydro_stored_properli": [23, 54], "test_mock_pg_stored_properli": [23, 54], "test_mock_profil": [23, 54], "test_mock_profile_valu": [23, 54], "test_mock_solar_stored_properli": [23, 54], "test_mock_wind_stored_properli": [23, 54], "testmockscenarioinfo": [23, 54], "test_create_mock_scenario_info": [23, 54], "test_default_float": [23, 54], "test_grid_set_correctli": [23, 54], "test_info_set_correctli": [23, 54], "mock_hydro": [23, 54], "mock_solar": [23, 54], "mock_wind": [23, 54], "test_dist": [23, 55], "config": [23, 126, 127], "backup_data_root_dir": [23, 55, 127], "data_root_dir": [23, 55, 127], "engine_dir": [23, 55, 127], "execute_dir": [23, 55, 127], "input_dir": [23, 55, 122, 125, 127], "local_dir": [23, 55, 127], "model_dir": [23, 43, 55, 127], "output_dir": [23, 55, 122, 125, 127], "server_address": [23, 55, 127], "server_ssh_port": [23, 55], "containerconfig": [23, 55], "deploymentmod": [23, 55], "config_map": [23, 55], "server": [23, 24, 35, 51, 52, 55, 99], "localconfig": [23, 55, 127], "serverconfig": [23, 55], "get_config": [23, 55], "get_deployment_mod": [23, 55], "find_closest_neighbor": [23, 55], "great_circle_dist": [23, 55], "haversin": [23, 55], "cachekeybuild": [23, 55], "memorycach": [23, 55], "list_kei": [23, 55], "block_print": [23, 55], "enable_print": [23, 55], "cache_kei": [23, 55], "server_setup": [23, 127], "get_blob_credenti": [23, 55], "get_server_us": [23, 55], "make_temp": [24, 25], "ssh_data_access": [24, 25], "test_copy_from": [24, 25], "test_copy_from_multi_path": [24, 25], "test_setup_server_connect": [24, 25], "test_tmp_fold": [24, 25], "clone_templ": [24, 25], "manag": [24, 25, 55, 101, 111, 112, 113, 122, 123, 128], "mock_row": [24, 25], "test_blank_csv_append": [24, 25], "test_delet": [24, 25], "test_get_execute_file_from_server_head": [24, 25], "test_get_execute_file_from_server_typ": [24, 25], "test_get_statu": [24, 25], "test_set_statu": [24, 25], "test_check_solv": [24, 25], "test_check_thread": [24, 25], "test_delete_entri": [24, 25], "test_get_scenario": [24, 25], "test_get_scenario_file_from_server_head": [24, 25], "test_get_scenario_file_from_server_typ": [24, 25], "factori": [24, 122, 125], "static": [24, 55, 59, 60, 92, 97], "make_f": 24, "none": [9, 10, 13, 16, 24, 26, 28, 30, 33, 35, 36, 41, 43, 48, 51, 52, 54, 55, 60, 62, 70, 72, 76, 78, 86, 89, 92, 96, 97, 99], "callabl": [24, 70], "filesystem": [24, 35], "store": [24, 35, 36, 43, 72, 82, 97, 121, 122, 125, 127], "prior": [24, 99], "fall": [24, 30, 112], "sha1sum": 24, "interfac": [24, 52, 55, 64, 92, 122, 123], "remot": [24, 35, 126], "relative_path": 24, "rel": [10, 16, 24, 33, 35, 36, 96, 112], "file_nam": [16, 24], "from_dir": 24, "userspac": 24, "filepath": [16, 24, 28, 78, 112, 113], "memori": [24, 35, 60, 61, 122, 124, 125], "tupl": [10, 16, 24, 28, 33, 35, 41, 55, 70, 72, 74, 86, 90, 91, 97, 99], "caller": [24, 70], "callback": 24, "raw": [24, 35, 45, 71, 74, 78, 82, 84, 97], "disk": [24, 35, 43, 52], "base_dir": 24, "search": [10, 24, 43], "glob": 24, "prompt": [24, 52], "complet": [24, 122, 123, 125, 126], "save_loc": 24, "_f": [24, 35], "share": [24, 28, 58, 60, 82, 101, 112, 122, 123], "volum": [24, 122, 123], "_dataaccesstempl": 24, "mimic": [24, 28], "client": [24, 55, 99, 126], "ssh": [24, 52, 127], "wait": [24, 70, 92, 126], "subprocess": [24, 52], "popen": [24, 52], "properti": [24, 30, 52, 65], "multif": 24, "ioerror": 24, "stderr": [24, 52], "temp": 24, "ordereddict": 24, "upon": [24, 112], "success": [10, 24, 43], "prioriti": 24, "descend": 24, "priorit": 24, "direcori": 24, "becompute01": [24, 55], "gatesventur": [24, 55], "5000": 24, "dict": [10, 16, 24, 26, 28, 30, 33, 35, 36, 39, 41, 45, 46, 51, 52, 54, 55, 59, 60, 74, 76, 78, 86, 90, 92, 97, 99], "stdout": [24, 52], "extract": [24, 45, 48, 52, 82, 123, 127], "lmp": [16, 24, 51, 52, 54, 60, 61, 122, 125], "congu": [24, 51, 52, 54, 60, 61, 122, 125], "congl": [24, 51, 52, 54, 60, 61, 122, 125], "thread": [24, 52, 60, 61, 122, 125], "extract_data": [24, 52, 60, 61, 122, 125], "launch": [24, 52, 60, 61, 122, 123], "auto": [24, 52, 76, 122, 125], "descriptor": [24, 52], "parent_f": 24, "subf": 24, "wrapper": [24, 55, 92, 112, 115], "progress": 24, "wrap": 24, "chunk_siz": 24, "pyfilesystem": 24, "paramiko": 24, "stream": 24, "kwarg": [16, 24, 30, 35, 43, 52, 54, 55], "tqdm": 24, "constructor": [24, 60, 61, 86], "arbitrari": [24, 30, 48, 70], "keyword": [16, 24, 30, 54], "calculate_plant_differ": [26, 27], "calculate_branch_differ": [26, 27], "calculate_dcline_differ": [26, 27], "test_clean_capacity_sc": [26, 28], "test_cost_curv": [26, 28], "test_curtail": [9, 10, 26, 28], "add_demand_to_target": [26, 28], "add_new_capacities_collabor": [26, 28], "add_new_capacities_independ": [26, 28], "add_resource_data_to_target": [26, 28], "add_shortfall_to_target": [26, 28], "calculate_clean_capacity_sc": [26, 28, 58, 60], "calculate_overall_shortfal": [26, 28], "create_change_t": [26, 28, 58, 60], "build_supply_curv": [26, 28, 60, 62], "check_supply_data": [26, 28], "get_supply_data": [26, 28, 60, 62], "ks_test": [26, 28, 60, 62], "lower_bound_index": [26, 28], "plot_capacity_vs_pric": [26, 28, 60, 62], "plot_linear_vs_quadratic_term": [26, 28, 60, 62], "temporal_curtail": [26, 28], "test_investment_cost": [26, 30], "bus_to_neem_reg": [26, 30], "bus_to_reeds_reg": [26, 30], "points_to_poli": [26, 30], "sjoin_nearest": [26, 30], "write_bus_neem_map": [26, 30], "write_bus_reeds_map": [26, 30], "write_poly_shapefil": [26, 30], "calculate_infl": [26, 30], "append_keep_index_nam": [26, 30], "calculate_ac_inv_cost": [26, 30], "calculate_dc_inv_cost": [26, 30], "calculate_gen_inv_cost": [26, 30], "merge_keep_index": [26, 30], "testscenarioinfo": [26, 32], "test_get_available_resourc": [26, 32], "test_get_capac": [26, 32], "test_get_capacity_factor": [26, 32], "test_get_curtail": [26, 32], "test_get_demand": [26, 32], "test_get_gener": [26, 32], "test_get_no_congest_capacity_factor": [26, 32], "test_get_profile_resourc": [26, 32], "test_mwmil": [26, 33], "test_statelin": [26, 33], "test_subst": [26, 33], "test_upgrad": [26, 33], "calculate_mw_mil": [26, 33, 60, 62], "classify_interstate_intrast": [26, 33, 60, 62], "calculate_substation_capac": [26, 33], "get_branches_by_area": [26, 33], "calculate_interzone_capac": [26, 33], "base_grid": [26, 30, 35, 42], "ref_grid": 26, "unscal": [26, 33, 112], "dictionari": [10, 16, 26, 28, 35, 36, 39, 51, 58, 60, 74, 82, 92, 97, 122, 125], "ct": [26, 33, 35, 41, 42, 51, 52, 54, 60, 61, 112], "previou": [26, 28, 35, 58, 60, 61], "queri": [26, 33, 43, 54, 70, 74, 76, 89, 90, 92], "loadzon": [9, 10, 16, 26, 28, 35, 43, 44, 54, 74], "abbrevi": [9, 10, 16, 26, 28, 35, 43, 46, 54, 70, 76, 78, 89], "state_abbr": [9, 10, 16, 26, 28, 35, 43, 54], "associ": [16, 26, 28, 35, 36, 52, 54, 55, 58, 60, 76, 97], "gentyp": [26, 52, 54], "mw": [10, 16, 26, 28, 33, 35, 36, 54, 60, 61, 78, 121, 122], "start_tim": [26, 54], "end_tim": [26, 54], "rang": [10, 16, 26, 28, 41, 52, 54, 55, 74, 76, 96, 97, 99, 105, 112, 116, 117, 120], "yyyi": [26, 54, 122, 125], "mm": [26, 54, 122, 125], "dd": [26, 54, 122, 125], "hh": [26, 54, 122, 125], "ss": [26, 54, 122, 125], "zerodivisionerror": [26, 54], "round": [16, 26, 54, 58, 60], "decim": [26, 54, 112], "invalid": [9, 26, 39, 43, 52, 54, 70, 76, 89, 90], "plant1": 27, "plant2": 27, "larger": 27, "diff": 27, "branch1": 27, "branch2": 27, "difference_threshold": 27, "drop": [27, 28, 30, 126], "grid1": 27, "grid2": 27, "dcline": [16, 27, 35, 39, 59, 60], "from_lat": 27, "from_lon": 27, "to_lat": 27, "to_lon": 27, "collaborative_test_target": [28, 29], "test_collaborative_three_areas_one_nonparticip": [28, 29], "test_collaborative_two_areas_addl_curtail": [28, 29], "test_collaborative_two_areas_addl_extern": [28, 29], "test_collaborative_two_areas_overgener": [28, 29], "test_independent_new_capac": [28, 29], "test_build_supply_curve_1seg": [28, 29], "test_build_supply_curve_2seg": [28, 29], "test_get_supply_data": [28, 29], "test_ks_test": [28, 29], "test_lower_bound_index": [28, 29], "test_temporal_curtail": [28, 29], "input_target": 28, "scenario_length": 28, "solar_fract": [28, 58, 60], "addl_curtail": [28, 58, 60], "strategi": [16, 28, 58, 60, 105, 112], "calculate_curtail": 28, "prev_gener": 28, "ce_target_fract": [28, 58, 60], "ref_scenario": [28, 33, 35, 58, 60, 61], "targets_filenam": [28, 58, 60], "next_scenario": [28, 58, 60], "baselin": [16, 28], "filenam": [16, 28, 35, 41, 43, 64, 70, 96, 97, 98], "intermedi": [28, 82], "incorrectli": 28, "drop_ignor": 28, "ignor": [16, 28, 33, 54], "num_seg": [28, 35, 60, 62], "gen_typ": [16, 28, 42, 60, 62], "segment": [28, 35, 60, 62, 78, 99, 112, 121, 122], "piecewis": [28, 35], "linear": [28, 35, 36, 60, 62, 70, 74, 96, 122, 123], "split": [16, 28, 35, 60, 62, 76, 101, 108, 112], "iter": [16, 28, 33, 35, 36, 39, 43, 48, 49, 50, 72, 76, 97, 99], "element": [9, 16, 28, 33, 55, 74, 78, 89, 99], "amount": [16, 28, 52, 58, 60, 62, 70, 78, 97, 104, 112, 121, 122, 124], "bid": 28, "supply_data": 28, "mandatori": 28, "capacity_data1": 28, "price_data1": 28, "capacity_data2": 28, "price_data2": 28, "kolmogorov": [28, 60, 62], "smirnov": [28, 60, 62], "greatest": 28, "price": [16, 28, 33, 52, 61, 112, 122, 125], "offer": [28, 60, 62, 104, 112], "desired_capac": 28, "capacity_data": 28, "lower": [16, 28, 30, 52, 60, 61, 62, 112, 119, 122, 125], "aren": [28, 86, 126], "explicitli": 28, "lowest": 28, "bound": [28, 74, 112, 121, 122], "zoom": [16, 28, 60, 62], "num_sd": [28, 60, 62], "alpha": [16, 28, 60, 62, 112, 119], "c1": [28, 35, 36, 60, 61, 62], "quadrat": [28, 36, 60, 62], "c2": [28, 35, 36, 60, 61, 62], "filter": [28, 35, 60, 62, 78, 82, 97, 112], "outlier": [28, 60, 62, 74, 103, 112], "deviat": [28, 52, 60, 62, 96, 112, 119, 121, 122, 126], "blend": [28, 60, 62], "scatter": [16, 28, 60, 62], "transpar": 28, "opaqu": [16, 28], "pmin_by_typ": 28, "pmin_by_id": 28, "mismatch": [28, 35], "pmin": [28, 35, 36, 60, 61], "assumpt": [28, 112], "treat": 28, "pmax": [10, 28, 35, 36, 60, 61, 89], "dispatch": 28, "track": [28, 90, 112, 115, 119, 126], "overrid": 28, "mach": 28, "test_calculate_ac_inv_cost": [30, 31], "test_calculate_ac_inv_costs_lines_onli": [30, 31], "test_calculate_ac_inv_costs_not_sum": [30, 31], "test_calculate_ac_inv_costs_transformers_onli": [30, 31], "test_calculate_dc_inv_cost": [30, 31], "test_calculate_dc_inv_costs_not_sum": [30, 31], "test_calculate_gen_inv_costs_2030": [30, 31], "test_calculate_gen_inv_costs_not_sum": [30, 31], "df": [30, 35, 41, 76, 92], "neem": 30, "region": [30, 35, 43, 44, 59, 60, 62, 74, 76, 78, 82, 105, 108, 111, 112, 113, 119], "name_abbr": 30, "shapefil": [16, 30], "overli": 30, "shape": [10, 30, 101, 105, 109, 111, 112], "km": [30, 55, 112, 118], "dougla": 30, "peucker": 30, "qgi": 30, "reed": 30, "r": [16, 30, 43, 72, 121, 122, 123, 127, 128], "rb": 30, "ba": [30, 74, 101, 103, 112], "shpfile": 30, "search_dist": 30, "closest": [30, 55, 91, 97], "polygon": [16, 30, 86], "multipolygon": 30, "too": [30, 128], "geopanda": 30, "geodatafram": 30, "geometri": [30, 70, 85], "left_df": 30, "right_df": 30, "spatial": 30, "layer": [30, 58, 60], "nearest": [30, 74, 91], "gis_r": 30, "bokehpivot": 30, "hierarchi": 30, "reeds2": 30, "start_year": 30, "end_year": 30, "_to_": 30, "_through_": 30, "recent": [30, 112], "df1": 30, "df2": 30, "append": [30, 39, 48, 128], "preserv": [30, 55], "concat": 30, "sum_result": 30, "exclude_branch": [30, 33], "ac": [16, 30, 59, 60, 61, 112, 115], "transform": [16, 30, 33, 35, 41, 59, 60, 62, 76, 91, 105, 112, 122, 125, 127], "against": 30, "unmodifi": 30, "line_cost": 30, "transformer_cost": 30, "usd": 30, "todai": 30, "hvdc": [16, 30, 35, 59, 60], "cost_cas": 30, "atb": 30, "moder": [30, 76, 104, 112], "mid": 30, "conserv": [30, 121, 122], "higher": [30, 112, 119, 122, 125], "overnight": 30, "pseudo": 30, "sub": [30, 59, 60, 76, 111, 112], "methodnam": [11, 32, 34, 42], "runtest": [11, 32, 34, 42], "testcas": [11, 32, 34, 42], "hook": [11, 32, 34, 42], "fixtur": [11, 32, 34, 42], "exercis": [11, 32, 34, 42], "testcalculatemwmil": [33, 34], "test_calculate_mw_miles_many_sc": [33, 34], "test_calculate_mw_miles_many_scaled_one_branch_exclud": [33, 34], "test_calculate_mw_miles_many_scaled_two_branches_exclud": [33, 34], "test_calculate_mw_miles_no_scal": [33, 34], "test_calculate_mw_miles_one_line_sc": [33, 34], "test_calculate_mw_miles_one_transformer_sc": [33, 34], "testclassifyinterstateintrast": [33, 34], "test_classify_interstate_intrastate_bad_ct": [33, 34], "test_classify_interstate_intrastate_empty_ct": [33, 34], "test_classify_interstate_intrastate_non": [33, 34], "test_classify_interstate_intrastate_sever": [33, 34], "test_classify_interstate_intrastate_two": [33, 34], "test_calculate_substation_capac": [33, 34], "testconstructcompositeallowlist": [33, 34], "test_allow_list_and_deny_list_failur": [33, 34], "test_bad_allow_list_entry_typ": [33, 34], "test_bad_allow_list_valu": [33, 34], "test_bad_deny_list_typ": [33, 34], "test_bad_deny_list_valu": [33, 34], "test_good_allow_list": [33, 34], "test_good_deny_list": [33, 34], "test_none_non": [33, 34], "testgetbranchesbyarea": [33, 34], "test_bad_area_nam": [33, 34], "test_bad_area_typ": [33, 34], "test_bad_grid_typ": [33, 34], "test_bad_method_nam": [33, 34], "test_bad_method_typ": [33, 34], "test_bridging_multi_st": [33, 34], "test_bridging_oregon": [33, 34], "test_bridging_washington": [33, 34], "test_either_multi_st": [33, 34], "test_either_oregon": [33, 34], "test_either_washington": [33, 34], "test_internal_multi_st": [33, 34], "test_internal_oregon": [33, 34], "test_internal_washington": [33, 34], "testidentifymesh": [33, 34], "test_identify_mesh_mw_n_1": [33, 34], "test_identify_mesh_mw_n_2": [33, 34], "test_identify_mesh_mw_n_2_allow_list": [33, 34], "test_identify_mesh_mw_n_2_deny_list": [33, 34], "test_identify_mesh_mw_n_3": [33, 34], "test_identify_mesh_mwmiles_n_1": [33, 34], "test_identify_mesh_mwmiles_n_2": [33, 34], "test_identify_mesh_mwmiles_n_3": [33, 34], "test_identify_mesh_bad_method": [33, 34], "test_identify_mesh_branch_upgrades_default": [33, 34], "test_identify_mesh_branch_upgrades_n_2": [33, 34], "test_identify_mesh_branch_upgrades_n_3": [33, 34], "test_identify_mesh_branch_upgrades_n_4": [33, 34], "test_identify_mesh_branch_upgrades_quantile90": [33, 34], "test_identify_mesh_mean": [33, 34], "test_identify_mesh_mean_n_1": [33, 34], "test_identify_mesh_mean_n_2": [33, 34], "test_identify_mesh_mean_n_3": [33, 34], "test_identify_mesh_mean_n_4": [33, 34], "test_identify_mesh_mean_n_4_specify_quantil": [33, 34], "testincrementbranch": [33, 34], "test_increment_branch_scaling_ref_and_ct_and_increment1": [33, 34], "test_increment_branch_scaling_ref_and_ct_and_increment2": [33, 34], "test_increment_branch_scaling_ref_and_custom_incr": [33, 34], "test_increment_branch_scaling_ref_and_incr": [33, 34], "test_increment_branch_scaling_ref_onli": [33, 34], "testscalerenewablestub": [33, 34], "test_empty_ct_inplace_default": [33, 34], "test_empty_ct_inplace_fals": [33, 34], "test_empty_ct_inplace_tru": [33, 34], "test_empty_ct_no_fuzz": [33, 34], "test_existing_ct_unrelated_branch_id": [33, 34], "test_existing_ct_zone_id_solar_wind": [33, 34], "test_existing_ct_zone_id_wind": [33, 34], "teststubtopologyhelp": [33, 34], "test_find_branches_connected_to_bus_1": [33, 34], "test_find_branches_connected_to_bus_4": [33, 34], "test_find_branches_connected_to_bus_5": [33, 34], "test_find_capacity_at_bus_1_solar_str": [33, 34], "test_find_capacity_at_bus_1_solar_tupl": [33, 34], "test_find_capacity_at_bus_2_wind": [33, 34], "test_find_capacity_at_bus_7_solar": [33, 34], "test_find_capacity_at_bus_7_solar_ng": [33, 34], "test_find_first_degree_branches_101": [33, 34], "test_find_first_degree_branches_108": [33, 34], "test_find_stub_degree_1": [33, 34], "test_find_stub_degree_5": [33, 34], "test_find_stub_degree_7": [33, 34], "quantiti": 33, "mile": [16, 33, 35, 55, 60, 62, 76, 78, 105], "lump": 33, "transformerwind": 33, "exclud": [33, 112], "classifi": 33, "interst": [33, 60, 62], "intrast": [33, 60, 62], "transport": [33, 35, 76, 104, 106, 107], "area_nam": 33, "topologi": [33, 60, 61], "span": [33, 78, 99], "bridg": 33, "equival": [33, 35, 45, 112], "recogn": [33, 86], "upgrade_n": 33, "allow_list": 33, "deny_list": 33, "congestion_metr": 33, "quantil": 33, "cost_metr": 33, "increment": 33, "mesh": 33, "shadow": [16, 33], "subset": [9, 16, 33, 112, 120], "rank": 33, "metric": [33, 60, 62, 122, 125], "upgraade_n": 33, "bootstrap": 33, "denomin": [33, 112], "judg": 33, "unus": 33, "95": [33, 35, 36, 112], "evalu": 33, "worst": 33, "origin": [16, 33, 35, 41, 52, 54, 60, 62, 82, 91, 105, 112, 122, 125, 126, 127], "fuzz": [10, 33], "verbos": 33, "gen": 33, "behind": [16, 33], "stub": [33, 35, 86], "littl": 33, "print": [10, 33, 52, 55, 60, 61, 78], "aggreagt": 33, "test_add_electrif": [35, 36], "areasc": [35, 36], "end_us": [35, 36], "grid_info": [35, 36], "zone_info": [35, 36], "scalefactor": [35, 36], "sf": [35, 36], "ordin": [35, 36], "test_pypsa_to_grid": [35, 39], "test_pypsa_to_profil": [35, 39], "add_coord_to_grid_data_fram": [35, 39], "add_interconnect_to_grid_data_fram": [35, 39], "add_zone_to_grid_data_fram": [35, 39], "get_pypsa_demand_profil": [35, 39], "get_pypsa_gen_profil": [35, 39], "restore_original_column": [35, 41], "export_grid": [35, 41], "export_transformed_profil": [35, 41], "test_add_branch_pmin_and_pmax": [35, 42], "test_add_branch_argument_buses_in_different_interconnect": [35, 42], "test_add_branch_zero_distance_between_bus": [35, 42], "test_add_bus_bad_list_entri": [35, 42], "test_add_bus_bad_typ": [35, 42], "test_add_bus_success": [35, 42], "test_add_dcline_pmin_and_pmax_and_capac": [35, 42], "test_add_dcline_pmin_and_pmax_success": [35, 42], "test_add_dcline_pmin_gt_pmax": [35, 42], "test_add_dcline_argument_negative_capac": [35, 42], "test_add_dcline_argument_number_of_kei": [35, 42], "test_add_dcline_argument_same_bus": [35, 42], "test_add_dcline_argument_typ": [35, 42], "test_add_dcline_argument_wrong_bu": [35, 42], "test_add_dcline_argument_wrong_kei": [35, 42], "test_add_dcline_in_different_interconnect": [35, 42], "test_add_dcline_output": [35, 42], "test_add_demand_flex": [35, 42], "test_add_new_elements_at_new_bus": [35, 42], "test_add_plant_argument_typ": [35, 42], "test_add_plant_check_pmin_is_ad": [35, 42], "test_add_plant_negative_pmax": [35, 42], "test_add_plant_negative_pmin": [35, 42], "test_add_plant_neighbor_can_be_on_same_bu": [35, 42], "test_add_plant_pmin_pmax_relationship": [35, 42], "test_add_plant_wrong_bu": [35, 42], "test_add_plant_wrong_resourc": [35, 42], "test_add_renewable_plant_check_neighbor_is_ad": [35, 42], "test_add_renewable_plant_missing_key_bus_id": [35, 42], "test_add_renewable_plant_missing_key_pmax": [35, 42], "test_add_renewable_plant_missing_key_typ": [35, 42], "test_add_thermal_plant_missing_key_c0": [35, 42], "test_add_thermal_plant_missing_key_c1": [35, 42], "test_add_thermal_plant_missing_key_c2": [35, 42], "test_add_thermal_plant_wrong_coeffici": [35, 42], "test_change_table_clear_bad_kei": [35, 42], "test_change_table_clear_bad_typ": [35, 42], "test_change_table_clear_success": [35, 42], "test_remove_branch": [35, 42], "test_remove_bu": [35, 42], "test_resource_exist": [35, 42], "test_scale_pmin_by_plant_and_zone_too_high": [35, 42], "test_scale_pmin_by_plant_too_high": [35, 42], "test_scale_pmin_by_zone_too_high": [35, 42], "check_grid_models_match_failur": [35, 42], "check_grid_models_match_success": [35, 42], "europ": [35, 42, 48, 59, 60], "mock_gencost": [10, 11, 35, 42], "test_check_areas_and_format": [35, 42], "test_check_areas_and_format_argument_typ": [35, 42], "test_check_areas_and_format_argument_valu": [35, 42], "test_check_areas_are_in_grid_and_format": [35, 42], "test_check_areas_are_in_grid_and_format_argument_typ": [35, 42], "test_check_areas_are_in_grid_and_format_argument_valu": [35, 42], "test_check_data_fram": [35, 42], "test_check_data_frame_argument_typ": [35, 42], "test_check_data_frame_argument_valu": [35, 42], "test_check_d": [35, 42], "test_check_date_argument_typ": [35, 42], "test_check_date_range_in_scenario": [35, 42], "test_check_date_range_in_scenario_argument_valu": [35, 42], "test_check_date_range_in_time_series_argument_valu": [35, 42], "test_check_epsilon": [35, 42], "test_check_epsilon_argument_typ": [35, 42], "test_check_epsilon_argument_valu": [35, 42], "test_check_gencost": [35, 42], "test_check_gencost_argument_typ": [35, 42], "test_check_gencost_argument_valu": [35, 42], "test_check_grid": [35, 42], "test_check_grid_type_failur": [35, 42], "test_check_grid_type_success": [35, 42], "test_check_number_hours_to_analyz": [35, 42], "test_check_number_hours_to_analyze_argument_typ": [35, 42], "test_check_number_hours_to_analyze_argument_valu": [35, 42], "test_check_plants_are_in_grid": [35, 42], "test_check_plants_are_in_grid_argument_typ": [35, 42], "test_check_plants_are_in_grid_argument_valu": [35, 42], "test_check_resources_and_format": [35, 42], "test_check_resources_and_format_argument_typ": [35, 42], "test_check_resources_and_format_argument_valu": [35, 42], "test_check_resources_are_in_grid_and_format": [35, 42], "test_check_resources_are_in_grid_and_format_argument_valu": [35, 42], "test_check_resources_are_renewable_and_format": [35, 42], "test_check_resources_are_renewable_and_format_argument_valu": [35, 42], "test_check_time_seri": [35, 42], "test_check_time_series_argument_valu": [35, 42], "test_error_handl": [35, 42], "test_linearize_gencost": [35, 42], "test_linearize_gencost_pmin_equal_pmax": [35, 42], "test_linearize_gencost_two_seg": [35, 42], "test_check_branch_voltag": [35, 42], "test_check_bus_id": [35, 42], "test_column_typ": [35, 42], "test_set_candid": [35, 42], "base_texa": [35, 42], "base_western": [35, 42], "test_deepcopy_work": [35, 42], "test_grid_eq_failure_branch": [35, 42], "test_grid_eq_failure_bu": [35, 42], "test_grid_eq_failure_dclin": [35, 42], "test_grid_eq_failure_gencost_befor": [35, 42], "test_grid_eq_failure_pl": [35, 42], "test_grid_eq_failure_simpl": [35, 42], "test_grid_eq_failure_storag": [35, 42], "test_grid_eq_failure_sub": [35, 42], "test_grid_eq_success_bus_typ": [35, 42], "test_grid_eq_success_gencost_aft": [35, 42], "test_grid_eq_success_plant_ramp30": [35, 42], "test_grid_eq_success_simpl": [35, 42], "test_grid_incorrect_sourc": [35, 42], "test_grid_typ": [35, 42], "test_that_fields_are_not_modified_when_loading_another_grid": [35, 42], "testresourcesingrid": [35, 42], "test_get_active_resources_in_grid": [35, 42], "test_get_resources_in_grid": [35, 42], "testsummarizeplanttobu": [35, 42], "test_summarize_all_buses_fals": [35, 42], "test_summarize_all_buses_tru": [35, 42], "test_summarize_default": [35, 42], "testsummarizeplanttoloc": [35, 42], "test_summarize_loc": [35, 42], "check_dataframe_match": [35, 42], "test_get_plant_id_for_resourc": [35, 42], "test_get_plant_id_for_resources_argument_typ": [35, 42], "test_get_plant_id_for_resources_argument_valu": [35, 42], "test_get_plant_id_for_resources_in_area": [35, 42], "test_get_plant_id_for_resources_in_interconnect": [35, 42], "test_get_plant_id_for_resources_in_interconnects_argument_typ": [35, 42], "test_get_plant_id_for_resources_in_interconnects_argument_valu": [35, 42], "test_get_plant_id_for_resources_in_loadzon": [35, 42], "test_get_plant_id_for_resources_in_loadzones_argument_typ": [35, 42], "test_get_plant_id_for_resources_in_loadzones_argument_valu": [35, 42], "test_get_plant_id_for_resources_in_st": [35, 42], "test_get_plant_id_for_resources_in_states_argument_typ": [35, 42], "test_get_plant_id_for_resources_in_states_argument_valu": [35, 42], "test_get_plant_id_in_interconnect": [35, 42], "test_get_plant_id_in_interconnects_argument_typ": [35, 42], "test_get_plant_id_in_interconnects_argument_valu": [35, 42], "test_get_plant_id_in_loadzon": [35, 42], "test_get_plant_id_in_loadzones_argument_typ": [35, 42], "test_get_plant_id_in_loadzones_argument_valu": [35, 42], "test_get_plant_id_in_st": [35, 42], "test_get_plant_id_in_states_argument_typ": [35, 42], "test_get_plant_id_in_states_argument_valu": [35, 42], "test_get_storage_id_in_area": [35, 42], "test_check_field": [35, 42], "test_get_file_compon": [35, 42], "test_get_file_path": [35, 42], "test_get_profile_vers": [35, 42], "test_get_profile_version_electrif": [35, 42], "test_aggregate_demand": [35, 42, 71, 76], "test_profile_map": [35, 42], "get_branch_id": [35, 42], "get_plant_id": [35, 42], "test_add_branch": [35, 42], "test_add_bu": [35, 42], "test_add_dclin": [35, 42], "test_add_gen_add_entries_in_gencost_data_fram": [35, 42], "test_add_gen_add_entries_in_plant_data_fram": [35, 42], "test_add_storag": [35, 42], "test_added_branch_sc": [35, 42], "test_scale_branch_one_zon": [35, 42], "test_scale_branch_two_zon": [35, 42], "test_scale_dclin": [35, 42], "test_scale_gen_capacity_one_zon": [35, 42], "test_scale_gen_one_pl": [35, 42], "test_scale_gen_pmin_one_pl": [35, 42], "test_scale_gen_pmin_two_types_two_zon": [35, 42], "test_scale_gencost_one_pl": [35, 42], "test_scale_gencost_two_types_two_zon": [35, 42], "test_scale_one_branch": [35, 42], "test_scale_renewable_gen_gencost_one_zon": [35, 42], "test_scale_thermal_gen_gencost_two_types_two_zon": [35, 42], "test_that_only_capacities_are_modified_when_scaling_renewable_gen": [35, 42], "get_change_table_for_id_sc": [35, 42], "get_change_table_for_new_plant_addit": [35, 42], "get_change_table_for_zone_sc": [35, 42], "get_plant_with_resourc": [35, 42], "get_zone_with_resourc": [35, 42], "mock_profile_input_class": [35, 42], "raw_demand": [35, 42], "raw_demand_flexibility_dn": [35, 42], "raw_demand_flexibility_up": [35, 42], "raw_hydro": [35, 42], "raw_solar": [35, 42], "raw_wind": [35, 42], "test_demand_is_sc": [35, 42], "test_flexible_demand_profiles_are_trim": [35, 42], "test_hydro_is_scaled_by_id": [35, 42], "test_hydro_is_scaled_by_zon": [35, 42], "test_hydro_is_scaled_by_zone_and_id": [35, 42], "test_new_hydro_ad": [35, 42], "test_new_hydro_are_not_sc": [35, 42], "test_new_hydro_profil": [35, 42], "test_new_solar_are_ad": [35, 42], "test_new_solar_are_not_sc": [35, 42], "test_new_solar_profil": [35, 42], "test_new_wind_are_ad": [35, 42], "test_new_wind_are_not_sc": [35, 42], "test_new_wind_profil": [35, 42], "test_solar_is_scaled_by_id": [35, 42], "test_solar_is_scaled_by_zon": [35, 42], "test_solar_is_scaled_by_zone_and_id": [35, 42], "test_wind_is_scaled_by_id": [35, 42], "test_wind_is_scaled_by_zon": [35, 42], "test_wind_is_scaled_by_zone_and_id": [35, 42], "builder": [35, 39, 52], "matpow": [35, 122, 123], "pickl": [35, 127], "transfer": [35, 127], "new_branch": 35, "new_dclin": 35, "new_plant": 35, "_cost": 35, "_pmin": 35, "depend": [16, 35, 46, 74, 78, 105, 112, 122, 123, 127], "latter": [35, 122, 125], "zone_id": [35, 36, 42, 43, 46, 60, 61], "desir": [16, 35, 60, 62, 74, 112, 122, 123, 125], "decreas": [16, 35], "branch_id": 35, "dcline_id": 35, "devic": [10, 35, 36, 121, 122, 125], "min_stor": [35, 36], "max_stor": [35, 36], "energy_valu": [35, 36], "ineff": [35, 36], "outeff": [35, 36], "lossfactor": [35, 36], "terminal_min": [35, 36], "terminal_max": [35, 36], "from_bus_id": [35, 60, 61], "to_bus_id": [35, 60, 61], "c0": [35, 36, 60, 61], "identif": [35, 36, 60, 61], "coeffici": [35, 36, 72, 121, 122], "polynomi": [10, 35], "new_bu": 35, "zone_nam": [35, 36, 43, 46, 58, 60, 61], "nomin": [35, 86], "denot": [35, 36], "bidirect": 35, "xor": [10, 16, 35, 36], "electrifi": [35, 72, 104, 105, 107, 112], "unders": 35, "inconsist": 35, "ramp_30": 35, "datadram": 35, "gencost_befor": 35, "gencost": [10, 35, 59, 60], "grid_model": [10, 35, 48, 52, 59, 60, 61], "tech": [35, 36], "hold": [35, 97], "candid": 35, "expans": 35, "attach": [35, 60, 61, 122, 125], "voltag": [35, 41, 60, 61, 85, 86, 121, 122], "from_bu": 35, "to_bu": 35, "pypsa": [35, 39, 41, 46, 48, 52], "geograph": [35, 43, 46, 59, 60, 61, 78, 99, 101, 109, 112], "cover": [35, 59, 60, 101, 103, 108, 112, 117, 120], "usa": [35, 43, 44, 45, 46, 52, 59, 60, 82, 122, 124], "model2interconnect": 35, "decompos": [35, 89], "decomposit": 35, "state_abv": [35, 97], "all_bus": 35, "boolean": [10, 13, 16, 35, 60, 62], "subclass": 35, "field_nam": [35, 51, 54], "possibli": [35, 112, 115], "zone_demand": 35, "demand_flexibility_up": [35, 36, 52, 54], "demand_flexibility_dn": [35, 36, 52, 54], "demand_flexibility_cost_up": [35, 36, 52], "demand_flexibility_cost_dn": [35, 36, 52], "credenti": 35, "aggreg": [9, 16, 35, 74, 76, 82, 89, 103, 111, 112], "reactanc": 35, "slice": [9, 35, 41, 52, 99], "test_add_electrification_by_zon": [36, 37], "test_add_electrification_combin": [36, 37], "test_area_sc": [36, 37], "test_check_scale_factor": [36, 37], "test_scale_factor": [36, 37], "obj": [36, 55], "basekv": [36, 60, 61], "parameter": 36, "demand_flexibility_dur": 36, "nonneg": 36, "mirror": 36, "1st": [36, 122, 125], "2nd": [36, 76, 112, 113], "These": [36, 60, 61, 103, 104, 112, 119], "bad": [36, 74], "symmetr": 36, "unitless": 36, "interv": [9, 16, 36, 51, 60, 61, 70, 75, 110, 112, 121, 122, 124, 125], "loss": 36, "01": [36, 45, 54, 60, 61, 89, 97, 99, 112, 113, 122, 125], "charg": [36, 52, 60, 61, 78, 105, 107, 121, 122, 125], "test_import_arbitrary_network_from_pypsa_to_grid": [39, 40], "test_import_exported_network": [39, 40], "test_import_network_including_storages_from_pypsa_to_grid": [39, 40], "test_extract_demand": [39, 40], "test_extract_wind": [39, 40], "test_get_pypsa_demand_profile_argument_typ": [39, 40], "test_get_pypsa_gen_profile_argument_typ": [39, 40], "test_get_pypsa_gen_profile_argument_valu": [39, 40], "longitud": [39, 55, 91, 92, 97], "latitud": [39, 55, 91, 92, 97], "add_pypsa_col": [39, 48], "renam": [39, 48, 126], "profile2carri": 39, "carrier": [39, 43, 44], "ones": [16, 39, 89, 122, 125], "scenario_or_grid": 41, "add_all_column": 41, "add_subst": 41, "add_load_shed": 41, "artifici": 41, "infinit": 41, "regualar": 41, "dclink": 41, "shed": [41, 51, 52, 60, 61, 121, 122, 125], "feasibl": [41, 112], "overwrit": [16, 41], "file_path": [41, 64, 112, 113], "base_": 41, "previous": [41, 82, 97], "monkeypatch": [17, 42, 53, 95], "received_return": 42, "divis": [43, 44, 78, 111], "geographi": [43, 44, 106, 112], "pypsabas": [43, 48], "build_eur": [43, 48], "tub": [43, 48], "from_zenodo": [43, 48], "tamu": [43, 50], "data_loc": [43, 59, 60], "incorrect": 43, "loacat": 43, "filenotfounderror": [43, 51], "l": [43, 106, 112, 121, 122], "immut": 43, "abv": [43, 46], "known": [43, 108, 112], "countri": [16, 43, 46, 101, 112], "country_abbr": 43, "record_id": 43, "eucolor": [44, 45], "usacolor": [44, 45], "get_color": [44, 45], "eueffici": [44, 45], "usaeffici": [44, 45], "get_effici": [44, 45], "euemiss": [44, 45], "usaemiss": [44, 45], "get_emiss": [44, 45], "eulabel": [44, 45], "usalabel": [44, 45], "get_label": [44, 45], "get_plant": [44, 45], "euresourc": [44, 45], "usaresourc": [44, 45], "get_resourc": [44, 45], "get_storag": [44, 45], "test_zon": [44, 46], "divisionmap": [44, 46], "eudivisionmap": [44, 46], "usadivisionmap": [44, 46], "get_division_map": [44, 46], "eu": [44, 45, 46], "substitut": [44, 46], "get_geographi": [44, 46], "interconnectmap": [44, 46], "get_interconnect_map": [44, 46], "euloadzonemap": [44, 46], "loadzonemap": [44, 46], "usaloadzonemap": [44, 46], "get_loadzone_map": [44, 46], "eumap": [44, 46], "usamap": [44, 46], "get_map": [44, 46], "check_zon": [44, 46], "from_csv": [44, 46], "from_pypsa": [44, 46], "district": [45, 76], "danish": 45, "agenc": [45, 105, 106, 112], "turbin": [45, 60, 61, 96, 97, 112, 119], "annual": [10, 45, 76, 78, 105, 109], "catalogu": 45, "june": [45, 112, 113], "2022": [45, 112], "sheet": 45, "09a": 45, "wood": 45, "chip": 45, "p": [45, 60, 62, 106, 112, 121, 122], "151": 45, "pellet": 45, "163": 45, "ocgt": 45, "52": 45, "383": 45, "ccgt": 45, "turb": 45, "steam": 45, "72": [45, 78, 112], "diesel": 45, "366": 45, "lazard": 45, "13": [45, 112], "lignit": 45, "19": [45, 112], "arrrang": 45, "kilogram": 45, "mbtu": 45, "23": [45, 60, 61, 89, 112], "co2": [10, 45], "fossil": [45, 72], "tco": 45, "tj": 45, "germani": 45, "hard": 45, "station": 45, "industri": [45, 76, 104, 112], "x": [16, 45, 52, 55, 75, 78, 86, 91, 96, 112], "gj": 45, "73": 45, "chp": 45, "desulphur": 45, "mass": 45, "sulphur": 45, "weight": [16, 45, 74, 78, 89, 115, 119], "mj": 45, "kg": 45, "chapter": 45, "umwelt": 45, "bundesamt": 45, "percent": [10, 45], "dea": 45, "26": [45, 112], "peat": 45, "ipcc": 45, "special": 45, "climat": [45, 72], "mitig": 45, "2011": 45, "annex": 45, "ii": [45, 105, 112], "methodologi": 45, "50th": 45, "percentil": 45, "epa": [45, 105, 106, 112], "egrid": 45, "us18": 45, "ap": 45, "av": 45, "ax": [16, 45], "test_check_zone_argument_typ": [46, 47], "test_check_zone_column": [46, 47], "test_check_zone_index": [46, 47], "timezon": 46, "ercot": [46, 102, 110, 112], "zenodo_record_id": 48, "reduct": [48, 52, 59, 60, 107, 112], "v0": 48, "latest": [48, 126], "pf_dcline": [51, 52, 54, 122, 125], "averaged_cong": [51, 122, 125], "storage_pg": [51, 52, 54, 122, 125], "storage_": [10, 51, 52, 54, 122, 125], "load_sh": [51, 52, 60, 61, 122, 125], "load_shift_up": [51, 52, 122, 125], "load_shift_dn": [51, 52, 122, 125], "infeas": [51, 52, 122, 125], "relev": [51, 58, 70, 74, 86, 112], "test_check_scenario_is_in_analyz": [52, 53], "test_check_scenario_is_in_analyze_state_argument_typ": [52, 53], "test_check_scenario_is_in_analyze_state_argument_valu": [52, 53], "test_get_demand_and_get_bus_demand": [52, 53], "test_get_solar": [52, 53], "test_bad_scenario_nam": [52, 53], "test_scenario_workflow": [52, 53], "mu": 52, "upper": [16, 52, 60, 61, 121, 122, 125], "nodal": 52, "shift": [52, 74, 76, 96, 104, 112], "down": [52, 60, 61, 97, 112, 119, 121, 122], "recov": 52, "properli": [16, 52, 74, 104, 112, 122, 123], "_builder": 52, "resolut": [52, 96, 107, 116, 117, 120], "batch": 52, "profiles_a": 52, "prepar": [16, 52, 60, 61], "profile_a": 52, "backup": [52, 127], "mount": [52, 122, 123, 127], "mode": [52, 55, 97, 122, 126], "deriv": [52, 74, 78, 96, 103, 108, 111, 112], "grid_attr": 54, "bus_demand": 54, "dcline_pf": 54, "dummi": [54, 60, 61], "gt_dcline_pf": 54, "random_se": 54, "6669": 54, "mockinputdata": 54, "exactli": [9, 16, 54, 127], "pydata": 54, "begin": [54, 74, 78, 121, 122], "frequenc": [9, 16, 54, 86, 89, 122, 125], "init": 54, "test_angular_dist": [55, 57], "test_find_closest_neighbor": [55, 57], "test_ll2uv": [55, 57], "test_cache_key_distinct_typ": [55, 57], "test_cache_key_valid_typ": [55, 57], "test_mem_cache_get_returns_copi": [55, 57], "test_mem_cache_put_dict": [55, 57], "test_mem_cache_put_version_never_chang": [55, 57], "test_no_collis": [55, 57], "test_print_is_dis": [55, 57], "univers": [55, 106, 112], "mnt": 55, "bes": 55, "pcm": 55, "tmp": 55, "scenariodata": 55, "container": 55, "reisejl": [55, 122, 123], "nativ": 55, "blank": 55, "deployment_mod": [55, 127], "neighbor": 55, "site": [55, 108, 112, 115], "coordin": [16, 55, 90, 91, 103, 112], "point1": 55, "point2": 55, "pair": [55, 58, 60, 62, 72, 122, 125], "deg": 55, "measur": 55, "eastward": 55, "greenwich": 55, "uk": 55, "equat": [55, 121, 122], "y": [16, 55, 78, 86, 91, 112], "z": [55, 74], "expos": 55, "distinct": [55, 126], "nonetyp": 55, "lookup": 55, "suppress": 55, "heirarch": 55, "usernam": [55, 126, 127], "be_server_us": 55, "server_us": [55, 127], "login": 55, "log": 55, "capsi": 57, "intend": [58, 60, 76], "estim": [58, 60, 72, 74, 78, 86, 112, 115, 122, 124], "At": [58, 60], "count": [16, 58, 60, 122, 125], "compris": [58, 60, 112, 120], "penetr": [58, 60, 107, 112], "resembl": [58, 60], "rec": [58, 60], "trade": [58, 60], "region_nam": [58, 60], "allowed_resourc": [58, 60], "external_ce_addl_historical_amount": [58, 60], "solar_percentag": [58, 60], "resource_nam": [58, 60], "nest": [58, 60], "27": [58, 60, 112], "magnitud": [58, 60, 107, 112, 119], "consumpt": [10, 58, 60, 78, 106, 112], "successfulli": [58, 60, 61, 122, 123], "wide": [58, 60], "remaind": [58, 60], "basic": [58, 60], "targets_and_new_capacities_df": [58, 60], "eastern_2030_clean_energy_target": [58, 60], "greater": [16, 58, 60, 121, 122, 128], "new_scenario": [58, 60], "zone_demand_sc": [58, 60], "massachusett": [58, 60], "york": [58, 60], "citi": [58, 60, 78], "15": [16, 58, 60, 101, 110, 112, 118, 119], "55": [58, 60], "creation": [58, 60, 72], "ultim": [58, 60], "convers": [58, 60, 112, 115], "nearli": [58, 60], "basi": [58, 60, 97, 126], "subject": [58, 60], "id2zon": [58, 59, 60], "loop": [58, 60, 72, 74], "model_immut": [59, 60], "zone2id": [59, 60], "bus2sub": [59, 60], "european": [59, 60], "continent": [16, 59, 60, 112, 117, 120], "eastern_western": [59, 60], "texas_western": [59, 60], "128": [59, 60], "nordic": [59, 60], "deliv": [60, 61], "high": [60, 61, 72, 76, 104, 107], "revers": [60, 61], "entiti": [60, 61, 101, 112], "alter": [60, 61], "illustr": [60, 61, 103, 104, 112, 122, 125, 128], "Then": [60, 61, 96, 105, 108, 112, 122, 123, 126, 128], "ran": [60, 61, 122, 124, 127], "printout": [60, 61], "set_nam": [60, 61], "set_tim": [60, 61], "08": [60, 61, 112], "24h": [60, 61, 122, 125], "vjan2021": [60, 61, 89], "az": [60, 61, 112], "washington": [60, 61, 111, 112], "arizona": [60, 61], "mt": [60, 61, 112], "oregon": [60, 61], "montana": [60, 61], "wy": [60, 61, 112], "wyom": [60, 61, 111, 112], "nm": [60, 61, 112], "2053002": [60, 61], "2053303": [60, 61], "2060002": [60, 61], "2060046": [60, 61], "bai": [60, 61], "2000": [60, 61], "2060771": [60, 61], "2021598": [60, 61], "2030454": [60, 61], "2074334": [60, 61], "750": [60, 61], "1800": [60, 61], "0025": [60, 61], "2090018": [60, 61], "900": [60, 61], "0015": [60, 61], "48": [60, 61, 76, 112, 122, 124], "125": [60, 61], "201": [60, 61], "138": [60, 61, 112], "2090023": [60, 61], "2090024": [60, 61], "conveni": [60, 61], "sai": [60, 61, 74], "step": [60, 61, 76, 97, 101, 103, 112, 126, 127], "onc": [60, 61, 70, 112, 119, 126], "screen": [60, 61], "immedi": [60, 61, 70, 71, 105], "mat": [60, 61, 78, 122, 123, 125, 127], "finish": [60, 61, 122, 125, 127], "process_run": [60, 61], "intens": [60, 61, 122, 125], "resid": [60, 61], "paus": [60, 61], "process_extract": [60, 61], "600": [60, 61], "pg_storag": [60, 61], "e_storag": [60, 61], "pf_ac": [60, 61], "pf_dc": [60, 61], "avg_cong": [60, 61], "accordingli": [60, 61, 122, 125, 127], "monitor": [60, 61], "megawatt": [60, 62], "supply_df": [60, 62], "describ": [60, 62, 104, 105, 108, 112, 127, 128], "serv": [16, 60, 62], "fit": [60, 62, 72], "score": [60, 62, 74], "max_diff": [60, 62], "p1": [60, 62], "f1": [60, 62], "p2": [60, 62], "f2": [60, 62], "max": [16, 60, 62, 70, 121, 122], "instruct": [60, 62, 122, 123, 126, 127, 128], "capabl": [60, 62, 107], "counterpart": [101, 112], "balanc": [74, 101, 103, 112, 121, 122], "author": [74, 101, 103, 112], "miso": [101, 112], "midcontin": [101, 112], "spp": [101, 108, 112], "southwest": [101, 112], "pool": [16, 101, 112], "exact": [101, 112], "further": [16, 101, 104, 112, 118], "subarea": [101, 112], "directli": [78, 101, 112], "custom": [16, 101, 112, 128], "counti": [74, 82, 101, 112], "eight": [102, 112], "weather": [97, 102, 112, 120], "council": [103, 112], "wecc": [13, 103, 112], "adjac": [103, 112], "laboratori": [104, 105, 106, 112], "nrel": [76, 92, 96, 104, 105, 106, 115, 117, 119], "ef": [76, 104, 105, 112], "sector": [76, 82, 97, 104, 105, 107, 112], "impend": [104, 112], "widespread": [104, 112], "2017": [78, 104, 106, 112, 116], "growth": [72, 104, 107, 112], "preliminari": [104, 112], "accompani": [104, 105, 112], "four": [104, 112, 121, 122], "residenti": [72, 76, 104, 112], "commerci": [72, 76, 104, 105, 112, 122, 123, 127], "medium": [76, 78, 104, 107], "slow": [76, 104, 112], "rapid": [76, 104, 113], "six": [104, 112], "2024": [76, 104, 112], "2040": [76, 78, 104, 112], "2050": [76, 78, 104, 106, 112], "enhanc": [76, 104, 112, 118], "classif": [104, 106, 112], "obviou": [104, 112], "implic": [104, 112], "vehicl": [78, 104, 105, 106, 107], "air": [72, 104, 112], "pump": [70, 72, 104, 108, 112], "water": [72, 104, 112], "heater": [72, 104, 112], "opportun": [104, 112], "defer": [104, 112], "abil": [104, 112], "vast": [104, 112], "explor": [104, 112], "prefer": [105, 112, 127], "travel": [78, 105, 106], "vmt": [78, 105], "urban": [78, 105, 106], "rural": [78, 105, 106], "depart": [105, 106, 112], "health": [105, 106, 112], "batteri": [78, 105, 112], "ldv": [78, 105, 107, 112], "ldt": [78, 105, 107, 112], "mdv": [78, 105, 107], "hdv": [78, 105, 107], "trip": [78, 105, 107], "algorithm": [105, 113], "drive": [78, 105, 106, 112], "household": [72, 105, 106, 112], "survei": [105, 106, 112], "nht": [78, 105, 106], "environment": [105, 106, 112, 113, 120], "protect": [105, 106, 112], "captur": [105, 107, 112], "weekend": [78, 105], "weekdai": [78, 105], "iii": [105, 112], "monthli": [70, 78, 89, 105, 108, 109, 111], "summer": [105, 112], "winter": [105, 112], "With": [105, 112, 122, 123], "demanddata": [63, 64, 65, 70, 105, 112], "transportation_electrif": [70, 71, 105, 112], "generate_bev_vehicle_profil": [70, 71, 105, 112], "300": [78, 105, 112], "underli": [105, 112], "broader": [105, 112], "script": [72, 105, 112, 113, 122, 123, 125, 126], "translate_zon": [105, 112], "matrix": [105, 112], "ua": [105, 112], "ra": [105, 112], "whatev": [105, 112, 122, 123], "multi": [105, 107, 112], "truck": [78, 106, 107, 112], "ornl": [106, 112], "gov": [99, 106, 109, 112], "www7": [106, 112], "censu": [74, 78, 82, 106], "bureau": [78, 106, 112], "2010": [106, 112], "criteria": [106, 112], "guidanc": [106, 112, 127], "geo": [106, 112], "submiss": [106, 112], "92": [106, 112], "jadun": [106, 112], "mcmillan": [106, 112], "steinberg": [106, 112], "muratori": [106, 112], "vimmerstedt": [106, 112], "fy18osti": [106, 112], "70485": [106, 112], "pdf": [106, 112], "mobil": [106, 107, 112], "automot": [106, 112], "california": [106, 108, 111, 112], "commiss": [106, 112], "almanac": [106, 112], "institut": [106, 112], "escholarship": [106, 112], "uc": [106, 112], "3np3p2t0": [106, 112], "emfac": [106, 112], "arb": [106, 112], "inventori": [106, 112], "0e7a83330a66b634f8c81b376ab6696cbd42e113": [106, 112], "five": [107, 112], "grand": [107, 112], "challeng": [107, 112], "economi": 107, "trend": [107, 112], "manufactur": [97, 107, 112], "road": [107, 112], "frequent": [107, 112, 126], "signific": [16, 107, 112, 122, 124], "precis": [16, 107, 112], "ti": [107, 112], "highli": [107, 112, 117], "affect": [10, 107, 112, 115], "charger": [78, 107, 112], "spatiotempor": [96, 107, 112], "heavi": [78, 107], "fleet": [107, 112], "core": [107, 112, 115], "intellig": [107, 112], "hp": [70, 72, 108, 112], "hyc": [108, 112], "did": [108, 112, 126], "close": [9, 108, 111, 112], "daylight": [9, 108, 112], "schedul": [108, 112], "ison": [108, 112], "nyiso": [108, 112], "pjm": [108, 112], "partial": [108, 112], "iso": [108, 111, 112], "equal": [76, 108, 111, 112, 121, 122], "923": [70, 95, 108, 111, 112], "divid": [108, 110, 111, 112, 115], "proportion": [108, 112], "epa_04_08_b": 109, "minut": [110, 112, 122, 123], "settlement": [110, 112], "mix": [110, 112], "unlik": [111, 112, 122, 125], "caiso": [111, 112], "outlook": [111, 112], "plate": [111, 112], "armi": [111, 112], "corp": [111, 112], "dam": [111, 112], "northwestern": [111, 112], "primarili": [111, 112, 120], "dataqueri": [111, 112], "usac": [111, 112], "dedic": 112, "fed": [112, 115], "clone": [112, 122, 123, 126, 127], "comma": [92, 112], "1mw": [92, 99, 112], "_v": 112, "letter": 112, "jan": 112, "digit": [16, 82, 112], "2021": [112, 113], "differenti": 112, "lowercas": 112, "demand_vjan2021": 112, "demand_vjan2021b": 112, "demand_vjan2021c": 112, "forth": 112, "half": 112, "million": 112, "dimens": [76, 112], "34": 112, "481": 112, "plug": [112, 127], "until": 112, "orang": 112, "fig": 112, "driver": 112, "vallei": 112, "anonym": 112, "calibr": 112, "reflect": [16, 76, 112], "incorpor": 112, "similarli": 112, "park": 112, "dwell": [70, 71, 112], "tempor": [112, 119], "capita": 112, "taken": [112, 126], "granular": 112, "again": 112, "uncoordin": 112, "determinist": [97, 112], "minim": [78, 112], "wholesal": 112, "flatten": 112, "vari": [78, 112, 119, 121, 122], "sequenti": 112, "sent": [97, 112], "car": 112, "unplug": 112, "whichev": 112, "notion": 112, "bracket": 112, "alongsid": 112, "kwh": [78, 112], "consider": [78, 112], "trippub": 112, "nine": 112, "england": 112, "ma": 112, "me": 112, "nh": 112, "ri": 112, "vt": 112, "02": [112, 113], "middl": 112, "atlant": [112, 117], "pa": 112, "nj": 112, "ny": 112, "03": 112, "east": 112, "north": [112, 120], "central": [112, 127], "il": 112, "IN": 112, "oh": 112, "wi": 112, "west": 112, "ia": 112, "mn": 112, "mo": 112, "nd": 112, "ne": 112, "sd": 112, "south": 112, "fl": 112, "md": 112, "nc": 112, "sc": 112, "va": 112, "wv": 112, "al": 112, "ky": 112, "tn": 112, "07": [112, 122, 125], "la": 112, "mountain": 112, "09": [112, 122, 123], "pacif": [112, 117], "ak": [16, 112], "hi": [16, 112], "21": 112, "28": 112, "preced": 112, "yyyymm": 112, "hhmm": 112, "14": 112, "17": 112, "window": [76, 78, 112, 121, 122], "replic": 112, "3979": 112, "1235": 112, "32831": 112, "10664": 112, "30815": 112, "5116": 112, "8962": 112, "2885": 112, "58173": 112, "9620": 112, "2294": 112, "611": 112, "52982": 112, "7818": 112, "9127": 112, "2033": 112, "53554": 112, "16386": 112, "2881": 112, "935": 112, "29513": 112, "9347": 112, "31788": 112, "5478": 112, "10157": 112, "2960": 112, "58900": 112, "9465": 112, "2416": 112, "678": 112, "60929": 112, "8530": 112, "10006": 112, "2084": 112, "40161": 112, "12116": 112, "8302": 112, "8407": 112, "render": [16, 112], "vocat": 112, "depot": 112, "contract": 112, "stop": 112, "uniqu": [89, 90, 112, 115], "destin": [112, 122, 123], "33": 112, "gallon": 112, "gasolin": 112, "gge": 112, "alloc": 112, "lastli": 112, "subtract": 112, "v_": [112, 121, 122], "a_": 112, "p_": 112, "72118": 112, "762365": 112, "27882": 112, "237635": 112, "januari": [76, 112, 113, 122, 125], "0731": 112, "februari": 112, "0697": 112, "march": 112, "0817": 112, "april": 112, "0823": 112, "0875": 112, "0883": 112, "juli": [74, 112], "0923": 112, "august": 112, "0934": 112, "septemb": 112, "0847": 112, "octob": 112, "0865": 112, "novemb": 112, "0802": 112, "decemb": [76, 112], "proport": [13, 16, 90, 112, 121, 122, 124], "56": 112, "dot": 112, "00252": 112, "00196": 112, "00238": 112, "00230": 112, "00266": 112, "00207": 112, "00251": 112, "00243": 112, "00279": 112, "00218": 112, "00257": 112, "00296": 112, "00231": 112, "00268": 112, "00277": 112, "00299": 112, "00233": 112, "00285": 112, "00275": 112, "00313": 112, "00244": 112, "00297": 112, "00287": 112, "00321": 112, "00250": 112, "00301": 112, "00291": 112, "00319": 112, "00249": 112, "00304": 112, "00294": 112, "00302": 112, "00236": 112, "00276": 112, "00298": 112, "00232": 112, "00282": 112, "00272": 112, "00284": 112, "00221": 112, "00270": 112, "00261": 112, "00217": 112, "00262": 112, "00253": 112, "2019": [72, 112], "2025": 112, "2034": 112, "2035": 112, "2044": 112, "2045": 112, "103": 112, "117": 112, "137": 112, "153": 112, "159": 112, "97": 112, "112": 112, "133": 112, "149": 112, "155": 112, "85": 112, "102": 112, "124": 112, "144": 112, "60": [86, 112], "69": 112, "78": 112, "83": 112, "57": 112, "66": 112, "76": 112, "81": 112, "79": 112, "min": [16, 112, 118, 121, 122], "sum_": [112, 121, 122], "j": [112, 121, 122, 125], "seg": [78, 112], "f_": [112, 121, 122], "ij": 112, "x_": [112, 121, 122], "y_i": 112, "discharg": [112, 121, 122], "inequ": 112, "y_1": 112, "1j": 112, "y_2": 112, "dotsc": 112, "y_n": 112, "leq": 112, "delta": [112, 121, 122], "t_": 112, "eta": [112, 121, 122], "kw": [78, 112], "timescal": 112, "equip": 112, "evs": [78, 112], "tend": [112, 119], "distinguish": 112, "spent": 112, "impract": 112, "shorter": 112, "warrant": 112, "remain": [92, 112], "dashboard": 112, "undoubtedli": 112, "nsrdb": [70, 90, 112, 114, 115, 116], "1998": [112, 116], "grow": [112, 116], "4x4": [112, 116], "kilomet": [86, 112, 116, 117, 120], "psm": [112, 116], "v3": [112, 116], "fetch": [74, 112, 114, 116, 126], "global": [112, 115, 126], "horizont": [16, 112, 115], "ghi": [92, 112, 115], "ground": [97, 99, 112, 115, 120], "temperatur": [72, 74, 92, 112, 115], "sam": [70, 90, 112, 114, 115], "meteorolog": [112, 115], "scc": [112, 115], "pysam": [92, 112, 115], "pvwatt": [112, 115], "v7": [112, 115], "rack": [112, 115], "backtrack": [112, 115], "invert": [112, 115], "860": [96, 112, 115, 119], "pv": [90, 94, 112, 115], "noaa": [99, 100, 112, 118, 120], "assimil": [112, 118, 120], "ncep": [112, 120], "america": [112, 120], "2012": [112, 120], "80": [97, 99, 112, 120], "meter": [86, 97, 112, 120], "13x13": [112, 120], "netcdf": [112, 120], "hrrr": [70, 96, 112, 118], "cloud": [112, 118, 122, 123], "resolv": [112, 118, 126], "convect": [112, 118], "atmospher": [112, 113, 114, 118], "3km": [112, 118], "radar": [112, 118], "13km": [112, 118], "aw": [112, 118], "s3": [112, 118, 122, 123], "bucket": [112, 118], "direct": [112, 119], "iec": [96, 112, 119], "hub": [96, 97, 112, 119], "height": [96, 97, 112, 119], "80m": [112, 119], "instantan": [112, 119], "spatio": [112, 119], "throughout": [112, 119], "boost": [112, 119], "convex": [112, 119], "concav": [112, 119], "shut": [112, 119], "termin": [112, 113], "cli": [63, 112, 113], "download_manag": [63, 64, 112, 113], "wind_data_rap": [112, 113], "solar_data_ga": [112, 113], "solar_data_nsrdb": [112, 113], "toolkit": [112, 113, 117], "exit": [112, 113, 122, 125], "start_dat": [74, 99, 112, 113, 122, 125], "end_dat": [74, 99, 112, 113, 122, 125], "api_kei": [74, 92, 112, 113], "5th": [112, 113], "pkl": [112, 113, 122, 125], "no_imput": [112, 113], "feed": [112, 114], "jun": 112, "tarroja": 112, "forest": 112, "mac": [112, 128], "kinnon": 112, "samuelsen": 112, "technic": 112, "276": 112, "115439": 112, "sciencedirect": 112, "pii": 112, "s030626192030951x": 112, "doi": 112, "1016": 112, "apenergi": 112, "et": 112, "golden": 112, "tp": 112, "6a20": 112, "zhang": 112, "phd": 112, "thesi": 112, "irvin": 112, "0199j451": 112, "radiat": [113, 115], "naiv": [70, 90, 113, 114], "irradi": [92, 117], "2007": 117, "2013": 117, "uniform": [74, 117], "2x2": 117, "baja": 117, "peninsula": 117, "ocean": 117, "scalabl": 117, "w": [9, 16, 121, 122], "e_": [121, 122], "g_": [121, 122], "inject": [121, 122], "chg": [121, 122], "di": [121, 122], "s_": [121, 122], "theta_": [121, 122], "binari": [97, 121, 122, 123], "viol": [121, 122], "c_": [121, 122], "d_": [121, 122], "width": [8, 16, 121, 122], "arbitrarili": [121, 122], "big": [121, 122], "constrain": [121, 122], "relax": [121, 122], "drain": [121, 122], "penalti": [121, 122], "w_": [121, 122], "imped": [86, 121, 122], "underlin": [121, 122], "overlin": [121, 122], "le": [121, 122], "cdot": [121, 122], "left": [9, 121, 122], "suffici": [121, 122], "j_": [121, 122], "quad": [121, 122], "foral": [121, 122], "cup": [121, 122], "m_": [121, 122], "delta_": [121, 122], "eta_": [121, 122], "frac": [121, 122], "r_": [121, 122], "ge": [121, 122], "exce": [121, 122], "penal": [121, 122], "admitt": [121, 122], "restrict": [121, 122], "reward": [121, 122], "standalon": 122, "solv": [122, 125], "ram": [122, 124], "gb": [122, 124], "roughli": [122, 124], "smaller": [122, 124], "imag": [122, 123, 126], "jump": [122, 123, 125], "academ": [122, 123], "unix": [122, 123], "straightforward": [122, 123], "opt": [122, 123], "unzip": [122, 123], "chosen": [16, 122, 123], "wget": [122, 123], "q": [122, 123], "julialang": [122, 123], "bin": [9, 122, 123, 127], "linux": [122, 123, 128], "x64": [122, 123], "x86_64": [122, 123], "tar": [122, 123], "gz": [122, 123], "xf": [122, 123], "expand": [122, 123], "bash": [122, 123], "bashrc": [122, 123], "gurobi9": [122, 123], "0_linux64": [122, 123], "xvfz": [122, 123], "gurobi910": [122, 123], "linux64": [122, 123], "subdirectori": [122, 123, 125], "gurobi_hom": [122, 123], "ld_library_path": [122, 123], "lib": [122, 123], "portal": [122, 123], "parent": [122, 123], "lic": [122, 123], "sh": [122, 123], "shell": [122, 123, 128], "pkg": [122, 123], "repl": [122, 123], "__": [122, 123], "releas": [122, 123], "manifest": [122, 123], "toml": [122, 123], "TO": [122, 123, 125], "glpk": [122, 123, 125, 127], "gnu": [122, 123], "kit": [122, 123], "julia_project": [122, 123, 127], "strongli": [122, 123], "importantli": [122, 123], "pyreisejl": [122, 123, 125], "txt": [122, 123, 127, 128], "pip": [122, 123, 127, 128], "compiled_modul": [122, 123], "dockerfil": [122, 123], "daemon": [122, 123], "usr": [122, 123], "gurobi_licens": [122, 123], "regist": [74, 75, 122, 125], "run_scenario": [122, 125], "n_interv": [122, 125], "start_index": [122, 125], "inputfold": [122, 125], "optimizer_factori": [122, 125], "Be": [122, 125], "pwd": [122, 125], "outputfold": [122, 125], "solver_kwarg": [122, 125], "run_scenario_gurobi": [122, 125], "7th": [122, 125], "julia_env": [122, 125], "dir": [122, 125], "omit": [122, 125], "kept": [122, 125], "Will": [86, 122, 125], "clp": [122, 125], "env": [122, 125, 127], "processor": [122, 125], "invok": [63, 70, 122, 125], "invoc": [122, 125], "interest": [9, 16, 74, 91, 122, 125], "compat": [97, 123, 127], "repo_nam": 126, "fork": [126, 127], "draw": [16, 126], "peer": 126, "wikipedia": 126, "beyond": 126, "jame": 126, "howison": 126, "wish": [126, 127], "corner": 126, "your_usernam": 126, "upstream": 126, "checkout": 126, "feature_nam": 126, "newest": 126, "head": 126, "rebas": 126, "conflict": 126, "feat": 126, "hat": 126, "wobbl": 126, "tens": 126, "chore": 126, "refactor": 126, "grunt": 126, "ci": 126, "perf": 126, "eg": 126, "semi": 126, "colon": 126, "semant": 126, "behav": 126, "awar": [9, 126], "diverg": 126, "contrari": 126, "forward": 126, "ff": 126, "neither": [78, 126], "reconcil": 126, "messi": 126, "revis": 126, "reorder": 126, "reword": 126, "meld": 126, "pr": [16, 97, 126], "critic": 126, "defect": 126, "teach": 126, "400": 126, "faster": 126, "caught": 126, "assigne": 126, "approv": 126, "fastest": 127, "coloc": 127, "virtualenv": 127, "sy": 127, "venv": [127, 128], "virtual": [127, 128], "provis": 127, "authent": 127, "keygen": 127, "later": 127, "authorized_kei": 127, "scenariolist": 127, "executelist": 127, "pyenv": 128, "scratch": 128, "pipfil": 128, "reproduc": 128, "troubleshoot": 128, "test_demand": [8, 9], "test_tim": [8, 9], "get_demand_time_seri": [8, 9], "get_net_demand_time_seri": [8, 9], "is_24_hour_format": [8, 9], "is_dst": [8, 9], "slice_time_seri": [8, 9], "conftest": [8, 16, 64, 65], "test_canva": [8, 16], "test_plot_bar_generation_max_min_actu": [8, 16], "test_plot_bar_generation_stack": [8, 16], "test_plot_bar_generation_vs_capac": [8, 16], "test_plot_bar_renewable_max_profile_actu": [8, 16], "test_plot_bar_shortfal": [8, 16], "test_plot_capacity_map": [8, 16], "test_plot_carbon_bar": [8, 16], "test_plot_pie_generation_vs_capac": [8, 16], "test_plot_scatter_capacity_vs_capacity_factor": [8, 16], "test_plot_scatter_capacity_vs_cost_curve_slop": [8, 16], "test_plot_scatter_capacity_vs_curtail": [8, 16], "test_plot_shadowprice_map": [8, 16], "test_plot_sim_vs_hist": [8, 16], "test_plot_tornado": [8, 16], "canva": 8, "create_map_canva": [8, 16], "plot_bar_generation_max_min_actu": 8, "plot_bar_generation_stack": 8, "make_gen_cap_custom_data": [8, 16], "plot_bar_renewable_max_profile_actu": 8, "plot_capacity_map": 8, "add_plant_capac": [8, 16], "map_plant_capac": [8, 16], "add_emiss": [8, 16], "aggregate_bus_emission_differ": [8, 16], "aggregate_bus_emission_gener": [8, 16], "combine_bus_info_and_emiss": [8, 16], "prepare_bus_data_differ": [8, 16], "prepare_bus_data_gener": [8, 16], "count_nodes_per_st": [8, 16], "add_lmp": [8, 16], "aggregate_bus_lmp": [8, 16], "add_arrow": [8, 16], "aggregate_plant_gener": [8, 16], "plot_shadowprice_map": 8, "plot_shadowpric": [8, 16], "plot_sim_vs_hist": 8, "plotset": [8, 16], "fontsiz": [8, 16], "size_inch": [8, 16], "plot_generation_sim_vs_hist": [8, 16], "plot_stat": 8, "add_state_bord": [8, 16], "add_state_color": [8, 16], "add_state_legend": [8, 16], "add_state_tooltip": [8, 16], "download_states_json": [8, 16], "download_states_shapefil": [8, 16], "expand_data_sourc": [8, 16], "get_state_bord": [8, 16], "plot_tornado": 8, "plot_transmission_upgrades_map": 8, "add_transmission_upgrad": [8, 16], "map_transmission_upgrad": [8, 16], "map_risk_bind": [8, 16], "projection_help": 8, "convert_shapefile_to_latlon_dict": [8, 16], "project_bord": [8, 16], "project_branch": [8, 16], "project_bu": [8, 16], "test_bind": [9, 10], "test_capac": [9, 10], "test_cost": [9, 10], "test_emiss": [9, 10], "test_summar": [9, 10], "carbon_diff": [9, 10], "test_get_demand_time_seri": [9, 12], "test_get_net_demand_time_seri": [9, 12], "test_change_time_zon": [9, 12], "test_change_time_zone_argument_typ": [9, 12], "test_change_time_zone_argument_valu": [9, 12], "test_daily_resampling_incomplete_and_time_shift_mean": [9, 12], "test_daily_resampling_incomplete_and_time_shift_sum": [9, 12], "test_daily_resampling_incomplete_mean": [9, 12], "test_daily_resampling_incomplete_sum": [9, 12], "test_daily_resampling_mean": [9, 12], "test_daily_resampling_sum": [9, 12], "test_daily_resampling_time_shift_mean": [9, 12], "test_daily_resampling_time_shift_sum": [9, 12], "test_is_24_hour_format": [9, 12], "test_is_dst": [9, 12], "test_monthly_resampling_incomplete_and_time_shift_mean": [9, 12], "test_monthly_resampling_incomplete_and_time_shift_sum": [9, 12], "test_monthly_resampling_incomplete_mean": [9, 12], "test_monthly_resampling_incomplete_sum": [9, 12], "test_monthly_resampling_mean": [9, 12], "test_monthly_resampling_sum": [9, 12], "test_monthly_resampling_time_shift_mean": [9, 12], "test_monthly_resampling_time_shift_sum": [9, 12], "test_resampling_argument_valu": [9, 12], "test_slic": [9, 12], "test_slicing_argument_valu": [9, 12], "test_weekly_resampling_incomplete_and_time_shift_mean": [9, 12], "test_weekly_resampling_incomplete_and_time_shift_sum": [9, 12], "test_weekly_resampling_incomplete_mean": [9, 12], "test_weekly_resampling_incomplete_sum": [9, 12], "test_weekly_resampling_mean": [9, 12], "test_weekly_resampling_sum": [9, 12], "test_weekly_resampling_time_shift_mean": [9, 12], "test_weekly_resampling_time_shift_sum": [9, 12], "test_congestion_surplu": [9, 13], "test_util": [9, 13], "stamp": [9, 16], "tz": [9, 16, 90, 92], "pand": 9, "resampl": 9, "dst": 9, "observ": [9, 72, 76], "agg": 9, "week": [9, 16, 74, 76, 78], "midnight": 9, "sundai": [9, 16, 78], "incomplet": 9, "clip": 9, "between_tim": [9, 16], "dayofweek": [9, 16], "datetime64": [9, 10, 16, 74, 89], "complementari": [9, 16], "pick": [9, 16], "integ": [9, 16, 97], "mondai": [9, 16], "testcheckepsilon": [10, 11], "test_bad_typ": [10, 11], "test_bad_valu": [10, 11], "test_good_float_valu": [10, 11], "test_good_int_valu": [10, 11], "test_zero": [10, 11], "testcheckscenario": [10, 11], "test_bad_scenario_st": [10, 11], "test_bad_scenario_typ": [10, 11], "test_good_scenario": [10, 11], "testpmaxconstraint": [10, 11], "get_default_expect": [10, 11], "test_pmax_constraints_default": [10, 11], "test_pmax_constraints_default_sepc_epsilon1": [10, 11], "test_pmax_constraints_default_sepc_epsilon2": [10, 11], "test_pmax_constraints_default_sepc_epsilon3": [10, 11], "testpminconstraint": [10, 11], "test_pmin_constraints_default": [10, 11], "test_pmin_constraints_default_spec_epsilon1": [10, 11], "test_pmin_constraints_default_spec_epsilon2": [10, 11], "test_pmin_constraints_default_spec_epsilon3": [10, 11], "testrampconstraint": [10, 11], "test_ramp_constraints_default": [10, 11], "test_ramp_constraints_spec_epsilon1": [10, 11], "test_ramp_constraints_spec_epsilon2": [10, 11], "test_ramp_constraints_spec_epsilon3": [10, 11], "test_nldc_calculation_solar": [10, 11], "test_nldc_calculation_solar_wind": [10, 11], "test_nldc_calculation_wind_5_hour": [10, 11], "test_nldc_calculation_wind_list": [10, 11], "test_nldc_calculation_wind_set": [10, 11], "test_nldc_calculation_wind_solar": [10, 11], "test_nldc_calculation_wind_str": [10, 11], "test_nldc_calculation_wind_tupl": [10, 11], "test_calculate_net_load_peak_solar": [10, 11], "test_calculate_net_load_peak_solar_5": [10, 11], "test_calculate_net_load_peak_solar_wind": [10, 11], "test_calculate_net_load_peak_solar_wind_5": [10, 11], "test_calculate_net_load_peak_wind": [10, 11], "test_calculate_net_load_peak_wind_5": [10, 11], "test_failure_hours_typ": [10, 11], "test_failure_no_resourc": [10, 11], "test_failure_no_resources_pres": [10, 11], "test_failure_one_resource_not_pres": [10, 11], "test_failure_resources_type_dict": [10, 11], "test_failure_scenario_typ": [10, 11], "test_failure_too_many_hour": [10, 11], "test_failure_zero_hour": [10, 11], "test_get_capacity_by_resourc": [10, 11], "test_get_capacity_factor_time_seri": [10, 11], "test_get_storage_capac": [10, 11], "test_sum_capacity_by_type_zon": [10, 11], "mock_gencost_data": [10, 11], "test_calculate_cost_equal_both_method": [10, 11], "test_negative_pg": [10, 11], "test_pass_just_gencost": [10, 11], "test_pass_just_pg": [10, 11], "test_pass_noth": [10, 11], "test_pass_too_many_th": [10, 11], "testcalculatecurtailmentpercentag": [10, 11], "test_calculate_curtailment_percentage_default": [10, 11], "test_calculate_curtailment_percentage_solar": [10, 11], "test_calculate_curtailment_percentage_solar_wind": [10, 11], "test_calculate_curtailment_percentage_wind": [10, 11], "test_calculate_curtailment_percentage_wind_offshor": [10, 11], "testcalculatecurtailmenttimeseri": [10, 11], "test_calculate_curtailment_time_series_default": [10, 11], "test_calculate_curtailment_time_series_solar": [10, 11], "test_calculate_curtailment_time_series_solar_wind_set": [10, 11], "test_calculate_curtailment_time_series_solar_wind_tupl": [10, 11], "test_calculate_curtailment_time_series_wind_argument_typ": [10, 11], "test_calculate_curtailment_time_series_wind_solar_list": [10, 11], "testcalculatecurtailmenttimeseriesgroup": [10, 11], "test_curtailment_time_series_by_area": [10, 11], "test_curtailment_time_series_by_areas_and_resourc": [10, 11], "test_curtailment_time_series_by_resource_and_area": [10, 11], "test_curtailment_time_series_by_resources_and_area": [10, 11], "testcheckresourceinscenario": [10, 11], "test_error_geothermal_curtail": [10, 11], "test_error_no_solar": [10, 11], "testgetcurtailmenttimeseri": [10, 11], "test_get_curtailment_time_seri": [10, 11], "testsummarizecurtailmentbybu": [10, 11], "test_summarize_curtailment_by_bu": [10, 11], "testsummarizecurtailmentbyloc": [10, 11], "test_summarize_curtailment_by_loc": [10, 11], "testcarboncalcul": [10, 11], "test_carbon_calc_always_on": [10, 11], "test_carbon_calc_decommit": [10, 11], "test_carbon_calc_simpl": [10, 11], "testemissionstatsargu": [10, 11], "test_method_typ": [10, 11], "test_method_valu": [10, 11], "test_pollutant_valu": [10, 11], "testemissionssummar": [10, 11], "test_carbon_diff": [10, 11], "test_emissions_is_non_neg": [10, 11], "test_emissions_summar": [10, 11], "testnoxcalcul": [10, 11], "test_calculate_nox_disallowed_method": [10, 11], "test_calculate_nox_simpl": [10, 11], "testso2calcul": [10, 11], "test_calculate_so2_disallowed_method": [10, 11], "test_calculate_so2_simpl": [10, 11], "testsumgenerationbytypezon": [10, 11], "test_print_stat": [10, 11], "test_sum_gener": [10, 11], "test_with_scenario_not_analyz": [10, 11], "test_with_str": [10, 11], "test_with_time_chang": [10, 11], "test_with_time_change_and_time_slic": [10, 11], "test_with_time_slic": [10, 11], "hist_gen_raw": [10, 11], "sim_gen_result": [10, 11], "test_get_generation_time_series_by_resourc": [10, 11], "test_get_storage_time_seri": [10, 11], "test_sum_generation_by_state_shap": [10, 11], "test_sum_generation_by_state_values_sc": [10, 11], "test_summarize_hist_gen_include_area": [10, 11], "test_summarize_hist_gen_shap": [10, 11], "epsilon": 10, "001": [10, 16], "decommit_threshold": 10, "AND": [10, 16], "esourc": 10, "scenario_1": [10, 16], "scenario_2": [10, 16], "ton": 10, "time_rang": [10, 16], "start_timestamp": [10, 16], "end_timestamp": [10, 16], "all_resourc": 10, "test_calculate_congestion_surplus_single_tim": [13, 14], "test_calculate_congestion_surplus_three_tim": [13, 14], "test_count_hours_gt_threshold": [13, 14], "test_generate_cong_stat": [13, 14], "test_get_util": [13, 14], "test_get_utilization_median": [13, 14], "analys": 13, "u1flag": 13, "u2flag": 13, "u3flag": 13, "median": [13, 16], "kirschen": 14, "strbac": 14, "uncongest": 14, "fuzzi": 14, "plt_close": [16, 17], "test_create_map_canva": [16, 17], "test_create_map_canvas_argument_s": [16, 17], "test_create_map_canvas_argument_typ": [16, 17], "test_create_map_canvas_figs": [16, 17], "test_create_map_canvas_rang": [16, 17], "test_check_func_kwarg": [16, 17], "test_check_func_kwargs_error": [16, 17], "test_get_func_kwarg": [16, 17], "test_get_func_kwargs_error": [16, 17], "test_plot_bar_generation_max_min_actual_argument_typ": [16, 17], "test_plot_bar_generation_max_min_actual_argument_valu": [16, 17], "test_plot_bar_generation_stack_argument_typ": [16, 17], "test_plot_bar_generation_stack_argument_valu": [16, 17], "test_get_bar_display_val_greater_than_ten": [16, 17], "test_get_bar_display_val_less_than_ten": [16, 17], "test_get_bar_display_val_zero": [16, 17], "test_make_gen_cap_custom_data_given_cap_data": [16, 17], "test_make_gen_cap_custom_data_given_gen_and_cap_data": [16, 17], "test_make_gen_cap_custom_data_given_no_data": [16, 17], "test_plot_bar_renewable_max_profile_actual_argument_typ": [16, 17], "test_plot_bar_renewable_max_profile_actual_argument_valu": [16, 17], "test_plot_bar_shortfall_argument_typ": [16, 17], "test_plot_bar_shortfall_argument_valu": [16, 17], "test_map_plant_capac": [16, 17], "test_map_plant_capacity_argument_valu": [16, 17], "test_plot_carbon_bar_argument_typ": [16, 17], "test_plot_carbon_bar_argument_valu": [16, 17], "test_plot_pie_generation_vs_capacity_argument_typ": [16, 17], "test_plot_pie_generation_vs_capacity_argument_valu": [16, 17], "test_plot_scatter_capacity_vs_capacity_factor_argument_typ": [16, 17], "test_plot_scatter_capacity_vs_cost_curve_slope_argument_typ": [16, 17], "test_plot_scatter_capacity_vs_curtailment_argument_typ": [16, 17], "test_construct_branch_data": [16, 17], "test_construct_bus_data": [16, 17], "test_get_bus_legend_bars_and_label": [16, 17], "test_get_bus_legend_bars_and_labels_clamps_large_numb": [16, 17], "test_get_bus_legend_bars_and_labels_min_bar_len_is_on": [16, 17], "test_get_bus_legend_bars_and_labels_with_round": [16, 17], "test_get_lmp_split_points_with_min_between_neg_one_and_on": [16, 17], "test_get_lmp_split_points_with_min_lmp_below_neg_on": [16, 17], "test_get_lmp_split_points_with_min_lmp_more_than_on": [16, 17], "test_plot_generation_sim_vs_hist": [16, 17], "test_plot_generation_sim_vs_hist_argument_typ": [16, 17], "test_plot_generation_sim_vs_hist_argument_valu": [16, 17], "test_plot_tornado_argument_typ": [16, 17], "figsiz": 16, "x_rang": 16, "y_rang": 16, "pixel": [16, 91], "epsg": 16, "3857": 16, "show_as_st": 16, "plot_show": 16, "font": 16, "text": 16, "curtailment_split": 16, "titl": 16, "len": 16, "hatch": 16, "gen_data": 16, "cap_data": 16, "twh": 16, "reousrc": 16, "custom_data": 16, "resource_typ": 16, "resource_label": 16, "hand": 16, "target_df": 16, "qualifi": 16, "disaggreg": 16, "min_capac": 16, "size_factor": 16, "new_vs_existing_pl": 16, "glyph": 16, "opac": 16, "1400": 16, "800": 16, "legend_loc": 16, "bottom_right": 16, "legend": 16, "labels_s": 16, "emit": 16, "color_increas": 16, "ff8563": 16, "color_decreas": 16, "color_co": 16, "color_ng": 16, "BE": 16, "purpl": 16, "grai": 16, "bus_emiss": 16, "color_up": 16, "color_down": 16, "hover": 16, "tip": 16, "decras": 16, "show_demand": 16, "type2color": 16, "type2label": 16, "tick": 16, "show_net_demand": 16, "piyg": 16, "save_filenam": 16, "cbar_format": 16, "imshow": 16, "colormap": 16, "vertic": 16, "ticker": 16, "formatt": 16, "colorbar": 16, "contour": 16, "branch_distance_cutoff": 16, "branch_width_scale_factor": 16, "hvdc_width_scale_factor": 16, "b2b_size_scale_factor": 16, "cutoff": 16, "to_back": 16, "branch_device_cutoff": 16, "bus_with_lmp": 16, "clamp": 16, "45": 16, "resource_color": 16, "min_percentag": 16, "piec": 16, "comparison": 16, "pf_threshold": 16, "dist_threshold": 16, "addorw": 16, "arrow": 16, "arrow_s": 16, "from_x": 16, "from_i": 16, "to_x": 16, "to_i": 16, "b2b_dcline": 16, "demand_cent": 16, "ac_branch_color": 16, "dc_branch_color": 16, "01d4ed": 16, "solar_color": 16, "wind_color": 16, "demand_color": 16, "circle_scale_factor": 16, "bg_width_scale_factor": 16, "pf_width_scale_factor": 16, "00125": 16, "arrow_pf_threshold": 16, "3000": 16, "arrow_dist_threshold": 16, "num_ac_arrow": 16, "num_dc_arrow": 16, "min_arrow_s": 16, "branch_alpha": 16, "b2b": 16, "facil": 16, "vice": 16, "versa": 16, "12pt": 16, "markers": 16, "lmp_split_point": 16, "fewer": 16, "layout": [16, 85, 86], "show_max": 16, "addition": 16, "state_list": [16, 72], "line_color": 16, "grei": 16, "line_width": 16, "fill_alpha": 16, "border": 16, "background": 16, "outlin": 16, "thick": 16, "patch": 16, "state2color": 16, "state2label": 16, "title_s": 16, "label_s": 16, "tooltip_titl": 16, "tooltip": 16, "toolip": 16, "json": [16, 74], "state2data": 16, "key_nam": 16, "glyphrender": 16, "pad": 16, "nan": 16, "state_colors_arg": 16, "state_tooltips_arg": 16, "state_legends_kwarg": 16, "tornado": 16, "graph": 16, "smallest": 16, "largest": 16, "branch_merg": 16, "dc_merg": 16, "b2b_indic": 16, "diff_threshold": 16, "all_branch_scal": 16, "diff_branch_scal": 16, "all_branch_min": 16, "diff_branch_min": 16, "b2b_scale": 16, "dcline_upgrade_dist_threshold": 16, "highlight": 16, "scenario1": 16, "scenario2": 16, "bottom_left": 16, "plot_kwarg": 16, "risk_or_bind": 16, "us_states_dat": 16, "color_bar_width": 16, "500": 16, "palett": 16, "all_branch_scale_factor": 16, "all_branch_min_width": 16, "select_branch_scale_factor": 16, "select_branch_min_width": 16, "show_color_bar": 16, "linear_cmap": 16, "traffic_palett": 16, "unhighlight": 16, "utilization_df": 16, "branch_scale_factor": 16, "branch_min_width": 16, "hole": 16, "abbrev": 16, "minu": 16, "reproject": [16, 91], "data_sourc": [63, 64, 69], "demand_data": [63, 64], "hydro_data": [63, 64], "solar_data": [63, 64], "wind_data": [63, 64], "add_data_source_to_download_pars": [63, 64], "validate_d": [63, 64], "validate_file_path": [63, 64], "validate_year": [63, 64], "flexibilitydata": [63, 70], "griddata": [63, 70], "hydrodata": [63, 64, 65, 70], "solardata": [63, 70], "pv_track": [63, 70], "mock_gener": [63, 70], "test_rate_limit": [63, 70], "test_retri": [63, 70], "power_curv": [63, 70], "get_monthly_net_gener": [63, 70], "trim_eia_form_923": [63, 70], "request_util": 63, "ratelimit": [63, 70], "transienterror": [63, 70], "rate_limit": [63, 70, 92], "retri": [63, 70], "test_data_sourc": [64, 65], "test_demand_data": [64, 65], "test_hydro_data": [64, 65], "test_solar_data": [64, 65], "test_wind_data": [64, 65], "command_nam": [64, 65], "commandnotsupportederror": [64, 65], "test_download_manag": [64, 67], "test_add_data_source_to_download_pars": [64, 69], "test_validate_d": [64, 69], "test_validate_date_bad_d": [64, 69], "test_validate_file_path": [64, 69], "test_validate_file_path_bad_path": [64, 69], "test_validate_file_path_is_direcotri": [64, 69], "test_validate_year": [64, 69], "test_validate_year_bad_year": [64, 69], "subpars": 64, "datasourc": [64, 65], "argpars": 64, "argumentpars": 64, "date_str": 64, "year_str": 64, "notsupporteddatasourc": 65, "bldg_electrif": [70, 71], "ff2elec_profile_generator_cook": [70, 71], "ff2elec_profile_generator_dhw": [70, 71], "ff2elec_profile_generator_htg": [70, 71], "ff_model": [70, 71], "floor_area_avg_slop": [70, 71], "load_project": [70, 71], "load_projection_scenario": [70, 71], "puma_data_agg": [70, 71], "puma_hp_estim": [70, 71], "weather_data_agg": [70, 71], "zone_profile_gener": [70, 71], "clean_data": [70, 71], "get_eia_data": [70, 71], "map_ba": [70, 71], "nrel_ef": [70, 71], "aggregate_demand": [70, 71], "get_efs_annual_data": [70, 71], "get_efs_data": [70, 71], "map_stat": [70, 71], "charging_optim": [70, 71], "data_help": [70, 71], "data_process": [70, 71], "generate_scaling_factor": [70, 71], "immediate_charging_hdv": [70, 71], "smart_charg": [70, 71], "batch_process": [70, 81], "doe_data": [70, 81], "geo_data": [70, 81], "decompose_profil": [70, 88], "interpolate_capacity_factor": [70, 88], "net_demand": [70, 88], "ga_wind": [70, 90], "nrel_api": [70, 90], "mock_pv_info": [70, 90], "test_pv_track": [70, 90], "get_plant_id_unique_loc": [70, 90], "to_reis": [70, 90, 96, 99], "get_pv_tracking_data": [70, 90], "get_pv_tracking_ratio_st": [70, 90], "create_mock_generation_data_fram": [70, 95], "test_get_monthly_net_gener": [70, 95], "test_get_monthly_net_generation_argument_typ": [70, 95], "test_get_monthly_net_generation_argument_valu": [70, 95], "sleepcount": [70, 95], "sleep": [70, 95], "sleepless": [70, 95], "test_decorator_with_default": [70, 95], "test_decorator_with_limit": [70, 95], "test_default_no_limit": [70, 95], "test_sleep_occurr": [70, 95], "customerror": [70, 95], "test_counter_attribut": [70, 95], "test_decorate_without_cal": [70, 95], "test_max_times_reach": [70, 95], "test_raises_after_max_attempt": [70, 95], "test_return_valu": [70, 95], "test_unhandled_except": [70, 95], "grib": [70, 96], "hrrr_api": [70, 96, 98], "noaa_api": [70, 96], "build_state_curv": [70, 96], "get_form_860": [70, 96], "get_pow": [70, 96, 98], "get_state_power_curv": [70, 96], "get_turbine_power_curv": [70, 96], "shift_turbine_curv": [70, 96], "eia_form_923": 70, "unnecessari": [70, 86], "_func": 70, "max_attempt": 70, "allowed_except": 70, "urllib": 70, "httperror": 70, "decor": 70, "surfac": [70, 97], "test_ff2elec_profile_generator_htg": [71, 72], "generate_cook_profil": [71, 72], "func_dhw_cop": [71, 72], "generate_dhw_profil": [71, 72], "calculate_cop": [71, 72], "generate_htg_profil": [71, 72], "htg_to_cop": [71, 72], "adjust_puma_slop": [71, 72], "calculate_r2": [71, 72], "calculate_state_slop": [71, 72], "loadprojectionscenario": [71, 72], "compare_hp_heat_typ": [71, 72], "floor_area_growth": [71, 72], "floor_area_growth_typ": [71, 72], "frac_cook_ff2hp": [71, 72], "frac_cool_growth": [71, 72], "frac_cooling_eff_chang": [71, 72], "frac_dhw_ff2hp": [71, 72], "frac_hp_growth": [71, 72], "frac_htg_ff2hp": [71, 72], "frac_resist_growth": [71, 72], "test_clean_data": [71, 74], "test_get_eia_data": [71, 74], "test_map_ba": [71, 74], "fill_ba_demand": [71, 74], "fix_dataframe_outli": [71, 74], "replace_with_shifted_demand": [71, 74], "slope_interpol": [71, 74], "from_download": [71, 74], "from_excel": [71, 74], "get_ba_demand": [71, 74], "aggregate_ba_demand": [71, 74], "get_demand_in_loadzon": [71, 74], "map_buses_to_ba": [71, 74], "map_buses_to_counti": [71, 74], "test_get_efs_data": [71, 76], "test_map_st": [71, 76], "access_non_efs_demand": [71, 76], "combine_efs_demand": [71, 76], "account_for_leap_year": [71, 76], "download_demand_data": [71, 76], "download_flexibility_data": [71, 76], "partition_demand_by_sector": [71, 76], "partition_flexibility_by_sector": [71, 76], "decompose_demand_profile_by_state_to_loadzon": [71, 76], "shift_local_time_by_loadzone_to_utc": [71, 76], "test_dwel": [71, 78], "test_generate_bev_vehicle_profil": [71, 78], "test_immedi": [71, 78], "test_immediate_charging_integr": [71, 78], "test_smart_charging_integr": [71, 78], "calculate_optim": [71, 78], "get_constraint": [71, 78], "generate_daily_weight": [71, 78], "get_data_dai": [71, 78], "get_input_dai": [71, 78], "get_kwhmi": [71, 78], "get_model_year_dti": [71, 78], "get_total_daily_vmt": [71, 78], "load_hdv_data": [71, 78], "load_rural_scaling_factor": [71, 78], "load_urbanized_scaling_factor": [71, 78], "remove_ldt": [71, 78], "remove_ldv": [71, 78], "update_if_weekend": [71, 78], "calculate_dwell_tim": [71, 78], "data_filt": [71, 78], "get_energy_limit": [71, 78], "get_rat": [71, 78], "get_seg": [71, 78], "adjust_bev": [71, 78], "apply_annual_sc": [71, 78], "apply_daily_adjust": [71, 78], "calculate_charg": [71, 78], "immediate_charg": [71, 78], "resample_daily_charg": [71, 78], "calculate_charging_help": [71, 78], "immediate_hdv_charg": [71, 78], "hdv_use_all_data_row": [71, 78], "ldv_weekday_weekend_check": [71, 78], "test_generate_profiles_argument_typ": [72, 73], "yr_temp": 72, "bldg_class": 72, "cook": 72, "base_year": 72, "temp_c": 72, "cop": 72, "hp_model": 72, "advperfhp": 72, "cold": 72, "midperfhp": 72, "futurehp": 72, "output_fold": 72, "puma_data": 72, "state_slopes_r": 72, "state_slopes_com": 72, "puma": 72, "endogen": 72, "residu": [72, 76], "r2": 72, "regress": 72, "input_seri": 72, "stock": 72, "precomput": 72, "floor": 72, "hot": 72, "domin": 72, "condit": 72, "compound": 72, "cla": 72, "dhw": 72, "applianc": 72, "resist": [72, 85, 86], "test_slope_interpol": [74, 75], "test_eia_download": [74, 75], "test_from_excel": [74, 75], "create_ba_to_region_datafram": [74, 75], "create_loadzone_datafram": [74, 75], "test_aggregate_ba_demand_sums_first_columns_pair": [74, 75], "test_aggregate_ba_demand_sums_first_three_column": [74, 75], "test_get_demand_in_loadzone_cas": [74, 75], "test_get_demand_in_loadzone_has_equal_total_demand": [74, 75], "test_map_buses_to_ba": [74, 75], "test_map_buses_to_counti": [74, 75], "df_ba": 74, "ba_nam": 74, "day_map": 74, "interpol": [74, 96, 97], "indicss": 74, "anomal": 74, "nearbi": 74, "ba_df": 74, "implicitli": 74, "correl": 74, "rise": 74, "finit": 74, "spike": 74, "unphys": 74, "inde": 74, "ser": 74, "keyerror": 74, "tok": 74, "offset_dai": 74, "series_list": 74, "assembl": [74, 75], "eba": 74, "ava": 74, "azp": 74, "busi": 74, "stabil": 74, "excel": [74, 75], "spreadsheet": [74, 75], "pse": 74, "bpat": 74, "ciso": 74, "ba_code_list": 74, "agg_demand": 74, "bus_map": 74, "bus_df": 74, "territori": 74, "gi": 74, "neighbour": 74, "bus_county_map": 74, "test_combine_efs_demand": [76, 77], "test_account_for_leap_year": [76, 77], "test_check_electrification_scenarios_for_download": [76, 77], "test_check_path": [76, 77], "test_check_technology_advancements_for_download": [76, 77], "test_download_data": [76, 77], "test_extract_data": [76, 77], "test_partition_demand_by_sector": [76, 77], "test_partition_flexibility_by_sector": [76, 77], "test_decompose_demand_profile_by_state_to_loadzon": [76, 77], "test_shift_local_time_by_loadzone_to_utc": [76, 77], "dem_path": 76, "local_sect": 76, "efs_dem": 76, "non_efs_dem": 76, "enter": 76, "demand_technologi": 76, "columbia": 76, "subsector": 76, "aviat": 76, "final_energi": 76, "worth": 76, "leap": [76, 92], "8760": 76, "8784": 76, "weekli": 76, "disrupt": 76, "31st": 76, "contigu": 76, "ta": 76, "fpath": 76, "sz_path": 76, "zip": [76, 82], "7z": 76, "ex": 76, "sect": 76, "flex": 76, "profile_typ": 76, "dictat": 76, "test_energy_limit": [78, 80], "test_get_seg": [78, 80], "test_ldv_immediate_run": [78, 80], "test_apply_annual_sc": [78, 80], "test_apply_daily_adjust": [78, 80], "test_immediate_charging_hdv": [78, 80], "test_immediate_charging_hdv_1dai": [78, 80], "test_immediate_charging_ldv_2dai": [78, 80], "test_immediate_charging_mdv": [78, 80], "test_immediate_charging_mdv_1dai": [78, 80], "test_immediate_charging_region1": [78, 80], "test_smart_charging_hdv_2dai": [78, 80], "test_smart_charging_ldv_2dai": [78, 80], "test_smart_charging_mdv_2dai": [78, 80], "charging_consumpt": 78, "elimit": 78, "total_trip": 78, "charging_effici": 78, "kwhmi": 78, "veh_rang": 78, "linprog": 78, "constraints_df": 78, "trip_strategi": 78, "location_strategi": 78, "location_allow": 78, "model_year": 78, "toggl": 78, "anytrip": 78, "possibil": 78, "school": 78, "daili": 78, "nor": 78, "model_year_dti": 78, "datetimeindex": [78, 92], "encompass": 78, "ndarrai": 78, "veh_typ": 78, "transit": 78, "fuel_effici": 78, "input_dai": 78, "np": 78, "census_region": 78, "nhts_census_upd": 78, "nhts_censu": 78, "matfil": 78, "nths_censu": 78, "fdata_v10st": 78, "hhdv": 78, "mhdv": 78, "regional_scaling_factors_ra_": 78, "urbanized_area": 78, "regional_scaling_factors_ua_": 78, "fridai": 78, "6am": 78, "59am": 78, "12am": 78, "raw_nht": 78, "census_divis": 78, "mileag": 78, "dwelling_start_tim": 78, "dwelling_length": 78, "possess": 78, "vehicle_trip_data_filepath": 78, "charging_strategi": 78, "projection_year": 78, "external_sign": 78, "bev": 78, "establish": 78, "signal": 78, "yearli": 78, "hourly_profil": 78, "adjustment_valu": 78, "bev_vmt": 78, "season": 78, "month_info_nht": 78, "regional_scaling_factor": 78, "num_days_per_year": 78, "365": 78, "num_segments_per_dai": 78, "charging_pow": 78, "battery_capac": 78, "pars": [78, 96], "soc": 78, "daily_valu": 78, "debug_printout": 78, "bus_exampl": [81, 82], "doe_exampl": [81, 82], "geo_exampl": [81, 82], "test_bus_data": [81, 82], "test_geo_data": [81, 82], "collect_all_raw_data": [81, 82], "create_geo_cache_fil": [81, 82], "get_cache_from_blob": [81, 82], "aggregate_do": [81, 82], "cleanup_directori": [81, 82], "download_do": [81, 82], "eiaid_to_fip": [81, 82], "eiaid_to_zip": [81, 82], "fips_to_eiaid": [81, 82], "fips_zip_convers": [81, 82], "get_census_data": [81, 82], "get_county_fips_data": [81, 82], "get_crosswalk_data": [81, 82], "get_fips_popul": [81, 82], "get_lse_region_data": [81, 82], "get_zip_popul": [81, 82], "zip_to_eiaid": [81, 82], "test_batch_download": [82, 84], "test_cache_product": [82, 84], "download_path": 82, "raw_path": 82, "cache_path": 82, "out_path": 82, "flexibilti": 82, "compress": 82, "recurs": 82, "cleanup": 82, "meaningless": 82, "oedi": 82, "raw_data_path": 82, "fip": 82, "lse": 82, "crosswalk": 82, "usp": 82, "concis": [82, 97], "dictonari": 82, "comput": 82, "regoin": 82, "test_geometri": [85, 86], "conductor": [85, 86], "current_limit": [85, 86], "gmr": [85, 86], "permeabl": [85, 86], "resistance_per_km": [85, 86], "conductorbundl": [85, 86], "calculate_equivalent_spac": [85, 86], "calculate_equivalent_spacing_circular": [85, 86], "calculate_equivalent_spacing_flat": [85, 86], "spacing_c": [85, 86], "spacing_l": [85, 86], "power_r": [85, 86], "propogation_constant_per_km": [85, 86], "series_imped": [85, 86], "series_impedance_per_km": [85, 86], "shunt_admitt": [85, 86], "shunt_admittance_per_km": [85, 86], "stability_r": [85, 86], "surge_imped": [85, 86], "thermal_r": [85, 86], "tower": [85, 86], "phaseloc": [85, 86], "calculate_dist": [85, 86], "calculate_multi_circuit_dist": [85, 86], "calculate_single_circuit_dist": [85, 86], "circuit": [85, 86], "equivalent_dist": [85, 86], "equivalent_height": [85, 86], "equivalent_reflected_dist": [85, 86], "phase_self_dist": [85, 86], "bundl": [85, 86], "calculate_inductance_per_km": [85, 86], "calculate_shunt_capacitance_per_km": [85, 86], "capacit": [85, 86], "induct": [85, 86], "phase_current_limit": [85, 86], "dataclasswithvalid": [85, 86], "validate_input_typ": [85, 86], "approximate_load": [85, 86], "calculate_z_bas": [85, 86], "get_standard_conductor": [85, 86], "translate_to_per_unit": [85, 86], "test_conductor_bundl": [86, 87], "test_conductor_by_nam": [86, 87], "test_conductor_by_parameter_valu": [86, 87], "test_conductor_name_and_paramet": [86, 87], "test_line_long": [86, 87], "test_line_short": [86, 87], "test_tower_double_circuit": [86, 87], "test_tower_single_circuit": [86, 87], "custom_dataclass": [86, 87], "test_dataclasswithvalidation_bad_input": [86, 87], "test_dataclasswithvalidation_not_a_dataclass": [86, 87], "test_dataclasswithvalidation_success": [86, 87], "test_calculate_z_bas": [86, 87], "test_translate_to_per_unit": [86, 87], "strand": 86, "composit": 86, "bird": 86, "paramt": 86, "solid": 86, "outer": 86, "ohm": 86, "isn": 86, "geometr": 86, "cross": 86, "circular": 86, "regular": 86, "flat": 86, "conductor_dist": 86, "kilovolt": 86, "hz": 86, "x1": 86, "y1": 86, "x2": 86, "y2": 86, "shunt": 86, "dataclass": 86, "length_km": 86, "st": 86, "clair": 86, "loadibl": 86, "surg": 86, "v_base": 86, "s_base": 86, "appar": 86, "kv": 86, "mva": 86, "nominal_unit": 86, "z_base": 86, "get_normalized_profil": [88, 89], "get_profile_by_pl": [88, 89], "get_profile_by_st": [88, 89], "scale_profil": [88, 89], "get_net_demand_profil": [88, 89], "plant_df": 89, "plant_profil": 89, "total_profil": 89, "1h": 89, "profile_vers": 89, "ll2ij": [90, 91], "test_nrel_api": [90, 92], "nrelapi": [90, 92], "get_psm3_at": [90, 92], "psm3data": [90, 92], "allowed_attr": [90, 92], "check_attr": [90, 92], "data_resourc": [90, 92], "elev": [90, 92], "rename_attr": [90, 92], "to_dict": [90, 92], "create_mock_pv_info": [90, 94], "test_plant_id_unique_loc": [90, 94], "test_plant_id_unique_location_typ": [90, 94], "test_plant_id_unique_location_valu": [90, 94], "test_to_reis": [90, 94], "test_to_reise_typ": [90, 94], "test_to_reise_valu": [90, 94], "test_ratio_state_with_multiple_plants_and_tracking_system": [90, 94], "test_ratio_state_with_single_plant_and_multiple_track": [90, 94], "test_ratio_state_with_single_plant_and_unique_track": [90, 94], "test_state_exist": [90, 94], "test_state_typ": [90, 94], "test_state_with_solar_return_3pl": [90, 94], "test_state_without_no_solar_return_non": [90, 94], "test_sum_ratio_state_with_multiple_plants_and_tracking_system": [90, 94], "test_sum_ratio_state_with_single_plant_and_multiple_tracking_system": [90, 94], "test_sum_ratio_state_with_single_plant_and_tracking_system": [90, 94], "among": 90, "pout": [90, 92, 97, 99], "ts_id": [90, 92, 99], "eia860": 90, "pv_info": 90, "lon_origin": 91, "lat_origin": 91, "pyproj": 91, "test_check_attr": [92, 93], "test_psm3_to_dict": [92, 93], "solar_pl": 92, "psm3": 92, "leap_dai": 92, "cache_dir": 92, "metadata": [92, 97], "air_temperatur": 92, "dhi": 92, "dni": 92, "wind_spe": 92, "dn": 92, "tdry": 92, "wspd": [92, 96], "pvwattsv7": 92, "test_calcul": [96, 97], "test_grib": [96, 97], "test_hrrr_api": [96, 97], "calculate_pout_blend": [96, 97], "calculate_pout_individu": [96, 97], "extract_wind_spe": [96, 97], "find_closest_wind_grid": [96, 97, 98], "get_wind_data_lat_long": [96, 97, 98], "gribrecordinfo": [96, 97], "beginning_byt": [96, 97], "byte_range_header_str": [96, 97], "ending_byt": [96, 97], "forecast": [96, 97], "from_str": [96, 97], "full_fil": [96, 97], "generate_grib_record_information_list": [96, 97], "initialization_d": [96, 97], "message_numb": [96, 97], "formatted_filenam": [96, 97], "get_indices_that_contain_selector": [96, 97], "hrrrapi": [96, 97], "u_component_filt": [96, 97], "v_component_filt": [96, 97], "download_meteorological_data": [96, 97], "download_wind_data": [96, 97], "test_noaa_api": [96, 99], "noaaapi": [96, 99], "build_url": [96, 99], "fallback_url": [96, 99], "get_hourly_data": [96, 99], "get_path_list": [96, 99], "iter_hour": [96, 99], "var_u": [96, 99], "var_v": [96, 99], "2d": [96, 97], "linearli": 96, "wise": 96, "extrema": 96, "randomli": 96, "form_860": 96, "maxspd": 96, "rsd": 96, "smooth": 96, "data_dir": 96, "state_power_curv": 96, "statepowercurv": 96, "powercurv": 96, "turbine_curv": 96, "hub_height": 96, "new_curve_r": 96, "test_calculate_pout_blend": [97, 98], "test_find_closest_wind_grid": [97, 98], "test_grib_info_byte_range_header_str": [97, 98], "test_grib_info_byte_range_header_string_no_end_byt": [97, 98], "test_grib_info_from_str": [97, 98], "test_grib_info_from_string_with_next_str": [97, 98], "test_grib_info_generate_grib_record_information_list": [97, 98], "test_get_indices_that_contain_selector": [97, 98], "filename_url_iter_mock": [97, 98], "open_mock": [97, 98], "requests_mock": [97, 98], "test_download_meteorological_data_no_selector": [97, 98], "test_download_meteorological_data_with_selector": [97, 98], "test_download_wind_data": [97, 98], "start_dt": 97, "end_dt": 97, "predomin": 97, "feet": 97, "gap": 97, "wind_data_lat_long": 97, "dt": 97, "live": 97, "header": 97, "bufferediobas": 97, "regularli": 97, "commonli": 97, "meteorologi": 97, "byte": 97, "classmethod": 97, "raw_str": 97, "next_raw_str": 97, "raw_record_information_list": 97, "index_list": 97, "sfc": 97, "hours_forecast": 97, "input_list": 97, "selector": 97, "timedelta": 97, "fromisoformat": 97, "ugrd": 97, "vgrd": 97, "intermediari": 97, "narrow": 97, "test_box_query_set": [99, 100], "test_box_valid": [99, 100], "test_get_url_list": [99, 100], "test_url_fallback_default": [99, 100], "box": 99, "130": 99, "unknown": 99, "ncei": 99, "thredd": 99, "ncss": 99, "rap130": 99, "time_slic": 99, "fallback": 99, "older": 99, "old": 99, "yield": 99, "pertain": 99, "component_of_wind_height_above_ground": 99}, "objects": {"": [[8, 0, 0, "-", "postreise"], [23, 0, 0, "-", "powersimdata"], [63, 0, 0, "-", "prereise"]], "postreise": [[9, 0, 0, "-", "analyze"], [15, 0, 0, "-", "data"], [16, 0, 0, "-", "plot"]], "postreise.analyze": [[9, 0, 0, "-", "demand"], [10, 0, 0, "-", "generation"], [12, 0, 0, "-", "tests"], [9, 0, 0, "-", "time"], [13, 0, 0, "-", "transmission"]], "postreise.analyze.demand": [[9, 1, 1, "", "get_demand_time_series"], [9, 1, 1, "", "get_net_demand_time_series"]], "postreise.analyze.generation": [[10, 0, 0, "-", "binding"], [10, 0, 0, "-", "capacity"], [10, 0, 0, "-", "costs"], [10, 0, 0, "-", "curtailment"], [10, 0, 0, "-", "emissions"], [10, 0, 0, "-", "summarize"], [11, 0, 0, "-", "tests"]], "postreise.analyze.generation.binding": [[10, 1, 1, "", "pmax_constraints"], [10, 1, 1, "", "pmin_constraints"], [10, 1, 1, "", "ramp_constraints"]], "postreise.analyze.generation.capacity": [[10, 1, 1, "", "calculate_NLDC"], [10, 1, 1, "", "calculate_net_load_peak"], [10, 1, 1, "", "get_capacity_by_resources"], [10, 1, 1, "", "get_capacity_factor_time_series"], [10, 1, 1, "", "get_storage_capacity"], [10, 1, 1, "", "sum_capacity_by_type_zone"]], "postreise.analyze.generation.costs": [[10, 1, 1, "", "calculate_costs"]], "postreise.analyze.generation.curtailment": [[10, 1, 1, "", "calculate_curtailment_percentage_by_resources"], [10, 1, 1, "", "calculate_curtailment_time_series"], [10, 1, 1, "", "calculate_curtailment_time_series_by_areas"], [10, 1, 1, "", "calculate_curtailment_time_series_by_areas_and_resources"], [10, 1, 1, "", "calculate_curtailment_time_series_by_resources"], [10, 1, 1, "", "calculate_curtailment_time_series_by_resources_and_areas"], [10, 1, 1, "", "get_curtailment_time_series"], [10, 1, 1, "", "summarize_curtailment_by_bus"], [10, 1, 1, "", "summarize_curtailment_by_location"]], "postreise.analyze.generation.emissions": [[10, 1, 1, "", "carbon_diff"], [10, 1, 1, "", "generate_emissions_stats"], [10, 1, 1, "", "summarize_emissions_by_bus"]], "postreise.analyze.generation.summarize": [[10, 1, 1, "", "get_generation_time_series_by_resources"], [10, 1, 1, "", "get_storage_time_series"], [10, 1, 1, "", "sum_generation_by_state"], [10, 1, 1, "", "sum_generation_by_type_zone"], [10, 1, 1, "", "summarize_hist_gen"]], "postreise.analyze.generation.tests": [[11, 0, 0, "-", "test_binding"], [11, 0, 0, "-", "test_capacity"], [11, 0, 0, "-", "test_costs"], [11, 0, 0, "-", "test_curtailment"], [11, 0, 0, "-", "test_emissions"], [11, 0, 0, "-", "test_summarize"]], "postreise.analyze.generation.tests.test_binding": [[11, 2, 1, "", "TestCheckEpsilon"], [11, 2, 1, "", "TestCheckScenario"], [11, 2, 1, "", "TestPmaxConstraints"], [11, 2, 1, "", "TestPminConstraints"], [11, 2, 1, "", "TestRampConstraints"]], "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon": [[11, 3, 1, "", "test_bad_type"], [11, 3, 1, "", "test_bad_value"], [11, 3, 1, "", "test_good_float_value"], [11, 3, 1, "", "test_good_int_value"], [11, 3, 1, "", "test_zero"]], "postreise.analyze.generation.tests.test_binding.TestCheckScenario": [[11, 3, 1, "", "test_bad_scenario_state"], [11, 3, 1, "", "test_bad_scenario_type"], [11, 3, 1, "", "test_good_scenario"]], "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints": [[11, 3, 1, "", "get_default_expected"], [11, 3, 1, "", "setUp"], [11, 3, 1, "", "test_pmax_constraints_default"], [11, 3, 1, "", "test_pmax_constraints_default_sepc_epsilon1"], [11, 3, 1, "", "test_pmax_constraints_default_sepc_epsilon2"], [11, 3, 1, "", "test_pmax_constraints_default_sepc_epsilon3"]], "postreise.analyze.generation.tests.test_binding.TestPminConstraints": [[11, 3, 1, "", "get_default_expected"], [11, 3, 1, "", "setUp"], [11, 3, 1, "", "test_pmin_constraints_default"], [11, 3, 1, "", "test_pmin_constraints_default_spec_epsilon1"], [11, 3, 1, "", "test_pmin_constraints_default_spec_epsilon2"], [11, 3, 1, "", "test_pmin_constraints_default_spec_epsilon3"]], "postreise.analyze.generation.tests.test_binding.TestRampConstraints": [[11, 3, 1, "", "get_default_expected"], [11, 3, 1, "", "setUp"], [11, 3, 1, "", "test_ramp_constraints_default"], [11, 3, 1, "", "test_ramp_constraints_spec_epsilon1"], [11, 3, 1, "", "test_ramp_constraints_spec_epsilon2"], [11, 3, 1, "", "test_ramp_constraints_spec_epsilon3"]], "postreise.analyze.generation.tests.test_capacity": [[11, 1, 1, "", "test_NLDC_calculation_solar"], [11, 1, 1, "", "test_NLDC_calculation_solar_wind"], [11, 1, 1, "", "test_NLDC_calculation_wind_5_hour"], [11, 1, 1, "", "test_NLDC_calculation_wind_list"], [11, 1, 1, "", "test_NLDC_calculation_wind_set"], [11, 1, 1, "", "test_NLDC_calculation_wind_solar"], [11, 1, 1, "", "test_NLDC_calculation_wind_str"], [11, 1, 1, "", "test_NLDC_calculation_wind_tuple"], [11, 1, 1, "", "test_calculate_net_load_peak_solar"], [11, 1, 1, "", "test_calculate_net_load_peak_solar_5"], [11, 1, 1, "", "test_calculate_net_load_peak_solar_wind"], [11, 1, 1, "", "test_calculate_net_load_peak_solar_wind_5"], [11, 1, 1, "", "test_calculate_net_load_peak_wind"], [11, 1, 1, "", "test_calculate_net_load_peak_wind_5"], [11, 1, 1, "", "test_failure_hours_type"], [11, 1, 1, "", "test_failure_no_resources"], [11, 1, 1, "", "test_failure_no_resources_present"], [11, 1, 1, "", "test_failure_one_resource_not_present"], [11, 1, 1, "", "test_failure_resources_type_dict"], [11, 1, 1, "", "test_failure_scenario_type"], [11, 1, 1, "", "test_failure_too_many_hours"], [11, 1, 1, "", "test_failure_zero_hours"], [11, 1, 1, "", "test_get_capacity_by_resources"], [11, 1, 1, "", "test_get_capacity_factor_time_series"], [11, 1, 1, "", "test_get_storage_capacity"], [11, 1, 1, "", "test_sum_capacity_by_type_zone"]], "postreise.analyze.generation.tests.test_costs": [[11, 1, 1, "", "mock_gencost"], [11, 1, 1, "", "mock_gencost_data"], [11, 1, 1, "", "mock_pg"], [11, 1, 1, "", "mock_plant"], [11, 1, 1, "", "mock_scenario"], [11, 1, 1, "", "test_calculate_cost_equal_both_methods"], [11, 1, 1, "", "test_negative_pg"], [11, 1, 1, "", "test_pass_just_gencost"], [11, 1, 1, "", "test_pass_just_pg"], [11, 1, 1, "", "test_pass_nothing"], [11, 1, 1, "", "test_pass_too_many_things"]], "postreise.analyze.generation.tests.test_curtailment": [[11, 2, 1, "", "TestCalculateCurtailmentPercentage"], [11, 2, 1, "", "TestCalculateCurtailmentTimeSeries"], [11, 2, 1, "", "TestCalculateCurtailmentTimeSeriesGrouped"], [11, 2, 1, "", "TestCheckResourceInScenario"], [11, 2, 1, "", "TestGetCurtailmentTimeSeries"], [11, 2, 1, "", "TestSummarizeCurtailmentByBus"], [11, 2, 1, "", "TestSummarizeCurtailmentByLocation"]], "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage": [[11, 3, 1, "", "test_calculate_curtailment_percentage_default"], [11, 3, 1, "", "test_calculate_curtailment_percentage_solar"], [11, 3, 1, "", "test_calculate_curtailment_percentage_solar_wind"], [11, 3, 1, "", "test_calculate_curtailment_percentage_wind"], [11, 3, 1, "", "test_calculate_curtailment_percentage_wind_offshore"]], "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries": [[11, 3, 1, "", "test_calculate_curtailment_time_series_default"], [11, 3, 1, "", "test_calculate_curtailment_time_series_solar"], [11, 3, 1, "", "test_calculate_curtailment_time_series_solar_wind_set"], [11, 3, 1, "", "test_calculate_curtailment_time_series_solar_wind_tuple"], [11, 3, 1, "", "test_calculate_curtailment_time_series_wind_argument_type"], [11, 3, 1, "", "test_calculate_curtailment_time_series_wind_solar_list"]], "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped": [[11, 3, 1, "", "test_curtailment_time_series_by_areas"], [11, 3, 1, "", "test_curtailment_time_series_by_areas_and_resource"], [11, 3, 1, "", "test_curtailment_time_series_by_areas_and_resources"], [11, 3, 1, "", "test_curtailment_time_series_by_resource_and_area"], [11, 3, 1, "", "test_curtailment_time_series_by_resources_and_areas"]], "postreise.analyze.generation.tests.test_curtailment.TestCheckResourceInScenario": [[11, 3, 1, "", "test_error_geothermal_curtailment"], [11, 3, 1, "", "test_error_no_solar"]], "postreise.analyze.generation.tests.test_curtailment.TestGetCurtailmentTimeSeries": [[11, 3, 1, "", "test_get_curtailment_time_series"]], "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByBus": [[11, 3, 1, "", "test_summarize_curtailment_by_bus"]], "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByLocation": [[11, 3, 1, "", "test_summarize_curtailment_by_location"]], "postreise.analyze.generation.tests.test_emissions": [[11, 2, 1, "", "TestCarbonCalculation"], [11, 2, 1, "", "TestEmissionStatsArguments"], [11, 2, 1, "", "TestEmissionsSummarization"], [11, 2, 1, "", "TestNOxCalculation"], [11, 2, 1, "", "TestSO2Calculation"], [11, 1, 1, "", "mock_gencost"], [11, 1, 1, "", "mock_pg"], [11, 1, 1, "", "mock_plant"], [11, 1, 1, "", "scenario"]], "postreise.analyze.generation.tests.test_emissions.TestCarbonCalculation": [[11, 3, 1, "", "test_carbon_calc_always_on"], [11, 3, 1, "", "test_carbon_calc_decommit"], [11, 3, 1, "", "test_carbon_calc_simple"]], "postreise.analyze.generation.tests.test_emissions.TestEmissionStatsArguments": [[11, 3, 1, "", "test_method_type"], [11, 3, 1, "", "test_method_value"], [11, 3, 1, "", "test_pollutant_value"]], "postreise.analyze.generation.tests.test_emissions.TestEmissionsSummarization": [[11, 3, 1, "", "test_carbon_diff"], [11, 3, 1, "", "test_emissions_is_non_negative"], [11, 3, 1, "", "test_emissions_summarization"]], "postreise.analyze.generation.tests.test_emissions.TestNOxCalculation": [[11, 3, 1, "", "test_calculate_nox_disallowed_method"], [11, 3, 1, "", "test_calculate_nox_simple"]], "postreise.analyze.generation.tests.test_emissions.TestSO2Calculation": [[11, 3, 1, "", "test_calculate_so2_disallowed_method"], [11, 3, 1, "", "test_calculate_so2_simple"]], "postreise.analyze.generation.tests.test_summarize": [[11, 2, 1, "", "TestSumGenerationByTypeZone"], [11, 1, 1, "", "hist_gen_raw"], [11, 1, 1, "", "sim_gen_result"], [11, 1, 1, "", "test_get_generation_time_series_by_resources"], [11, 1, 1, "", "test_get_storage_time_series"], [11, 1, 1, "", "test_sum_generation_by_state_shape"], [11, 1, 1, "", "test_sum_generation_by_state_values_scaled"], [11, 1, 1, "", "test_summarize_hist_gen_include_areas"], [11, 1, 1, "", "test_summarize_hist_gen_shape"]], "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone": [[11, 3, 1, "", "setUp"], [11, 3, 1, "", "test_print_statement"], [11, 3, 1, "", "test_sum_generation"], [11, 3, 1, "", "test_with_scenario_not_analyze"], [11, 3, 1, "", "test_with_string"], [11, 3, 1, "", "test_with_time_change"], [11, 3, 1, "", "test_with_time_change_and_time_slice"], [11, 3, 1, "", "test_with_time_slice"]], "postreise.analyze.tests": [[12, 0, 0, "-", "test_demand"], [12, 0, 0, "-", "test_time"]], "postreise.analyze.tests.test_demand": [[12, 1, 1, "", "test_get_demand_time_series"], [12, 1, 1, "", "test_get_net_demand_time_series"]], "postreise.analyze.tests.test_time": [[12, 1, 1, "", "test_change_time_zone"], [12, 1, 1, "", "test_change_time_zone_argument_type"], [12, 1, 1, "", "test_change_time_zone_argument_value"], [12, 1, 1, "", "test_daily_resampling_incomplete_and_time_shift_mean"], [12, 1, 1, "", "test_daily_resampling_incomplete_and_time_shift_sum"], [12, 1, 1, "", "test_daily_resampling_incomplete_mean"], [12, 1, 1, "", "test_daily_resampling_incomplete_sum"], [12, 1, 1, "", "test_daily_resampling_mean"], [12, 1, 1, "", "test_daily_resampling_sum"], [12, 1, 1, "", "test_daily_resampling_time_shift_mean"], [12, 1, 1, "", "test_daily_resampling_time_shift_sum"], [12, 1, 1, "", "test_is_24_hour_format"], [12, 1, 1, "", "test_is_dst"], [12, 1, 1, "", "test_monthly_resampling_incomplete_and_time_shift_mean"], [12, 1, 1, "", "test_monthly_resampling_incomplete_and_time_shift_sum"], [12, 1, 1, "", "test_monthly_resampling_incomplete_mean"], [12, 1, 1, "", "test_monthly_resampling_incomplete_sum"], [12, 1, 1, "", "test_monthly_resampling_mean"], [12, 1, 1, "", "test_monthly_resampling_sum"], [12, 1, 1, "", "test_monthly_resampling_time_shift_mean"], [12, 1, 1, "", "test_monthly_resampling_time_shift_sum"], [12, 1, 1, "", "test_resampling_argument_value"], [12, 1, 1, "", "test_slicing"], [12, 1, 1, "", "test_slicing_argument_value"], [12, 1, 1, "", "test_weekly_resampling_incomplete_and_time_shift_mean"], [12, 1, 1, "", "test_weekly_resampling_incomplete_and_time_shift_sum"], [12, 1, 1, "", "test_weekly_resampling_incomplete_mean"], [12, 1, 1, "", "test_weekly_resampling_incomplete_sum"], [12, 1, 1, "", "test_weekly_resampling_mean"], [12, 1, 1, "", "test_weekly_resampling_sum"], [12, 1, 1, "", "test_weekly_resampling_time_shift_mean"], [12, 1, 1, "", "test_weekly_resampling_time_shift_sum"]], "postreise.analyze.time": [[9, 1, 1, "", "change_time_zone"], [9, 1, 1, "", "is_24_hour_format"], [9, 1, 1, "", "is_dst"], [9, 1, 1, "", "resample_time_series"], [9, 1, 1, "", "slice_time_series"]], "postreise.analyze.transmission": [[13, 0, 0, "-", "congestion"], [14, 0, 0, "-", "tests"], [13, 0, 0, "-", "utilization"]], "postreise.analyze.transmission.congestion": [[13, 1, 1, "", "calculate_congestion_surplus"]], "postreise.analyze.transmission.tests": [[14, 0, 0, "-", "test_congestion_surplus"], [14, 0, 0, "-", "test_utilization"]], "postreise.analyze.transmission.tests.test_congestion_surplus": [[14, 1, 1, "", "test_calculate_congestion_surplus_single_time"], [14, 1, 1, "", "test_calculate_congestion_surplus_three_times"]], "postreise.analyze.transmission.tests.test_utilization": [[14, 1, 1, "", "test_count_hours_gt_threshold"], [14, 1, 1, "", "test_generate_cong_stats"], [14, 1, 1, "", "test_get_utilization"], [14, 1, 1, "", "test_get_utilization_median"]], "postreise.analyze.transmission.utilization": [[13, 1, 1, "", "generate_cong_stats"], [13, 1, 1, "", "get_utilization"]], "postreise.plot": [[16, 0, 0, "-", "canvas"], [16, 0, 0, "-", "check"], [16, 0, 0, "-", "colors"], [16, 0, 0, "-", "plot_bar_generation_max_min_actual"], [16, 0, 0, "-", "plot_bar_generation_stack"], [16, 0, 0, "-", "plot_bar_generation_vs_capacity"], [16, 0, 0, "-", "plot_bar_renewable_max_profile_actual"], [16, 0, 0, "-", "plot_bar_shortfall"], [16, 0, 0, "-", "plot_capacity_map"], [16, 0, 0, "-", "plot_carbon_bar"], [16, 0, 0, "-", "plot_carbon_map"], [16, 0, 0, "-", "plot_curtailment_ts"], [16, 0, 0, "-", "plot_energy_carbon_stack"], [16, 0, 0, "-", "plot_generation_ts_stack"], [16, 0, 0, "-", "plot_heatmap"], [16, 0, 0, "-", "plot_interconnection_map"], [16, 0, 0, "-", "plot_lmp_map"], [16, 0, 0, "-", "plot_pie_generation_vs_capacity"], [16, 0, 0, "-", "plot_powerflow_snapshot"], [16, 0, 0, "-", "plot_scatter_capacity_vs_capacity_factor"], [16, 0, 0, "-", "plot_scatter_capacity_vs_cost_curve_slope"], [16, 0, 0, "-", "plot_scatter_capacity_vs_curtailment"], [16, 0, 0, "-", "plot_shadowprice_map"], [16, 0, 0, "-", "plot_sim_vs_hist"], [16, 0, 0, "-", "plot_states"], [16, 0, 0, "-", "plot_tornado"], [16, 0, 0, "-", "plot_transmission_upgrades_map"], [16, 0, 0, "-", "plot_utilization_map"], [16, 0, 0, "-", "projection_helpers"], [17, 0, 0, "-", "tests"]], "postreise.plot.canvas": [[16, 1, 1, "", "create_map_canvas"]], "postreise.plot.plot_bar_generation_max_min_actual": [[16, 1, 1, "", "plot_bar_generation_max_min_actual"]], "postreise.plot.plot_bar_generation_stack": [[16, 1, 1, "", "plot_bar_generation_stack"]], "postreise.plot.plot_bar_generation_vs_capacity": [[16, 1, 1, "", "make_gen_cap_custom_data"], [16, 1, 1, "", "plot_bar_generation_vs_capacity"]], "postreise.plot.plot_bar_renewable_max_profile_actual": [[16, 1, 1, "", "plot_bar_renewable_max_profile_actual"]], "postreise.plot.plot_bar_shortfall": [[16, 1, 1, "", "plot_bar_shortfall"]], "postreise.plot.plot_capacity_map": [[16, 1, 1, "", "add_plant_capacity"], [16, 1, 1, "", "map_plant_capacity"]], "postreise.plot.plot_carbon_bar": [[16, 1, 1, "", "plot_carbon_bar"]], "postreise.plot.plot_carbon_map": [[16, 1, 1, "", "add_emission"], [16, 1, 1, "", "aggregate_bus_emission_difference"], [16, 1, 1, "", "aggregate_bus_emission_generator"], [16, 1, 1, "", "combine_bus_info_and_emission"], [16, 1, 1, "", "map_carbon_emission_difference"], [16, 1, 1, "", "map_carbon_emission_generator"], [16, 1, 1, "", "prepare_bus_data_difference"], [16, 1, 1, "", "prepare_bus_data_generator"]], "postreise.plot.plot_curtailment_ts": [[16, 1, 1, "", "plot_curtailment_time_series"]], "postreise.plot.plot_energy_carbon_stack": [[16, 1, 1, "", "plot_n_scenarios"]], "postreise.plot.plot_generation_ts_stack": [[16, 1, 1, "", "plot_generation_time_series_stack"]], "postreise.plot.plot_heatmap": [[16, 1, 1, "", "plot_heatmap"]], "postreise.plot.plot_interconnection_map": [[16, 1, 1, "", "count_nodes_per_state"], [16, 1, 1, "", "map_interconnections"]], "postreise.plot.plot_lmp_map": [[16, 1, 1, "", "add_lmp"], [16, 1, 1, "", "aggregate_bus_lmp"], [16, 1, 1, "", "map_lmp"]], "postreise.plot.plot_pie_generation_vs_capacity": [[16, 1, 1, "", "plot_pie_generation_vs_capacity"]], "postreise.plot.plot_powerflow_snapshot": [[16, 1, 1, "", "add_arrows"], [16, 1, 1, "", "aggregate_plant_generation"], [16, 1, 1, "", "plot_powerflow_snapshot"]], "postreise.plot.plot_scatter_capacity_vs_capacity_factor": [[16, 1, 1, "", "plot_scatter_capacity_vs_capacity_factor"]], "postreise.plot.plot_scatter_capacity_vs_cost_curve_slope": [[16, 1, 1, "", "plot_scatter_capacity_vs_cost_curve_slope"]], "postreise.plot.plot_scatter_capacity_vs_curtailment": [[16, 1, 1, "", "plot_scatter_capacity_vs_curtailment"]], "postreise.plot.plot_shadowprice_map": [[16, 1, 1, "", "plot_shadowprice"]], "postreise.plot.plot_sim_vs_hist": [[16, 2, 1, "", "PlotSettings"], [16, 1, 1, "", "plot_generation_sim_vs_hist"]], "postreise.plot.plot_sim_vs_hist.PlotSettings": [[16, 4, 1, "", "fontsize"], [16, 4, 1, "", "size_inches"], [16, 4, 1, "", "width"]], "postreise.plot.plot_states": [[16, 1, 1, "", "add_state_borders"], [16, 1, 1, "", "add_state_colors"], [16, 1, 1, "", "add_state_legends"], [16, 1, 1, "", "add_state_tooltips"], [16, 1, 1, "", "download_states_json"], [16, 1, 1, "", "download_states_shapefile"], [16, 1, 1, "", "expand_data_source"], [16, 1, 1, "", "get_state_borders"], [16, 1, 1, "", "plot_states"]], "postreise.plot.plot_tornado": [[16, 1, 1, "", "plot_tornado"]], "postreise.plot.plot_transmission_upgrades_map": [[16, 1, 1, "", "add_transmission_upgrades"], [16, 1, 1, "", "map_transmission_upgrades"]], "postreise.plot.plot_utilization_map": [[16, 1, 1, "", "map_risk_bind"], [16, 1, 1, "", "map_utilization"]], "postreise.plot.projection_helpers": [[16, 1, 1, "", "convert_shapefile_to_latlon_dict"], [16, 1, 1, "", "project_borders"], [16, 1, 1, "", "project_branch"], [16, 1, 1, "", "project_bus"]], "postreise.plot.tests": [[17, 0, 0, "-", "conftest"], [17, 0, 0, "-", "test_canvas"], [17, 0, 0, "-", "test_check"], [17, 0, 0, "-", "test_plot_bar_generation_max_min_actual"], [17, 0, 0, "-", "test_plot_bar_generation_stack"], [17, 0, 0, "-", "test_plot_bar_generation_vs_capacity"], [17, 0, 0, "-", "test_plot_bar_renewable_max_profile_actual"], [17, 0, 0, "-", "test_plot_bar_shortfall"], [17, 0, 0, "-", "test_plot_capacity_map"], [17, 0, 0, "-", "test_plot_carbon_bar"], [17, 0, 0, "-", "test_plot_pie_generation_vs_capacity"], [17, 0, 0, "-", "test_plot_scatter_capacity_vs_capacity_factor"], [17, 0, 0, "-", "test_plot_scatter_capacity_vs_cost_curve_slope"], [17, 0, 0, "-", "test_plot_scatter_capacity_vs_curtailment"], [17, 0, 0, "-", "test_plot_shadowprice_map"], [17, 0, 0, "-", "test_plot_sim_vs_hist"], [17, 0, 0, "-", "test_plot_tornado"]], "postreise.plot.tests.conftest": [[17, 1, 1, "", "plt_close"]], "postreise.plot.tests.test_canvas": [[17, 1, 1, "", "test_create_map_canvas"], [17, 1, 1, "", "test_create_map_canvas_argument_size"], [17, 1, 1, "", "test_create_map_canvas_argument_type"], [17, 1, 1, "", "test_create_map_canvas_figsize"], [17, 1, 1, "", "test_create_map_canvas_range"]], "postreise.plot.tests.test_check": [[17, 1, 1, "", "test_check_func_kwargs"], [17, 1, 1, "", "test_check_func_kwargs_errors"], [17, 1, 1, "", "test_get_func_kwargs"], [17, 1, 1, "", "test_get_func_kwargs_error"]], "postreise.plot.tests.test_plot_bar_generation_max_min_actual": [[17, 1, 1, "", "test_plot_bar_generation_max_min_actual"], [17, 1, 1, "", "test_plot_bar_generation_max_min_actual_argument_type"], [17, 1, 1, "", "test_plot_bar_generation_max_min_actual_argument_value"]], "postreise.plot.tests.test_plot_bar_generation_stack": [[17, 1, 1, "", "test_plot_bar_generation_stack"], [17, 1, 1, "", "test_plot_bar_generation_stack_argument_type"], [17, 1, 1, "", "test_plot_bar_generation_stack_argument_value"]], "postreise.plot.tests.test_plot_bar_generation_vs_capacity": [[17, 1, 1, "", "test_get_bar_display_val_greater_than_ten"], [17, 1, 1, "", "test_get_bar_display_val_less_than_ten"], [17, 1, 1, "", "test_get_bar_display_val_zero"], [17, 1, 1, "", "test_make_gen_cap_custom_data_given_cap_data"], [17, 1, 1, "", "test_make_gen_cap_custom_data_given_gen_and_cap_data"], [17, 1, 1, "", "test_make_gen_cap_custom_data_given_no_data"], [17, 1, 1, "", "test_plot_bar_generation_stack"], [17, 1, 1, "", "test_plot_bar_generation_stack_argument_type"], [17, 1, 1, "", "test_plot_bar_generation_stack_argument_value"]], "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual": [[17, 1, 1, "", "test_plot_bar_renewable_max_profile_actual"], [17, 1, 1, "", "test_plot_bar_renewable_max_profile_actual_argument_type"], [17, 1, 1, "", "test_plot_bar_renewable_max_profile_actual_argument_value"]], "postreise.plot.tests.test_plot_bar_shortfall": [[17, 1, 1, "", "test_plot_bar_shortfall"], [17, 1, 1, "", "test_plot_bar_shortfall_argument_type"], [17, 1, 1, "", "test_plot_bar_shortfall_argument_value"]], "postreise.plot.tests.test_plot_capacity_map": [[17, 1, 1, "", "test_map_plant_capacity"], [17, 1, 1, "", "test_map_plant_capacity_argument_value"]], "postreise.plot.tests.test_plot_carbon_bar": [[17, 1, 1, "", "test_plot_carbon_bar"], [17, 1, 1, "", "test_plot_carbon_bar_argument_type"], [17, 1, 1, "", "test_plot_carbon_bar_argument_value"]], "postreise.plot.tests.test_plot_pie_generation_vs_capacity": [[17, 1, 1, "", "test_plot_pie_generation_vs_capacity"], [17, 1, 1, "", "test_plot_pie_generation_vs_capacity_argument_type"], [17, 1, 1, "", "test_plot_pie_generation_vs_capacity_argument_value"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor": [[17, 1, 1, "", "test_plot_scatter_capacity_vs_capacity_factor"], [17, 1, 1, "", "test_plot_scatter_capacity_vs_capacity_factor_argument_type"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope": [[17, 1, 1, "", "test_plot_scatter_capacity_vs_cost_curve_slope"], [17, 1, 1, "", "test_plot_scatter_capacity_vs_cost_curve_slope_argument_type"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment": [[17, 1, 1, "", "test_plot_scatter_capacity_vs_curtailment"], [17, 1, 1, "", "test_plot_scatter_capacity_vs_curtailment_argument_type"]], "postreise.plot.tests.test_plot_shadowprice_map": [[17, 1, 1, "", "test_construct_branch_data"], [17, 1, 1, "", "test_construct_bus_data"], [17, 1, 1, "", "test_get_bus_legend_bars_and_labels"], [17, 1, 1, "", "test_get_bus_legend_bars_and_labels_clamps_large_numbers"], [17, 1, 1, "", "test_get_bus_legend_bars_and_labels_min_bar_len_is_one"], [17, 1, 1, "", "test_get_bus_legend_bars_and_labels_with_rounding"], [17, 1, 1, "", "test_get_lmp_split_points_with_min_between_neg_one_and_one"], [17, 1, 1, "", "test_get_lmp_split_points_with_min_lmp_below_neg_one"], [17, 1, 1, "", "test_get_lmp_split_points_with_min_lmp_more_than_one"]], "postreise.plot.tests.test_plot_sim_vs_hist": [[17, 1, 1, "", "test_plot_generation_sim_vs_hist"], [17, 1, 1, "", "test_plot_generation_sim_vs_hist_argument_type"], [17, 1, 1, "", "test_plot_generation_sim_vs_hist_argument_value"]], "postreise.plot.tests.test_plot_tornado": [[17, 1, 1, "", "test_plot_tornado"], [17, 1, 1, "", "test_plot_tornado_argument_type"]], "powersimdata": [[24, 0, 0, "-", "data_access"], [26, 0, 0, "-", "design"], [35, 0, 0, "-", "input"], [43, 0, 0, "-", "network"], [51, 0, 0, "-", "output"], [52, 0, 0, "-", "scenario"], [54, 0, 0, "-", "tests"], [55, 0, 0, "-", "utility"]], "powersimdata.data_access": [[24, 0, 0, "-", "context"], [24, 0, 0, "-", "csv_store"], [24, 0, 0, "-", "data_access"], [24, 0, 0, "-", "execute_list"], [24, 0, 0, "-", "fs_helper"], [24, 0, 0, "-", "launcher"], [24, 0, 0, "-", "scenario_list"], [24, 0, 0, "-", "ssh_fs"], [25, 0, 0, "-", "tests"]], "powersimdata.data_access.context": [[24, 2, 1, "", "Context"]], "powersimdata.data_access.context.Context": [[24, 3, 1, "", "get_data_access"], [24, 3, 1, "", "get_launcher"]], "powersimdata.data_access.csv_store": [[24, 2, 1, "", "CsvStore"], [24, 1, 1, "", "verify_hash"]], "powersimdata.data_access.csv_store.CsvStore": [[24, 3, 1, "", "commit"], [24, 3, 1, "", "get_table"]], "powersimdata.data_access.data_access": [[24, 2, 1, "", "DataAccess"], [24, 2, 1, "", "LocalDataAccess"], [24, 2, 1, "", "MemoryDataAccess"], [24, 2, 1, "", "SSHDataAccess"], [24, 2, 1, "", "TempDataAccess"]], "powersimdata.data_access.data_access.DataAccess": [[24, 3, 1, "", "checksum"], [24, 3, 1, "", "copy_from"], [24, 3, 1, "", "get"], [24, 3, 1, "", "get_profile_version"], [24, 3, 1, "", "push"], [24, 3, 1, "", "remove"], [24, 3, 1, "", "tmp_folder"], [24, 3, 1, "", "write"]], "powersimdata.data_access.data_access.LocalDataAccess": [[24, 3, 1, "", "push"]], "powersimdata.data_access.data_access.SSHDataAccess": [[24, 3, 1, "", "checksum"], [24, 3, 1, "", "exec_command"], [24, 3, 1, "", "execute_command_async"], [24, 5, 1, "", "fs"], [24, 3, 1, "", "push"]], "powersimdata.data_access.execute_list": [[24, 2, 1, "", "ExecuteListManager"]], "powersimdata.data_access.execute_list.ExecuteListManager": [[24, 3, 1, "", "add_entry"], [24, 3, 1, "", "delete_entry"], [24, 3, 1, "", "get_execute_table"], [24, 3, 1, "", "get_status"], [24, 3, 1, "", "set_status"]], "powersimdata.data_access.fs_helper": [[24, 1, 1, "", "get_blob_fs"], [24, 1, 1, "", "get_multi_fs"], [24, 1, 1, "", "get_scenario_fs"], [24, 1, 1, "", "get_ssh_fs"]], "powersimdata.data_access.launcher": [[24, 2, 1, "", "HttpLauncher"], [24, 2, 1, "", "Launcher"], [24, 2, 1, "", "NativeLauncher"], [24, 2, 1, "", "SSHLauncher"]], "powersimdata.data_access.launcher.HttpLauncher": [[24, 4, 1, "", "BASE_URL"], [24, 3, 1, "", "check_progress"], [24, 3, 1, "", "extract_simulation_output"]], "powersimdata.data_access.launcher.Launcher": [[24, 3, 1, "", "extract_simulation_output"], [24, 3, 1, "", "launch_simulation"], [24, 5, 1, "", "scenario_id"]], "powersimdata.data_access.launcher.NativeLauncher": [[24, 3, 1, "", "check_progress"], [24, 3, 1, "", "extract_simulation_output"]], "powersimdata.data_access.launcher.SSHLauncher": [[24, 3, 1, "", "check_progress"], [24, 3, 1, "", "extract_simulation_output"]], "powersimdata.data_access.scenario_list": [[24, 2, 1, "", "ScenarioListManager"]], "powersimdata.data_access.scenario_list.ScenarioListManager": [[24, 3, 1, "", "add_entry"], [24, 3, 1, "", "delete_entry"], [24, 3, 1, "", "get_scenario"], [24, 3, 1, "", "get_scenario_table"]], "powersimdata.data_access.ssh_fs": [[24, 2, 1, "", "WrapSSHFS"], [24, 1, 1, "", "progress_bar"]], "powersimdata.data_access.ssh_fs.WrapSSHFS": [[24, 3, 1, "", "checksum"], [24, 3, 1, "", "download"], [24, 3, 1, "", "exec_command"]], "powersimdata.data_access.tests": [[25, 0, 0, "-", "test_data_access"], [25, 0, 0, "-", "test_execute_csv"], [25, 0, 0, "-", "test_launcher"], [25, 0, 0, "-", "test_scenario_csv"]], "powersimdata.data_access.tests.test_data_access": [[25, 1, 1, "", "data_access"], [25, 1, 1, "", "make_temp"], [25, 1, 1, "", "ssh_data_access"], [25, 1, 1, "", "test_copy_from"], [25, 1, 1, "", "test_copy_from_multi_path"], [25, 1, 1, "", "test_setup_server_connection"], [25, 1, 1, "", "test_tmp_folder"]], "powersimdata.data_access.tests.test_execute_csv": [[25, 1, 1, "", "clone_template"], [25, 1, 1, "", "data_access"], [25, 1, 1, "", "execute_table"], [25, 1, 1, "", "manager"], [25, 1, 1, "", "mock_row"], [25, 1, 1, "", "test_blank_csv_append"], [25, 1, 1, "", "test_delete"], [25, 1, 1, "", "test_get_execute_file_from_server_header"], [25, 1, 1, "", "test_get_execute_file_from_server_type"], [25, 1, 1, "", "test_get_status"], [25, 1, 1, "", "test_set_status"]], "powersimdata.data_access.tests.test_launcher": [[25, 1, 1, "", "test_check_solver"], [25, 1, 1, "", "test_check_threads"]], "powersimdata.data_access.tests.test_scenario_csv": [[25, 1, 1, "", "clone_template"], [25, 1, 1, "", "data_access"], [25, 1, 1, "", "manager"], [25, 1, 1, "", "mock_row"], [25, 1, 1, "", "scenario_table"], [25, 1, 1, "", "test_blank_csv_append"], [25, 1, 1, "", "test_delete_entry"], [25, 1, 1, "", "test_get_scenario"], [25, 1, 1, "", "test_get_scenario_file_from_server_header"], [25, 1, 1, "", "test_get_scenario_file_from_server_type"]], "powersimdata.design": [[27, 0, 0, "-", "compare"], [28, 0, 0, "-", "generation"], [30, 0, 0, "-", "investment"], [26, 0, 0, "-", "mimic_grid"], [26, 0, 0, "-", "scenario_info"], [32, 0, 0, "-", "tests"], [33, 0, 0, "-", "transmission"]], "powersimdata.design.compare": [[27, 0, 0, "-", "generation"], [27, 0, 0, "-", "helpers"], [27, 0, 0, "-", "transmission"]], "powersimdata.design.compare.generation": [[27, 1, 1, "", "calculate_plant_difference"]], "powersimdata.design.compare.transmission": [[27, 1, 1, "", "calculate_branch_difference"], [27, 1, 1, "", "calculate_dcline_difference"]], "powersimdata.design.generation": [[28, 0, 0, "-", "clean_capacity_scaling"], [28, 0, 0, "-", "cost_curves"], [28, 0, 0, "-", "curtailment"], [29, 0, 0, "-", "tests"]], "powersimdata.design.generation.clean_capacity_scaling": [[28, 1, 1, "", "add_demand_to_targets"], [28, 1, 1, "", "add_new_capacities_collaborative"], [28, 1, 1, "", "add_new_capacities_independent"], [28, 1, 1, "", "add_resource_data_to_targets"], [28, 1, 1, "", "add_shortfall_to_targets"], [28, 1, 1, "", "calculate_clean_capacity_scaling"], [28, 1, 1, "", "calculate_overall_shortfall"], [28, 1, 1, "", "create_change_table"], [28, 1, 1, "", "load_targets_from_csv"]], "powersimdata.design.generation.cost_curves": [[28, 1, 1, "", "build_supply_curve"], [28, 1, 1, "", "check_supply_data"], [28, 1, 1, "", "get_supply_data"], [28, 1, 1, "", "ks_test"], [28, 1, 1, "", "lower_bound_index"], [28, 1, 1, "", "plot_capacity_vs_price"], [28, 1, 1, "", "plot_linear_vs_quadratic_terms"]], "powersimdata.design.generation.curtailment": [[28, 1, 1, "", "temporal_curtailment"]], "powersimdata.design.generation.tests": [[29, 0, 0, "-", "test_clean_capacity_scaling"], [29, 0, 0, "-", "test_cost_curves"], [29, 0, 0, "-", "test_curtailment"]], "powersimdata.design.generation.tests.test_clean_capacity_scaling": [[29, 1, 1, "", "collaborative_test_targets"], [29, 1, 1, "", "test_collaborative_three_areas_one_nonparticipating"], [29, 1, 1, "", "test_collaborative_two_areas_addl_curtailment"], [29, 1, 1, "", "test_collaborative_two_areas_addl_external"], [29, 1, 1, "", "test_collaborative_two_areas_overgeneration"], [29, 1, 1, "", "test_independent_new_capacity"]], "powersimdata.design.generation.tests.test_cost_curves": [[29, 1, 1, "", "test_build_supply_curve_1seg"], [29, 1, 1, "", "test_build_supply_curve_2seg"], [29, 1, 1, "", "test_get_supply_data"], [29, 1, 1, "", "test_ks_test"], [29, 1, 1, "", "test_lower_bound_index"]], "powersimdata.design.generation.tests.test_curtailment": [[29, 1, 1, "", "mock_scenario"], [29, 1, 1, "", "test_temporal_curtailment"]], "powersimdata.design.investment": [[30, 0, 0, "-", "const"], [30, 0, 0, "-", "create_mapping_files"], [30, 0, 0, "-", "inflation"], [30, 0, 0, "-", "investment_costs"], [31, 0, 0, "-", "tests"]], "powersimdata.design.investment.create_mapping_files": [[30, 1, 1, "", "bus_to_neem_reg"], [30, 1, 1, "", "bus_to_reeds_reg"], [30, 1, 1, "", "points_to_polys"], [30, 1, 1, "", "sjoin_nearest"], [30, 1, 1, "", "write_bus_neem_map"], [30, 1, 1, "", "write_bus_reeds_map"], [30, 1, 1, "", "write_poly_shapefile"]], "powersimdata.design.investment.inflation": [[30, 1, 1, "", "calculate_inflation"]], "powersimdata.design.investment.investment_costs": [[30, 1, 1, "", "append_keep_index_name"], [30, 1, 1, "", "calculate_ac_inv_costs"], [30, 1, 1, "", "calculate_dc_inv_costs"], [30, 1, 1, "", "calculate_gen_inv_costs"], [30, 1, 1, "", "merge_keep_index"]], "powersimdata.design.investment.tests": [[31, 0, 0, "-", "test_investment_costs"]], "powersimdata.design.investment.tests.test_investment_costs": [[31, 1, 1, "", "mock_grid"], [31, 1, 1, "", "test_calculate_ac_inv_costs"], [31, 1, 1, "", "test_calculate_ac_inv_costs_lines_only"], [31, 1, 1, "", "test_calculate_ac_inv_costs_not_summed"], [31, 1, 1, "", "test_calculate_ac_inv_costs_transformers_only"], [31, 1, 1, "", "test_calculate_dc_inv_costs"], [31, 1, 1, "", "test_calculate_dc_inv_costs_not_summed"], [31, 1, 1, "", "test_calculate_gen_inv_costs_2030"], [31, 1, 1, "", "test_calculate_gen_inv_costs_not_summed"]], "powersimdata.design.mimic_grid": [[26, 1, 1, "", "mimic_generation_capacity"]], "powersimdata.design.scenario_info": [[26, 2, 1, "", "ScenarioInfo"]], "powersimdata.design.scenario_info.ScenarioInfo": [[26, 3, 1, "", "area_to_loadzone"], [26, 3, 1, "", "get_available_resource"], [26, 3, 1, "", "get_capacity"], [26, 3, 1, "", "get_capacity_factor"], [26, 3, 1, "", "get_curtailment"], [26, 3, 1, "", "get_demand"], [26, 3, 1, "", "get_generation"], [26, 3, 1, "", "get_no_congest_capacity_factor"], [26, 3, 1, "", "get_profile_resource"]], "powersimdata.design.tests": [[32, 0, 0, "-", "test_scenario_info"]], "powersimdata.design.tests.test_scenario_info": [[32, 2, 1, "", "TestScenarioInfo"]], "powersimdata.design.tests.test_scenario_info.TestScenarioInfo": [[32, 3, 1, "", "setUp"], [32, 3, 1, "", "test_get_available_resource"], [32, 3, 1, "", "test_get_capacity"], [32, 3, 1, "", "test_get_capacity_factor"], [32, 3, 1, "", "test_get_curtailment"], [32, 3, 1, "", "test_get_demand"], [32, 3, 1, "", "test_get_generation"], [32, 3, 1, "", "test_get_no_congest_capacity_factor"], [32, 3, 1, "", "test_get_profile_resource"]], "powersimdata.design.transmission": [[33, 0, 0, "-", "mwmiles"], [33, 0, 0, "-", "statelines"], [33, 0, 0, "-", "substations"], [34, 0, 0, "-", "tests"], [33, 0, 0, "-", "upgrade"], [33, 0, 0, "-", "zones"]], "powersimdata.design.transmission.mwmiles": [[33, 1, 1, "", "calculate_mw_miles"]], "powersimdata.design.transmission.statelines": [[33, 1, 1, "", "classify_interstate_intrastate"]], "powersimdata.design.transmission.substations": [[33, 1, 1, "", "calculate_substation_capacity"]], "powersimdata.design.transmission.tests": [[34, 0, 0, "-", "test_mwmiles"], [34, 0, 0, "-", "test_statelines"], [34, 0, 0, "-", "test_substations"], [34, 0, 0, "-", "test_upgrade"]], "powersimdata.design.transmission.tests.test_mwmiles": [[34, 2, 1, "", "TestCalculateMWMiles"]], "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_calculate_mw_miles_many_scaled"], [34, 3, 1, "", "test_calculate_mw_miles_many_scaled_one_branch_excluded"], [34, 3, 1, "", "test_calculate_mw_miles_many_scaled_two_branches_excluded"], [34, 3, 1, "", "test_calculate_mw_miles_no_scale"], [34, 3, 1, "", "test_calculate_mw_miles_one_line_scaled"], [34, 3, 1, "", "test_calculate_mw_miles_one_transformer_scaled"]], "powersimdata.design.transmission.tests.test_statelines": [[34, 2, 1, "", "TestClassifyInterstateIntrastate"]], "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_classify_interstate_intrastate_bad_ct"], [34, 3, 1, "", "test_classify_interstate_intrastate_empty_ct"], [34, 3, 1, "", "test_classify_interstate_intrastate_none"], [34, 3, 1, "", "test_classify_interstate_intrastate_several"], [34, 3, 1, "", "test_classify_interstate_intrastate_two"]], "powersimdata.design.transmission.tests.test_substations": [[34, 1, 1, "", "test_calculate_substation_capacity"]], "powersimdata.design.transmission.tests.test_upgrade": [[34, 2, 1, "", "TestConstructCompositeAllowlist"], [34, 2, 1, "", "TestGetBranchesByArea"], [34, 2, 1, "", "TestIdentifyMesh"], [34, 2, 1, "", "TestIncrementBranch"], [34, 2, 1, "", "TestScaleRenewableStubs"], [34, 2, 1, "", "TestStubTopologyHelpers"]], "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist": [[34, 3, 1, "", "test_allow_list_and_deny_list_failure"], [34, 3, 1, "", "test_bad_allow_list_entry_type"], [34, 3, 1, "", "test_bad_allow_list_value"], [34, 3, 1, "", "test_bad_deny_list_type"], [34, 3, 1, "", "test_bad_deny_list_value"], [34, 3, 1, "", "test_good_allow_list"], [34, 3, 1, "", "test_good_deny_list"], [34, 3, 1, "", "test_none_none"]], "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_bad_area_name"], [34, 3, 1, "", "test_bad_area_type"], [34, 3, 1, "", "test_bad_grid_type"], [34, 3, 1, "", "test_bad_method_name"], [34, 3, 1, "", "test_bad_method_type"], [34, 3, 1, "", "test_bridging_multi_state"], [34, 3, 1, "", "test_bridging_oregon"], [34, 3, 1, "", "test_bridging_washington"], [34, 3, 1, "", "test_either_multi_state"], [34, 3, 1, "", "test_either_oregon"], [34, 3, 1, "", "test_either_washington"], [34, 3, 1, "", "test_internal_multi_state"], [34, 3, 1, "", "test_internal_oregon"], [34, 3, 1, "", "test_internal_washington"]], "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_identify_mesh_MW_n_1"], [34, 3, 1, "", "test_identify_mesh_MW_n_2"], [34, 3, 1, "", "test_identify_mesh_MW_n_2_allow_list"], [34, 3, 1, "", "test_identify_mesh_MW_n_2_deny_list"], [34, 3, 1, "", "test_identify_mesh_MW_n_3"], [34, 3, 1, "", "test_identify_mesh_MWmiles_n_1"], [34, 3, 1, "", "test_identify_mesh_MWmiles_n_2"], [34, 3, 1, "", "test_identify_mesh_MWmiles_n_3"], [34, 3, 1, "", "test_identify_mesh_bad_method"], [34, 3, 1, "", "test_identify_mesh_branch_upgrades_default"], [34, 3, 1, "", "test_identify_mesh_branch_upgrades_n_2"], [34, 3, 1, "", "test_identify_mesh_branch_upgrades_n_3"], [34, 3, 1, "", "test_identify_mesh_branch_upgrades_n_4"], [34, 3, 1, "", "test_identify_mesh_branch_upgrades_quantile90"], [34, 3, 1, "", "test_identify_mesh_mean"], [34, 3, 1, "", "test_identify_mesh_mean_n_1"], [34, 3, 1, "", "test_identify_mesh_mean_n_2"], [34, 3, 1, "", "test_identify_mesh_mean_n_3"], [34, 3, 1, "", "test_identify_mesh_mean_n_4"], [34, 3, 1, "", "test_identify_mesh_mean_n_4_specify_quantile"]], "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_increment_branch_scaling_ref_and_ct_and_increment1"], [34, 3, 1, "", "test_increment_branch_scaling_ref_and_ct_and_increment2"], [34, 3, 1, "", "test_increment_branch_scaling_ref_and_custom_increment"], [34, 3, 1, "", "test_increment_branch_scaling_ref_and_increment"], [34, 3, 1, "", "test_increment_branch_scaling_ref_only"]], "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs": [[34, 3, 1, "", "test_empty_ct_inplace_default"], [34, 3, 1, "", "test_empty_ct_inplace_false"], [34, 3, 1, "", "test_empty_ct_inplace_true"], [34, 3, 1, "", "test_empty_ct_no_fuzz"], [34, 3, 1, "", "test_existing_ct_unrelated_branch_id"], [34, 3, 1, "", "test_existing_ct_zone_id_solar_wind"], [34, 3, 1, "", "test_existing_ct_zone_id_wind"]], "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers": [[34, 3, 1, "", "setUp"], [34, 3, 1, "", "test_find_branches_connected_to_bus_1"], [34, 3, 1, "", "test_find_branches_connected_to_bus_4"], [34, 3, 1, "", "test_find_branches_connected_to_bus_5"], [34, 3, 1, "", "test_find_capacity_at_bus_1_solar_str"], [34, 3, 1, "", "test_find_capacity_at_bus_1_solar_tuple"], [34, 3, 1, "", "test_find_capacity_at_bus_2_wind"], [34, 3, 1, "", "test_find_capacity_at_bus_7_solar"], [34, 3, 1, "", "test_find_capacity_at_bus_7_solar_ng"], [34, 3, 1, "", "test_find_first_degree_branches_101"], [34, 3, 1, "", "test_find_first_degree_branches_108"], [34, 3, 1, "", "test_find_stub_degree_1"], [34, 3, 1, "", "test_find_stub_degree_5"], [34, 3, 1, "", "test_find_stub_degree_7"]], "powersimdata.design.transmission.upgrade": [[33, 1, 1, "", "get_branches_by_area"], [33, 1, 1, "", "scale_congested_mesh_branches"], [33, 1, 1, "", "scale_renewable_stubs"]], "powersimdata.design.transmission.zones": [[33, 1, 1, "", "calculate_interzone_capacity"]], "powersimdata.input": [[35, 0, 0, "-", "abstract_grid"], [35, 0, 0, "-", "change_table"], [36, 0, 0, "-", "changes"], [35, 0, 0, "-", "check"], [35, 0, 0, "-", "configure"], [38, 0, 0, "-", "const"], [39, 0, 0, "-", "converter"], [35, 0, 0, "-", "electrified_demand_input"], [35, 0, 0, "-", "expansion_candidates"], [41, 0, 0, "-", "exporter"], [35, 0, 0, "-", "grid"], [35, 0, 0, "-", "helpers"], [35, 0, 0, "-", "input_base"], [35, 0, 0, "-", "input_data"], [35, 0, 0, "-", "profile_input"], [42, 0, 0, "-", "tests"], [35, 0, 0, "-", "transform_demand"], [35, 0, 0, "-", "transform_grid"], [35, 0, 0, "-", "transform_profile"]], "powersimdata.input.abstract_grid": [[35, 2, 1, "", "AbstractGrid"], [35, 1, 1, "", "storage_template"]], "powersimdata.input.change_table": [[35, 2, 1, "", "ChangeTable"]], "powersimdata.input.change_table.ChangeTable": [[35, 3, 1, "", "add_branch"], [35, 3, 1, "", "add_bus"], [35, 3, 1, "", "add_dcline"], [35, 3, 1, "", "add_demand_flexibility"], [35, 3, 1, "", "add_electrification"], [35, 3, 1, "", "add_plant"], [35, 3, 1, "", "add_storage_capacity"], [35, 3, 1, "", "clear"], [35, 3, 1, "", "remove_branch"], [35, 3, 1, "", "remove_bus"], [35, 3, 1, "", "remove_dcline"], [35, 3, 1, "", "remove_plant"], [35, 3, 1, "", "scale_branch_capacity"], [35, 3, 1, "", "scale_congested_mesh_branches"], [35, 3, 1, "", "scale_dcline_capacity"], [35, 3, 1, "", "scale_demand"], [35, 3, 1, "", "scale_plant_capacity"], [35, 3, 1, "", "scale_plant_cost"], [35, 3, 1, "", "scale_plant_pmin"], [35, 3, 1, "", "scale_renewable_stubs"]], "powersimdata.input.changes": [[36, 0, 0, "-", "bus"], [36, 0, 0, "-", "demand_flex"], [36, 0, 0, "-", "electrification"], [36, 0, 0, "-", "helpers"], [36, 0, 0, "-", "plant"], [36, 0, 0, "-", "storage"], [37, 0, 0, "-", "tests"]], "powersimdata.input.changes.bus": [[36, 1, 1, "", "add_bus"], [36, 1, 1, "", "remove_bus"]], "powersimdata.input.changes.demand_flex": [[36, 1, 1, "", "add_demand_flexibility"]], "powersimdata.input.changes.electrification": [[36, 2, 1, "", "AreaScaling"], [36, 2, 1, "", "ElectrifiedDemand"], [36, 2, 1, "", "ScaleFactors"], [36, 1, 1, "", "add_electrification"]], "powersimdata.input.changes.electrification.AreaScaling": [[36, 4, 1, "", "end_uses"], [36, 3, 1, "", "value"]], "powersimdata.input.changes.electrification.ElectrifiedDemand": [[36, 4, 1, "", "grid_info"], [36, 3, 1, "", "value"], [36, 4, 1, "", "zone_info"]], "powersimdata.input.changes.electrification.ScaleFactors": [[36, 4, 1, "", "sf"], [36, 3, 1, "", "value"]], "powersimdata.input.changes.helpers": [[36, 1, 1, "", "ordinal"]], "powersimdata.input.changes.plant": [[36, 1, 1, "", "add_plant"], [36, 1, 1, "", "remove_plant"], [36, 1, 1, "", "scale_plant_pmin"]], "powersimdata.input.changes.storage": [[36, 1, 1, "", "add_storage_capacity"]], "powersimdata.input.changes.tests": [[37, 0, 0, "-", "test_add_electrification"]], "powersimdata.input.changes.tests.test_add_electrification": [[37, 1, 1, "", "test_add_electrification"], [37, 1, 1, "", "test_add_electrification_by_zone"], [37, 1, 1, "", "test_add_electrification_combined"], [37, 1, 1, "", "test_area_scaling"], [37, 1, 1, "", "test_check_scale_factors"], [37, 1, 1, "", "test_scale_factors"]], "powersimdata.input.check": [[35, 1, 1, "", "check_grid"]], "powersimdata.input.configure": [[35, 1, 1, "", "adjust_pmin"], [35, 1, 1, "", "adjust_ramp30"], [35, 1, 1, "", "linearize_gencost"]], "powersimdata.input.const": [[38, 0, 0, "-", "grid_const"], [38, 0, 0, "-", "pypsa_const"]], "powersimdata.input.converter": [[39, 0, 0, "-", "csv_to_grid"], [39, 0, 0, "-", "helpers"], [39, 0, 0, "-", "pypsa_to_grid"], [39, 0, 0, "-", "pypsa_to_profiles"], [40, 0, 0, "-", "tests"]], "powersimdata.input.converter.csv_to_grid": [[39, 2, 1, "", "FromCSV"]], "powersimdata.input.converter.helpers": [[39, 1, 1, "", "add_coord_to_grid_data_frames"], [39, 1, 1, "", "add_interconnect_to_grid_data_frames"], [39, 1, 1, "", "add_zone_to_grid_data_frames"]], "powersimdata.input.converter.pypsa_to_grid": [[39, 2, 1, "", "FromPyPSA"]], "powersimdata.input.converter.pypsa_to_grid.FromPyPSA": [[39, 3, 1, "", "build"]], "powersimdata.input.converter.pypsa_to_profiles": [[39, 1, 1, "", "get_pypsa_demand_profile"], [39, 1, 1, "", "get_pypsa_gen_profile"]], "powersimdata.input.converter.tests": [[40, 0, 0, "-", "test_pypsa_to_grid"], [40, 0, 0, "-", "test_pypsa_to_profiles"]], "powersimdata.input.converter.tests.test_pypsa_to_grid": [[40, 1, 1, "", "test_import_arbitrary_network_from_pypsa_to_grid"], [40, 1, 1, "", "test_import_exported_network"], [40, 1, 1, "", "test_import_network_including_storages_from_pypsa_to_grid"]], "powersimdata.input.converter.tests.test_pypsa_to_profiles": [[40, 1, 1, "", "network"], [40, 1, 1, "", "test_extract_demand"], [40, 1, 1, "", "test_extract_wind"], [40, 1, 1, "", "test_get_pypsa_demand_profile_argument_type"], [40, 1, 1, "", "test_get_pypsa_gen_profile_argument_type"], [40, 1, 1, "", "test_get_pypsa_gen_profile_argument_value"]], "powersimdata.input.electrified_demand_input": [[35, 2, 1, "", "ElectrifiedDemand"], [35, 1, 1, "", "get_profile_version"]], "powersimdata.input.electrified_demand_input.ElectrifiedDemand": [[35, 3, 1, "", "get_profile"], [35, 3, 1, "", "get_profile_version"]], "powersimdata.input.expansion_candidates": [[35, 2, 1, "", "ExpansionCandidates"], [35, 1, 1, "", "check_branch"], [35, 1, 1, "", "check_branch_voltage"], [35, 1, 1, "", "check_bus_id"], [35, 1, 1, "", "check_plant"], [35, 1, 1, "", "check_storage"]], "powersimdata.input.expansion_candidates.ExpansionCandidates": [[35, 4, 1, "", "branch"], [35, 4, 1, "", "plant"], [35, 3, 1, "", "set_branch"], [35, 3, 1, "", "set_plant"], [35, 3, 1, "", "set_storage"], [35, 4, 1, "", "storage"]], "powersimdata.input.exporter": [[41, 0, 0, "-", "export_to_pypsa"], [41, 0, 0, "-", "export_to_reise"]], "powersimdata.input.exporter.export_to_pypsa": [[41, 1, 1, "", "export_to_pypsa"], [41, 1, 1, "", "restore_original_columns"]], "powersimdata.input.exporter.export_to_reise": [[41, 1, 1, "", "export_grid"], [41, 1, 1, "", "export_transformed_profile"]], "powersimdata.input.grid": [[35, 2, 1, "", "Grid"]], "powersimdata.input.grid.Grid": [[35, 4, 1, "", "SUPPORTED_IMPORTS"], [35, 4, 1, "", "SUPPORTED_MODELS"]], "powersimdata.input.helpers": [[35, 1, 1, "", "decompose_plant_data_frame_into_areas"], [35, 1, 1, "", "decompose_plant_data_frame_into_areas_and_resources"], [35, 1, 1, "", "decompose_plant_data_frame_into_resources"], [35, 1, 1, "", "decompose_plant_data_frame_into_resources_and_areas"], [35, 1, 1, "", "get_active_resources_in_grid"], [35, 1, 1, "", "get_plant_id_for_resources"], [35, 1, 1, "", "get_plant_id_for_resources_in_area"], [35, 1, 1, "", "get_plant_id_for_resources_in_interconnects"], [35, 1, 1, "", "get_plant_id_for_resources_in_loadzones"], [35, 1, 1, "", "get_plant_id_for_resources_in_states"], [35, 1, 1, "", "get_plant_id_in_interconnects"], [35, 1, 1, "", "get_plant_id_in_loadzones"], [35, 1, 1, "", "get_plant_id_in_states"], [35, 1, 1, "", "get_resources_in_grid"], [35, 1, 1, "", "get_storage_id_in_area"], [35, 1, 1, "", "summarize_plant_to_bus"], [35, 1, 1, "", "summarize_plant_to_location"]], "powersimdata.input.input_base": [[35, 2, 1, "", "InputBase"]], "powersimdata.input.input_base.InputBase": [[35, 3, 1, "", "get_data"]], "powersimdata.input.input_data": [[35, 2, 1, "", "InputData"], [35, 1, 1, "", "distribute_demand_from_zones_to_buses"]], "powersimdata.input.input_data.InputData": [[35, 3, 1, "", "save_change_table"]], "powersimdata.input.profile_input": [[35, 2, 1, "", "ProfileInput"], [35, 1, 1, "", "get_profile_version"]], "powersimdata.input.profile_input.ProfileInput": [[35, 3, 1, "", "get_profile_version"], [35, 3, 1, "", "upload"]], "powersimdata.input.tests": [[42, 0, 0, "-", "test_change_table"], [42, 0, 0, "-", "test_check"], [42, 0, 0, "-", "test_configure"], [42, 0, 0, "-", "test_expansion_candidates"], [42, 0, 0, "-", "test_grid"], [42, 0, 0, "-", "test_helpers"], [42, 0, 0, "-", "test_input_data"], [42, 0, 0, "-", "test_profile_input"], [42, 0, 0, "-", "test_transform_demand"], [42, 0, 0, "-", "test_transform_grid"], [42, 0, 0, "-", "test_transform_profile"]], "powersimdata.input.tests.test_change_table": [[42, 1, 1, "", "ct"], [42, 1, 1, "", "test_add_branch_Pmin_and_Pmax"], [42, 1, 1, "", "test_add_branch_argument_buses_in_different_interconnect"], [42, 1, 1, "", "test_add_branch_zero_distance_between_buses"], [42, 1, 1, "", "test_add_bus_bad_list_entries"], [42, 1, 1, "", "test_add_bus_bad_type"], [42, 1, 1, "", "test_add_bus_success"], [42, 1, 1, "", "test_add_dcline_Pmin_and_Pmax_and_capacity"], [42, 1, 1, "", "test_add_dcline_Pmin_and_Pmax_success"], [42, 1, 1, "", "test_add_dcline_Pmin_gt_Pmax"], [42, 1, 1, "", "test_add_dcline_argument_negative_capacity"], [42, 1, 1, "", "test_add_dcline_argument_number_of_keys"], [42, 1, 1, "", "test_add_dcline_argument_same_buses"], [42, 1, 1, "", "test_add_dcline_argument_type"], [42, 1, 1, "", "test_add_dcline_argument_wrong_bus"], [42, 1, 1, "", "test_add_dcline_argument_wrong_keys"], [42, 1, 1, "", "test_add_dcline_in_different_interconnect"], [42, 1, 1, "", "test_add_dcline_output"], [42, 1, 1, "", "test_add_demand_flexibility"], [42, 1, 1, "", "test_add_new_elements_at_new_buses"], [42, 1, 1, "", "test_add_plant_argument_type"], [42, 1, 1, "", "test_add_plant_check_pmin_is_added"], [42, 1, 1, "", "test_add_plant_negative_pmax"], [42, 1, 1, "", "test_add_plant_negative_pmin"], [42, 1, 1, "", "test_add_plant_neighbor_can_be_on_same_bus"], [42, 1, 1, "", "test_add_plant_pmin_pmax_relationship"], [42, 1, 1, "", "test_add_plant_wrong_bus"], [42, 1, 1, "", "test_add_plant_wrong_resource"], [42, 1, 1, "", "test_add_renewable_plant_check_neighbor_is_added"], [42, 1, 1, "", "test_add_renewable_plant_missing_key_bus_id"], [42, 1, 1, "", "test_add_renewable_plant_missing_key_pmax"], [42, 1, 1, "", "test_add_renewable_plant_missing_key_type"], [42, 1, 1, "", "test_add_thermal_plant_missing_key_c0"], [42, 1, 1, "", "test_add_thermal_plant_missing_key_c1"], [42, 1, 1, "", "test_add_thermal_plant_missing_key_c2"], [42, 1, 1, "", "test_add_thermal_plant_wrong_coefficients"], [42, 1, 1, "", "test_change_table_clear_bad_key"], [42, 1, 1, "", "test_change_table_clear_bad_type"], [42, 1, 1, "", "test_change_table_clear_success"], [42, 1, 1, "", "test_remove_branch"], [42, 1, 1, "", "test_remove_bus"], [42, 1, 1, "", "test_resource_exist"], [42, 1, 1, "", "test_scale_pmin_by_plant_and_zone_too_high"], [42, 1, 1, "", "test_scale_pmin_by_plant_too_high"], [42, 1, 1, "", "test_scale_pmin_by_zone_too_high"]], "powersimdata.input.tests.test_check": [[42, 1, 1, "", "check_grid_models_match_failure"], [42, 1, 1, "", "check_grid_models_match_success"], [42, 1, 1, "", "europe"], [42, 1, 1, "", "mock_gencost"], [42, 1, 1, "", "mock_grid"], [42, 1, 1, "", "mock_plant"], [42, 1, 1, "", "mock_scenario"], [42, 1, 1, "", "test_check_areas_and_format"], [42, 1, 1, "", "test_check_areas_and_format_argument_type"], [42, 1, 1, "", "test_check_areas_and_format_argument_value"], [42, 1, 1, "", "test_check_areas_are_in_grid_and_format"], [42, 1, 1, "", "test_check_areas_are_in_grid_and_format_argument_type"], [42, 1, 1, "", "test_check_areas_are_in_grid_and_format_argument_value"], [42, 1, 1, "", "test_check_data_frame"], [42, 1, 1, "", "test_check_data_frame_argument_type"], [42, 1, 1, "", "test_check_data_frame_argument_value"], [42, 1, 1, "", "test_check_date"], [42, 1, 1, "", "test_check_date_argument_type"], [42, 1, 1, "", "test_check_date_range_in_scenario"], [42, 1, 1, "", "test_check_date_range_in_scenario_argument_value"], [42, 1, 1, "", "test_check_date_range_in_time_series_argument_value"], [42, 1, 1, "", "test_check_epsilon"], [42, 1, 1, "", "test_check_epsilon_argument_type"], [42, 1, 1, "", "test_check_epsilon_argument_value"], [42, 1, 1, "", "test_check_gencost"], [42, 1, 1, "", "test_check_gencost_argument_type"], [42, 1, 1, "", "test_check_gencost_argument_value"], [42, 1, 1, "", "test_check_grid"], [42, 1, 1, "", "test_check_grid_type_failure"], [42, 1, 1, "", "test_check_grid_type_success"], [42, 1, 1, "", "test_check_number_hours_to_analyze"], [42, 1, 1, "", "test_check_number_hours_to_analyze_argument_type"], [42, 1, 1, "", "test_check_number_hours_to_analyze_argument_value"], [42, 1, 1, "", "test_check_plants_are_in_grid"], [42, 1, 1, "", "test_check_plants_are_in_grid_argument_type"], [42, 1, 1, "", "test_check_plants_are_in_grid_argument_value"], [42, 1, 1, "", "test_check_resources_and_format"], [42, 1, 1, "", "test_check_resources_and_format_argument_type"], [42, 1, 1, "", "test_check_resources_and_format_argument_value"], [42, 1, 1, "", "test_check_resources_are_in_grid_and_format"], [42, 1, 1, "", "test_check_resources_are_in_grid_and_format_argument_value"], [42, 1, 1, "", "test_check_resources_are_renewable_and_format"], [42, 1, 1, "", "test_check_resources_are_renewable_and_format_argument_value"], [42, 1, 1, "", "test_check_time_series"], [42, 1, 1, "", "test_check_time_series_argument_value"], [42, 1, 1, "", "test_error_handling"]], "powersimdata.input.tests.test_configure": [[42, 1, 1, "", "test_linearize_gencost"], [42, 1, 1, "", "test_linearize_gencost_pmin_equal_pmax"], [42, 1, 1, "", "test_linearize_gencost_two_segment"]], "powersimdata.input.tests.test_expansion_candidates": [[42, 1, 1, "", "test_check_branch_voltage"], [42, 1, 1, "", "test_check_bus_id"], [42, 1, 1, "", "test_column_types"], [42, 1, 1, "", "test_set_candidates"]], "powersimdata.input.tests.test_grid": [[42, 1, 1, "", "base_texas"], [42, 1, 1, "", "base_western"], [42, 1, 1, "", "test_deepcopy_works"], [42, 1, 1, "", "test_grid_eq_failure_branch"], [42, 1, 1, "", "test_grid_eq_failure_bus"], [42, 1, 1, "", "test_grid_eq_failure_dcline"], [42, 1, 1, "", "test_grid_eq_failure_gencost_before"], [42, 1, 1, "", "test_grid_eq_failure_plant"], [42, 1, 1, "", "test_grid_eq_failure_simple"], [42, 1, 1, "", "test_grid_eq_failure_storage"], [42, 1, 1, "", "test_grid_eq_failure_sub"], [42, 1, 1, "", "test_grid_eq_success_bus_type"], [42, 1, 1, "", "test_grid_eq_success_gencost_after"], [42, 1, 1, "", "test_grid_eq_success_plant_ramp30"], [42, 1, 1, "", "test_grid_eq_success_simple"], [42, 1, 1, "", "test_grid_incorrect_source"], [42, 1, 1, "", "test_grid_type"], [42, 1, 1, "", "test_that_fields_are_not_modified_when_loading_another_grid"]], "powersimdata.input.tests.test_helpers": [[42, 2, 1, "", "TestResourcesInGrid"], [42, 2, 1, "", "TestSummarizePlantToBus"], [42, 2, 1, "", "TestSummarizePlantToLocation"], [42, 1, 1, "", "check_dataframe_matches"], [42, 1, 1, "", "grid"], [42, 1, 1, "", "test_get_plant_id_for_resources"], [42, 1, 1, "", "test_get_plant_id_for_resources_argument_type"], [42, 1, 1, "", "test_get_plant_id_for_resources_argument_value"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_area"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_interconnects"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_interconnects_argument_type"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_interconnects_argument_value"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_loadzones"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_loadzones_argument_type"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_loadzones_argument_value"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_states"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_states_argument_type"], [42, 1, 1, "", "test_get_plant_id_for_resources_in_states_argument_value"], [42, 1, 1, "", "test_get_plant_id_in_interconnects"], [42, 1, 1, "", "test_get_plant_id_in_interconnects_argument_type"], [42, 1, 1, "", "test_get_plant_id_in_interconnects_argument_value"], [42, 1, 1, "", "test_get_plant_id_in_loadzones"], [42, 1, 1, "", "test_get_plant_id_in_loadzones_argument_type"], [42, 1, 1, "", "test_get_plant_id_in_loadzones_argument_value"], [42, 1, 1, "", "test_get_plant_id_in_states"], [42, 1, 1, "", "test_get_plant_id_in_states_argument_type"], [42, 1, 1, "", "test_get_plant_id_in_states_argument_value"], [42, 1, 1, "", "test_get_storage_id_in_area"]], "powersimdata.input.tests.test_helpers.TestResourcesInGrid": [[42, 3, 1, "", "setUp"], [42, 3, 1, "", "test_get_active_resources_in_grid"], [42, 3, 1, "", "test_get_resources_in_grid"]], "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus": [[42, 3, 1, "", "setUp"], [42, 3, 1, "", "test_summarize_all_buses_false"], [42, 3, 1, "", "test_summarize_all_buses_true"], [42, 3, 1, "", "test_summarize_default"]], "powersimdata.input.tests.test_helpers.TestSummarizePlantToLocation": [[42, 3, 1, "", "setUp"], [42, 3, 1, "", "test_summarize_location"]], "powersimdata.input.tests.test_input_data": [[42, 1, 1, "", "test_check_field"], [42, 1, 1, "", "test_get_file_components"]], "powersimdata.input.tests.test_profile_input": [[42, 1, 1, "", "test_get_file_path"], [42, 1, 1, "", "test_get_profile_version"], [42, 1, 1, "", "test_get_profile_version_electrification"]], "powersimdata.input.tests.test_transform_demand": [[42, 1, 1, "", "test_aggregate_demand"], [42, 1, 1, "", "test_profile_mappings"]], "powersimdata.input.tests.test_transform_grid": [[42, 1, 1, "", "ct"], [42, 1, 1, "", "get_branch_id"], [42, 1, 1, "", "get_plant_id"], [42, 1, 1, "", "test_add_branch"], [42, 1, 1, "", "test_add_bus"], [42, 1, 1, "", "test_add_dcline"], [42, 1, 1, "", "test_add_gen_add_entries_in_gencost_data_frame"], [42, 1, 1, "", "test_add_gen_add_entries_in_plant_data_frame"], [42, 1, 1, "", "test_add_storage"], [42, 1, 1, "", "test_added_branch_scaled"], [42, 1, 1, "", "test_remove_branch"], [42, 1, 1, "", "test_remove_bus"], [42, 1, 1, "", "test_scale_branch_one_zone"], [42, 1, 1, "", "test_scale_branch_two_zones"], [42, 1, 1, "", "test_scale_dcline"], [42, 1, 1, "", "test_scale_gen_capacity_one_zone"], [42, 1, 1, "", "test_scale_gen_one_plant"], [42, 1, 1, "", "test_scale_gen_pmin_one_plant"], [42, 1, 1, "", "test_scale_gen_pmin_two_types_two_zones"], [42, 1, 1, "", "test_scale_gencost_one_plant"], [42, 1, 1, "", "test_scale_gencost_two_types_two_zones"], [42, 1, 1, "", "test_scale_one_branch"], [42, 1, 1, "", "test_scale_renewable_gen_gencost_one_zone"], [42, 1, 1, "", "test_scale_thermal_gen_gencost_two_types_two_zones"], [42, 1, 1, "", "test_that_only_capacities_are_modified_when_scaling_renewable_gen"]], "powersimdata.input.tests.test_transform_profile": [[42, 1, 1, "", "base_grid"], [42, 1, 1, "", "get_change_table_for_id_scaling"], [42, 1, 1, "", "get_change_table_for_new_plant_addition"], [42, 1, 1, "", "get_change_table_for_zone_scaling"], [42, 1, 1, "", "get_plant_with_resource"], [42, 1, 1, "", "get_zone_with_resource"], [42, 1, 1, "", "mock_profile_input_class"], [42, 1, 1, "", "profile_input"], [42, 1, 1, "", "raw_demand"], [42, 1, 1, "", "raw_demand_flexibility_dn"], [42, 1, 1, "", "raw_demand_flexibility_up"], [42, 1, 1, "", "raw_hydro"], [42, 1, 1, "", "raw_solar"], [42, 1, 1, "", "raw_wind"], [42, 1, 1, "", "test_demand_is_scaled"], [42, 1, 1, "", "test_flexible_demand_profiles_are_trimmed"], [42, 1, 1, "", "test_hydro_is_scaled_by_id"], [42, 1, 1, "", "test_hydro_is_scaled_by_zone"], [42, 1, 1, "", "test_hydro_is_scaled_by_zone_and_id"], [42, 1, 1, "", "test_new_hydro_added"], [42, 1, 1, "", "test_new_hydro_are_not_scaled"], [42, 1, 1, "", "test_new_hydro_profile"], [42, 1, 1, "", "test_new_solar_are_added"], [42, 1, 1, "", "test_new_solar_are_not_scaled"], [42, 1, 1, "", "test_new_solar_profile"], [42, 1, 1, "", "test_new_wind_are_added"], [42, 1, 1, "", "test_new_wind_are_not_scaled"], [42, 1, 1, "", "test_new_wind_profile"], [42, 1, 1, "", "test_solar_is_scaled_by_id"], [42, 1, 1, "", "test_solar_is_scaled_by_zone"], [42, 1, 1, "", "test_solar_is_scaled_by_zone_and_id"], [42, 1, 1, "", "test_wind_is_scaled_by_id"], [42, 1, 1, "", "test_wind_is_scaled_by_zone"], [42, 1, 1, "", "test_wind_is_scaled_by_zone_and_id"]], "powersimdata.input.transform_demand": [[35, 2, 1, "", "TransformDemand"]], "powersimdata.input.transform_demand.TransformDemand": [[35, 3, 1, "", "get_profile"], [35, 3, 1, "", "value"]], "powersimdata.input.transform_grid": [[35, 2, 1, "", "TransformGrid"], [35, 1, 1, "", "voltage_to_x_per_distance"]], "powersimdata.input.transform_grid.TransformGrid": [[35, 3, 1, "", "get_grid"]], "powersimdata.input.transform_profile": [[35, 2, 1, "", "TransformProfile"]], "powersimdata.input.transform_profile.TransformProfile": [[35, 3, 1, "", "get_profile"]], "powersimdata.network": [[44, 0, 0, "-", "constants"], [43, 0, 0, "-", "csv_reader"], [48, 0, 0, "-", "europe_tub"], [43, 0, 0, "-", "helpers"], [49, 0, 0, "-", "hifld"], [43, 0, 0, "-", "model"], [50, 0, 0, "-", "usa_tamu"], [43, 0, 0, "-", "zenodo"]], "powersimdata.network.constants": [[45, 0, 0, "-", "carrier"], [44, 0, 0, "-", "model"], [46, 0, 0, "-", "region"]], "powersimdata.network.constants.carrier": [[45, 0, 0, "-", "color"], [45, 0, 0, "-", "efficiency"], [45, 0, 0, "-", "emission"], [45, 0, 0, "-", "label"], [45, 0, 0, "-", "plants"], [45, 0, 0, "-", "resource"], [45, 0, 0, "-", "storage"]], "powersimdata.network.constants.carrier.color": [[45, 2, 1, "", "EUColor"], [45, 2, 1, "", "USAColor"], [45, 1, 1, "", "get_color"]], "powersimdata.network.constants.carrier.efficiency": [[45, 2, 1, "", "EUEfficiency"], [45, 2, 1, "", "USAEfficiency"], [45, 1, 1, "", "get_efficiency"]], "powersimdata.network.constants.carrier.emission": [[45, 2, 1, "", "EUEmission"], [45, 2, 1, "", "USAEmission"], [45, 1, 1, "", "get_emission"]], "powersimdata.network.constants.carrier.label": [[45, 2, 1, "", "EULabel"], [45, 2, 1, "", "USALabel"], [45, 1, 1, "", "get_label"]], "powersimdata.network.constants.carrier.plants": [[45, 1, 1, "", "get_plants"]], "powersimdata.network.constants.carrier.resource": [[45, 2, 1, "", "EUResource"], [45, 2, 1, "", "USAResource"], [45, 1, 1, "", "get_resource"]], "powersimdata.network.constants.carrier.storage": [[45, 1, 1, "", "get_storage"]], "powersimdata.network.constants.region": [[46, 0, 0, "-", "division"], [46, 0, 0, "-", "geography"], [46, 0, 0, "-", "interconnect"], [46, 0, 0, "-", "loadzone"], [46, 0, 0, "-", "mapping"], [47, 0, 0, "-", "tests"], [46, 0, 0, "-", "zones"]], "powersimdata.network.constants.region.division": [[46, 2, 1, "", "DivisionMapping"], [46, 2, 1, "", "EUDivisionMapping"], [46, 2, 1, "", "USADivisionMapping"], [46, 1, 1, "", "get_division_mapping"]], "powersimdata.network.constants.region.geography": [[46, 2, 1, "", "EU"], [46, 2, 1, "", "USA"], [46, 1, 1, "", "format"], [46, 1, 1, "", "get_geography"]], "powersimdata.network.constants.region.geography.USA": [[46, 3, 1, "", "substitute"]], "powersimdata.network.constants.region.interconnect": [[46, 2, 1, "", "InterconnectMapping"], [46, 1, 1, "", "get_interconnect_mapping"]], "powersimdata.network.constants.region.loadzone": [[46, 2, 1, "", "EULoadzoneMapping"], [46, 2, 1, "", "LoadzoneMapping"], [46, 2, 1, "", "USALoadzoneMapping"], [46, 1, 1, "", "get_loadzone_mapping"]], "powersimdata.network.constants.region.mapping": [[46, 2, 1, "", "EUMapping"], [46, 2, 1, "", "Mapping"], [46, 2, 1, "", "USAMapping"], [46, 1, 1, "", "get_mapping"]], "powersimdata.network.constants.region.tests": [[47, 0, 0, "-", "test_zones"]], "powersimdata.network.constants.region.tests.test_zones": [[47, 1, 1, "", "test_check_zone_argument_type"], [47, 1, 1, "", "test_check_zone_column"], [47, 1, 1, "", "test_check_zone_index"]], "powersimdata.network.constants.region.zones": [[46, 1, 1, "", "check_zone"], [46, 1, 1, "", "from_csv"], [46, 1, 1, "", "from_pypsa"]], "powersimdata.network.csv_reader": [[43, 2, 1, "", "CSVReader"], [43, 1, 1, "", "read"]], "powersimdata.network.europe_tub": [[48, 0, 0, "-", "model"]], "powersimdata.network.europe_tub.model": [[48, 2, 1, "", "PyPSABase"], [48, 2, 1, "", "TUB"]], "powersimdata.network.europe_tub.model.PyPSABase": [[48, 3, 1, "", "build"], [48, 3, 1, "", "build_eur"]], "powersimdata.network.europe_tub.model.TUB": [[48, 3, 1, "", "build"], [48, 3, 1, "", "from_zenodo"]], "powersimdata.network.helpers": [[43, 1, 1, "", "check_and_format_interconnect"], [43, 1, 1, "", "check_model"], [43, 1, 1, "", "get_zone_info"], [43, 1, 1, "", "interconnect_to_name"], [43, 1, 1, "", "powerset"]], "powersimdata.network.hifld": [[49, 0, 0, "-", "model"]], "powersimdata.network.hifld.model": [[49, 2, 1, "", "HIFLD"]], "powersimdata.network.hifld.model.HIFLD": [[49, 3, 1, "", "build"]], "powersimdata.network.model": [[43, 2, 1, "", "ModelImmutables"], [43, 1, 1, "", "area_to_loadzone"]], "powersimdata.network.model.ModelImmutables": [[43, 3, 1, "", "area_to_loadzone"]], "powersimdata.network.usa_tamu": [[50, 0, 0, "-", "model"]], "powersimdata.network.usa_tamu.model": [[50, 2, 1, "", "TAMU"]], "powersimdata.network.usa_tamu.model.TAMU": [[50, 3, 1, "", "build"]], "powersimdata.network.zenodo": [[43, 2, 1, "", "Zenodo"]], "powersimdata.network.zenodo.Zenodo": [[43, 3, 1, "", "load_data"]], "powersimdata.output": [[51, 0, 0, "-", "output_data"]], "powersimdata.output.output_data": [[51, 2, 1, "", "OutputData"], [51, 1, 1, "", "construct_load_shed"]], "powersimdata.output.output_data.OutputData": [[51, 3, 1, "", "get_data"]], "powersimdata.scenario": [[52, 0, 0, "-", "analyze"], [52, 0, 0, "-", "check"], [52, 0, 0, "-", "create"], [52, 0, 0, "-", "delete"], [52, 0, 0, "-", "execute"], [52, 0, 0, "-", "move"], [52, 0, 0, "-", "ready"], [52, 0, 0, "-", "scenario"], [52, 0, 0, "-", "state"], [53, 0, 0, "-", "tests"]], "powersimdata.scenario.analyze": [[52, 2, 1, "", "Analyze"]], "powersimdata.scenario.analyze.Analyze": [[52, 4, 1, "", "allowed"], [52, 4, 1, "", "exported_methods"], [52, 3, 1, "", "get_averaged_cong"], [52, 3, 1, "", "get_congl"], [52, 3, 1, "", "get_congu"], [52, 3, 1, "", "get_dcline_pf"], [52, 3, 1, "", "get_demand"], [52, 3, 1, "", "get_lmp"], [52, 3, 1, "", "get_load_shed"], [52, 3, 1, "", "get_load_shift_dn"], [52, 3, 1, "", "get_load_shift_up"], [52, 3, 1, "", "get_pf"], [52, 3, 1, "", "get_pg"], [52, 3, 1, "", "get_storage_e"], [52, 3, 1, "", "get_storage_pg"], [52, 4, 1, "", "name"], [52, 3, 1, "", "print_infeasibilities"], [52, 3, 1, "", "refresh"]], "powersimdata.scenario.create": [[52, 2, 1, "", "Create"], [52, 2, 1, "", "FromCSV"], [52, 2, 1, "", "FromPyPSA"], [52, 1, 1, "", "get_builder"]], "powersimdata.scenario.create.Create": [[52, 4, 1, "", "allowed"], [52, 3, 1, "", "create_scenario"], [52, 4, 1, "", "default_exported_methods"], [52, 3, 1, "", "get_bus_demand"], [52, 4, 1, "", "name"], [52, 3, 1, "", "set_grid"]], "powersimdata.scenario.create.FromCSV": [[52, 3, 1, "", "get_base_profile"], [52, 3, 1, "", "print_available_profile"], [52, 3, 1, "", "set_base_grid"], [52, 3, 1, "", "set_base_profile"], [52, 3, 1, "", "set_change_table"]], "powersimdata.scenario.create.FromPyPSA": [[52, 3, 1, "", "set_base_grid"], [52, 3, 1, "", "set_base_profile"], [52, 3, 1, "", "set_change_table"]], "powersimdata.scenario.delete": [[52, 2, 1, "", "Delete"]], "powersimdata.scenario.delete.Delete": [[52, 4, 1, "", "allowed"], [52, 3, 1, "", "delete_scenario"], [52, 4, 1, "", "exported_methods"], [52, 4, 1, "", "name"]], "powersimdata.scenario.execute": [[52, 2, 1, "", "Execute"], [52, 2, 1, "", "SimulationInput"]], "powersimdata.scenario.execute.Execute": [[52, 4, 1, "", "allowed"], [52, 3, 1, "", "check_progress"], [52, 4, 1, "", "exported_methods"], [52, 3, 1, "", "extract_simulation_output"], [52, 3, 1, "", "launch_simulation"], [52, 4, 1, "", "name"], [52, 3, 1, "", "prepare_simulation_input"], [52, 3, 1, "", "print_scenario_status"], [52, 3, 1, "", "refresh"], [52, 5, 1, "", "scenario_id"]], "powersimdata.scenario.execute.SimulationInput": [[52, 3, 1, "", "prepare_demand_flexibility_parameters"], [52, 3, 1, "", "prepare_grid"], [52, 3, 1, "", "prepare_profile"]], "powersimdata.scenario.move": [[52, 2, 1, "", "BackUpDisk"], [52, 2, 1, "", "Move"]], "powersimdata.scenario.move.BackUpDisk": [[52, 3, 1, "", "backup_scenario"]], "powersimdata.scenario.move.Move": [[52, 4, 1, "", "allowed"], [52, 4, 1, "", "exported_methods"], [52, 3, 1, "", "move_scenario"], [52, 4, 1, "", "name"]], "powersimdata.scenario.ready": [[52, 2, 1, "", "Ready"]], "powersimdata.scenario.ready.Ready": [[52, 4, 1, "", "exported_methods"], [52, 3, 1, "", "get_base_grid"], [52, 3, 1, "", "get_bus_demand"], [52, 3, 1, "", "get_ct"], [52, 3, 1, "", "get_demand"], [52, 3, 1, "", "get_gentype_profile"], [52, 3, 1, "", "get_grid"], [52, 3, 1, "", "get_hydro"], [52, 3, 1, "", "get_profile"], [52, 3, 1, "", "get_solar"], [52, 3, 1, "", "get_wind"]], "powersimdata.scenario.scenario": [[52, 2, 1, "", "Scenario"]], "powersimdata.scenario.scenario.Scenario": [[52, 3, 1, "", "change"], [52, 3, 1, "", "get_scenario_table"]], "powersimdata.scenario.state": [[52, 2, 1, "", "State"]], "powersimdata.scenario.state.State": [[52, 4, 1, "", "allowed"], [52, 4, 1, "", "exported_methods"], [52, 4, 1, "", "name"], [52, 3, 1, "", "print_scenario_info"], [52, 3, 1, "", "refresh"], [52, 3, 1, "", "switch"]], "powersimdata.scenario.tests": [[53, 0, 0, "-", "test_check"], [53, 0, 0, "-", "test_create"], [53, 0, 0, "-", "test_scenario"]], "powersimdata.scenario.tests.test_check": [[53, 1, 1, "", "mock_scenario"], [53, 1, 1, "", "test_check_scenario_is_in_analyze"], [53, 1, 1, "", "test_check_scenario_is_in_analyze_state_argument_type"], [53, 1, 1, "", "test_check_scenario_is_in_analyze_state_argument_value"]], "powersimdata.scenario.tests.test_create": [[53, 1, 1, "", "test_get_demand_and_get_bus_demand"], [53, 1, 1, "", "test_get_solar"]], "powersimdata.scenario.tests.test_scenario": [[53, 1, 1, "", "test_bad_scenario_name"], [53, 1, 1, "", "test_scenario_workflow"]], "powersimdata.tests": [[54, 0, 0, "-", "mock_analyze"], [54, 0, 0, "-", "mock_builder"], [54, 0, 0, "-", "mock_change_table"], [54, 0, 0, "-", "mock_context"], [54, 0, 0, "-", "mock_grid"], [54, 0, 0, "-", "mock_profile_input"], [54, 0, 0, "-", "mock_scenario"], [54, 0, 0, "-", "mock_scenario_info"], [54, 0, 0, "-", "test_mocks"]], "powersimdata.tests.mock_analyze": [[54, 2, 1, "", "MockAnalyze"]], "powersimdata.tests.mock_analyze.MockAnalyze": [[54, 4, 1, "", "exported_methods"], [54, 3, 1, "", "get_bus_demand"], [54, 3, 1, "", "get_congl"], [54, 3, 1, "", "get_congu"], [54, 3, 1, "", "get_ct"], [54, 3, 1, "", "get_dcline_pf"], [54, 3, 1, "", "get_demand"], [54, 3, 1, "", "get_grid"], [54, 3, 1, "", "get_hydro"], [54, 3, 1, "", "get_lmp"], [54, 3, 1, "", "get_pf"], [54, 3, 1, "", "get_pg"], [54, 3, 1, "", "get_profile"], [54, 3, 1, "", "get_solar"], [54, 3, 1, "", "get_storage_e"], [54, 3, 1, "", "get_storage_pg"], [54, 3, 1, "", "get_wind"]], "powersimdata.tests.mock_builder": [[54, 2, 1, "", "MockBuilder"]], "powersimdata.tests.mock_change_table": [[54, 2, 1, "", "MockChangeTable"]], "powersimdata.tests.mock_context": [[54, 2, 1, "", "MockContext"]], "powersimdata.tests.mock_context.MockContext": [[54, 3, 1, "", "get_data_access"]], "powersimdata.tests.mock_grid": [[54, 2, 1, "", "MockGrid"]], "powersimdata.tests.mock_profile_input": [[54, 2, 1, "", "MockProfileInput"]], "powersimdata.tests.mock_profile_input.MockProfileInput": [[54, 3, 1, "", "get_data"]], "powersimdata.tests.mock_scenario": [[54, 2, 1, "", "MockScenario"]], "powersimdata.tests.mock_scenario_info": [[54, 2, 1, "", "MockScenarioInfo"]], "powersimdata.tests.mock_scenario_info.MockScenarioInfo": [[54, 3, 1, "", "area_to_loadzone"], [54, 3, 1, "", "get_available_resource"], [54, 3, 1, "", "get_capacity"], [54, 3, 1, "", "get_capacity_factor"], [54, 3, 1, "", "get_curtailment"], [54, 3, 1, "", "get_demand"], [54, 3, 1, "", "get_generation"], [54, 3, 1, "", "get_no_congest_capacity_factor"], [54, 3, 1, "", "get_profile_resource"]], "powersimdata.tests.test_mocks": [[54, 2, 1, "", "TestMockGrid"], [54, 2, 1, "", "TestMockInputData"], [54, 2, 1, "", "TestMockScenario"], [54, 2, 1, "", "TestMockScenarioInfo"], [54, 1, 1, "", "mock_hydro"], [54, 1, 1, "", "mock_pg"], [54, 1, 1, "", "mock_solar"], [54, 1, 1, "", "mock_wind"]], "powersimdata.tests.test_mocks.TestMockGrid": [[54, 3, 1, "", "test_mock_grid_failures"], [54, 3, 1, "", "test_mock_grid_successes"]], "powersimdata.tests.test_mocks.TestMockInputData": [[54, 3, 1, "", "grid"], [54, 3, 1, "", "test_create_mock_profile_input"], [54, 3, 1, "", "test_happy_case"], [54, 3, 1, "", "test_multiple_get_data_calls_returns_same_data"], [54, 3, 1, "", "test_no_end_time"], [54, 3, 1, "", "test_no_freq"], [54, 3, 1, "", "test_no_period"], [54, 3, 1, "", "test_no_start_time"], [54, 3, 1, "", "test_raise_if_all_date_range_fields_present"], [54, 3, 1, "", "test_raise_if_no_profile_specified"]], "powersimdata.tests.test_mocks.TestMockScenario": [[54, 3, 1, "", "test_mock_hydro_stored_properly"], [54, 3, 1, "", "test_mock_pg_stored_properly"], [54, 3, 1, "", "test_mock_profile"], [54, 3, 1, "", "test_mock_profile_value"], [54, 3, 1, "", "test_mock_solar_stored_properly"], [54, 3, 1, "", "test_mock_wind_stored_properly"]], "powersimdata.tests.test_mocks.TestMockScenarioInfo": [[54, 3, 1, "", "test_create_mock_scenario_info"], [54, 3, 1, "", "test_default_float"], [54, 3, 1, "", "test_grid_set_correctly"], [54, 3, 1, "", "test_info_set_correctly"]], "powersimdata.utility": [[55, 0, 0, "-", "config"], [55, 0, 0, "-", "distance"], [55, 0, 0, "-", "helpers"], [55, 0, 0, "-", "server_setup"], [56, 0, 0, "-", "templates"], [57, 0, 0, "-", "tests"]], "powersimdata.utility.config": [[55, 2, 1, "", "Config"], [55, 2, 1, "", "ContainerConfig"], [55, 2, 1, "", "DeploymentMode"], [55, 2, 1, "", "LocalConfig"], [55, 2, 1, "", "ServerConfig"], [55, 1, 1, "", "get_config"], [55, 1, 1, "", "get_deployment_mode"]], "powersimdata.utility.config.Config": [[55, 4, 1, "", "BACKUP_DATA_ROOT_DIR"], [55, 4, 1, "", "DATA_ROOT_DIR"], [55, 4, 1, "", "ENGINE_DIR"], [55, 4, 1, "", "EXECUTE_DIR"], [55, 4, 1, "", "INPUT_DIR"], [55, 4, 1, "", "LOCAL_DIR"], [55, 4, 1, "", "MODEL_DIR"], [55, 4, 1, "", "OUTPUT_DIR"], [55, 4, 1, "", "SERVER_ADDRESS"], [55, 4, 1, "", "SERVER_SSH_PORT"]], "powersimdata.utility.config.ContainerConfig": [[55, 4, 1, "", "SERVER_ADDRESS"]], "powersimdata.utility.config.DeploymentMode": [[55, 4, 1, "", "CONFIG_MAP"], [55, 4, 1, "", "Container"], [55, 4, 1, "", "Local"], [55, 4, 1, "", "Server"]], "powersimdata.utility.config.LocalConfig": [[55, 4, 1, "", "DATA_ROOT_DIR"], [55, 4, 1, "", "ENGINE_DIR"], [55, 3, 1, "", "initialize"]], "powersimdata.utility.config.ServerConfig": [[55, 4, 1, "", "MODEL_DIR"], [55, 4, 1, "", "SERVER_ADDRESS"], [55, 4, 1, "", "SERVER_SSH_PORT"]], "powersimdata.utility.distance": [[55, 1, 1, "", "angular_distance"], [55, 1, 1, "", "find_closest_neighbor"], [55, 1, 1, "", "great_circle_distance"], [55, 1, 1, "", "haversine"], [55, 1, 1, "", "ll2uv"]], "powersimdata.utility.helpers": [[55, 2, 1, "", "CacheKeyBuilder"], [55, 2, 1, "", "MemoryCache"], [55, 2, 1, "", "PrintManager"], [55, 1, 1, "", "cache_key"]], "powersimdata.utility.helpers.CacheKeyBuilder": [[55, 3, 1, "", "build"]], "powersimdata.utility.helpers.MemoryCache": [[55, 3, 1, "", "get"], [55, 3, 1, "", "list_keys"], [55, 3, 1, "", "put"]], "powersimdata.utility.helpers.PrintManager": [[55, 3, 1, "", "block_print"], [55, 3, 1, "", "enable_print"]], "powersimdata.utility.server_setup": [[55, 1, 1, "", "get_blob_credential"], [55, 1, 1, "", "get_server_user"]], "powersimdata.utility.tests": [[57, 0, 0, "-", "test_distance"], [57, 0, 0, "-", "test_helpers"]], "powersimdata.utility.tests.test_distance": [[57, 1, 1, "", "test_angular_distance"], [57, 1, 1, "", "test_find_closest_neighbor"], [57, 1, 1, "", "test_ll2uv"]], "powersimdata.utility.tests.test_helpers": [[57, 1, 1, "", "test_cache_key_distinct_types"], [57, 1, 1, "", "test_cache_key_valid_types"], [57, 1, 1, "", "test_mem_cache_get_returns_copy"], [57, 1, 1, "", "test_mem_cache_put_dict"], [57, 1, 1, "", "test_mem_cache_put_version_never_changes"], [57, 1, 1, "", "test_no_collision"], [57, 1, 1, "", "test_print_is_disabled"]], "prereise": [[64, 0, 0, "-", "cli"], [70, 0, 0, "-", "gather"]], "prereise.cli": [[64, 0, 0, "-", "constants"], [67, 0, 0, "-", "download"], [64, 0, 0, "-", "helpers"], [69, 0, 0, "-", "tests"]], "prereise.cli.data_sources": [[65, 0, 0, "-", "demand_data"], [65, 0, 0, "-", "exceptions"], [65, 0, 0, "-", "hydro_data"]], "prereise.cli.data_sources.demand_data": [[65, 2, 1, "", "DemandData"]], "prereise.cli.data_sources.demand_data.DemandData": [[65, 5, 1, "", "command_name"]], "prereise.cli.data_sources.exceptions": [[65, 6, 1, "", "CommandNotSupportedError"]], "prereise.cli.data_sources.hydro_data": [[65, 2, 1, "", "HydroData"]], "prereise.cli.data_sources.hydro_data.HydroData": [[65, 5, 1, "", "command_name"]], "prereise.cli.download": [[68, 0, 0, "-", "tests"]], "prereise.cli.helpers": [[64, 1, 1, "", "add_data_source_to_download_parser"], [64, 1, 1, "", "validate_date"], [64, 1, 1, "", "validate_file_path"], [64, 1, 1, "", "validate_year"]], "prereise.cli.tests": [[69, 0, 0, "-", "test_helpers"]], "prereise.cli.tests.test_helpers": [[69, 1, 1, "", "data_source"], [69, 1, 1, "", "test_add_data_source_to_download_parser"], [69, 1, 1, "", "test_validate_date"], [69, 1, 1, "", "test_validate_date_bad_date"], [69, 1, 1, "", "test_validate_file_path"], [69, 1, 1, "", "test_validate_file_path_bad_path"], [69, 1, 1, "", "test_validate_file_path_is_direcotry"], [69, 1, 1, "", "test_validate_year"], [69, 1, 1, "", "test_validate_year_bad_year"]], "prereise.gather": [[70, 0, 0, "-", "const"], [71, 0, 0, "-", "demanddata"], [81, 0, 0, "-", "flexibilitydata"], [85, 0, 0, "-", "griddata"], [70, 0, 0, "-", "helpers"], [88, 0, 0, "-", "hydrodata"], [70, 0, 0, "-", "request_util"], [90, 0, 0, "-", "solardata"], [95, 0, 0, "-", "tests"], [96, 0, 0, "-", "winddata"]], "prereise.gather.demanddata": [[72, 0, 0, "-", "bldg_electrification"], [74, 0, 0, "-", "eia"], [76, 0, 0, "-", "nrel_efs"], [78, 0, 0, "-", "transportation_electrification"]], "prereise.gather.demanddata.bldg_electrification": [[72, 0, 0, "-", "const"], [72, 0, 0, "-", "ff2elec_profile_generator_cook"], [72, 0, 0, "-", "ff2elec_profile_generator_dhw"], [72, 0, 0, "-", "ff2elec_profile_generator_htg"], [72, 0, 0, "-", "ff_model"], [72, 0, 0, "-", "load_projection_scenario"], [73, 0, 0, "-", "tests"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook": [[72, 1, 1, "", "generate_cook_profiles"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw": [[72, 1, 1, "", "func_dhw_cop"], [72, 1, 1, "", "generate_dhw_profiles"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg": [[72, 1, 1, "", "calculate_cop"], [72, 1, 1, "", "generate_htg_profiles"], [72, 1, 1, "", "htg_to_cop"]], "prereise.gather.demanddata.bldg_electrification.ff_model": [[72, 1, 1, "", "adjust_puma_slopes"], [72, 1, 1, "", "calculate_r2"], [72, 1, 1, "", "calculate_state_slopes"]], "prereise.gather.demanddata.bldg_electrification.load_projection_scenario": [[72, 2, 1, "", "LoadProjectionScenario"]], "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario": [[72, 3, 1, "", "compare_hp_heat_type"], [72, 3, 1, "", "floor_area_growth"], [72, 3, 1, "", "floor_area_growth_type"], [72, 3, 1, "", "frac_cook_ff2hp"], [72, 3, 1, "", "frac_cool_growth"], [72, 3, 1, "", "frac_cooling_eff_change"], [72, 3, 1, "", "frac_dhw_ff2hp"], [72, 3, 1, "", "frac_hp_growth"], [72, 3, 1, "", "frac_htg_ff2hp"], [72, 3, 1, "", "frac_resist_growth"]], "prereise.gather.demanddata.bldg_electrification.tests": [[73, 0, 0, "-", "test_ff2elec_profile_generator_htg"]], "prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg": [[73, 1, 1, "", "test_generate_profiles_argument_type"]], "prereise.gather.demanddata.eia": [[74, 0, 0, "-", "clean_data"], [74, 0, 0, "-", "get_eia_data"], [74, 0, 0, "-", "map_ba"], [75, 0, 0, "-", "tests"]], "prereise.gather.demanddata.eia.clean_data": [[74, 1, 1, "", "fill_ba_demand"], [74, 1, 1, "", "fix_dataframe_outliers"], [74, 1, 1, "", "replace_with_shifted_demand"], [74, 1, 1, "", "slope_interpolate"]], "prereise.gather.demanddata.eia.get_eia_data": [[74, 2, 1, "", "EIAgov"], [74, 1, 1, "", "from_download"], [74, 1, 1, "", "from_excel"], [74, 1, 1, "", "get_ba_demand"]], "prereise.gather.demanddata.eia.get_eia_data.EIAgov": [[74, 3, 1, "", "get_data"], [74, 3, 1, "", "raw"]], "prereise.gather.demanddata.eia.map_ba": [[74, 1, 1, "", "aggregate_ba_demand"], [74, 1, 1, "", "get_demand_in_loadzone"], [74, 1, 1, "", "map_buses_to_ba"], [74, 1, 1, "", "map_buses_to_county"]], "prereise.gather.demanddata.eia.tests": [[75, 0, 0, "-", "test_clean_data"], [75, 0, 0, "-", "test_get_eia_data"], [75, 0, 0, "-", "test_map_ba"]], "prereise.gather.demanddata.eia.tests.test_clean_data": [[75, 1, 1, "", "random"], [75, 1, 1, "", "test_slope_interpolate"]], "prereise.gather.demanddata.eia.tests.test_get_eia_data": [[75, 1, 1, "", "test_eia_download"], [75, 1, 1, "", "test_from_excel"]], "prereise.gather.demanddata.eia.tests.test_map_ba": [[75, 1, 1, "", "create_ba_to_region_dataframe"], [75, 1, 1, "", "create_loadzone_dataframe"], [75, 1, 1, "", "test_aggregate_ba_demand_sums_first_columns_pairs"], [75, 1, 1, "", "test_aggregate_ba_demand_sums_first_three_columns"], [75, 1, 1, "", "test_get_demand_in_loadzone_case"], [75, 1, 1, "", "test_get_demand_in_loadzone_has_equal_total_demand"], [75, 1, 1, "", "test_map_buses_to_ba"], [75, 1, 1, "", "test_map_buses_to_county"]], "prereise.gather.demanddata.nrel_efs": [[76, 0, 0, "-", "aggregate_demand"], [76, 0, 0, "-", "get_efs_annual_data"], [76, 0, 0, "-", "get_efs_data"], [76, 0, 0, "-", "map_states"], [77, 0, 0, "-", "tests"]], "prereise.gather.demanddata.nrel_efs.aggregate_demand": [[76, 1, 1, "", "access_non_efs_demand"], [76, 1, 1, "", "combine_efs_demand"]], "prereise.gather.demanddata.nrel_efs.get_efs_annual_data": [[76, 1, 1, "", "get_efs_annual_data"]], "prereise.gather.demanddata.nrel_efs.get_efs_data": [[76, 1, 1, "", "account_for_leap_year"], [76, 1, 1, "", "download_demand_data"], [76, 1, 1, "", "download_flexibility_data"], [76, 1, 1, "", "partition_demand_by_sector"], [76, 1, 1, "", "partition_flexibility_by_sector"]], "prereise.gather.demanddata.nrel_efs.map_states": [[76, 1, 1, "", "decompose_demand_profile_by_state_to_loadzone"], [76, 1, 1, "", "shift_local_time_by_loadzone_to_utc"]], "prereise.gather.demanddata.nrel_efs.tests": [[77, 0, 0, "-", "test_aggregate_demand"], [77, 0, 0, "-", "test_get_efs_data"], [77, 0, 0, "-", "test_map_states"]], "prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand": [[77, 1, 1, "", "test_combine_efs_demand"]], "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data": [[77, 1, 1, "", "test_account_for_leap_year"], [77, 1, 1, "", "test_check_electrification_scenarios_for_download"], [77, 1, 1, "", "test_check_path"], [77, 1, 1, "", "test_check_technology_advancements_for_download"], [77, 1, 1, "", "test_download_data"], [77, 1, 1, "", "test_extract_data"], [77, 1, 1, "", "test_partition_demand_by_sector"], [77, 1, 1, "", "test_partition_flexibility_by_sector"]], "prereise.gather.demanddata.nrel_efs.tests.test_map_states": [[77, 1, 1, "", "test_decompose_demand_profile_by_state_to_loadzone"], [77, 1, 1, "", "test_shift_local_time_by_loadzone_to_utc"]], "prereise.gather.demanddata.transportation_electrification": [[78, 0, 0, "-", "charging_optimization"], [78, 0, 0, "-", "const"], [79, 0, 0, "-", "data"], [78, 0, 0, "-", "data_helper"], [78, 0, 0, "-", "data_process"], [78, 0, 0, "-", "dwelling"], [78, 0, 0, "-", "generate_BEV_vehicle_profiles"], [78, 0, 0, "-", "immediate"], [78, 0, 0, "-", "immediate_charging_HDV"], [78, 0, 0, "-", "smart_charging"], [80, 0, 0, "-", "tests"]], "prereise.gather.demanddata.transportation_electrification.charging_optimization": [[78, 1, 1, "", "calculate_optimization"], [78, 1, 1, "", "get_constraints"]], "prereise.gather.demanddata.transportation_electrification.data_helper": [[78, 1, 1, "", "generate_daily_weighting"], [78, 1, 1, "", "get_data_day"], [78, 1, 1, "", "get_input_day"], [78, 1, 1, "", "get_kwhmi"], [78, 1, 1, "", "get_model_year_dti"], [78, 1, 1, "", "get_total_daily_vmt"], [78, 1, 1, "", "load_data"], [78, 1, 1, "", "load_hdv_data"], [78, 1, 1, "", "load_rural_scaling_factor"], [78, 1, 1, "", "load_urbanized_scaling_factor"], [78, 1, 1, "", "remove_ldt"], [78, 1, 1, "", "remove_ldv"], [78, 1, 1, "", "update_if_weekend"]], "prereise.gather.demanddata.transportation_electrification.data_process": [[78, 1, 1, "", "calculate_dwell_time"], [78, 1, 1, "", "data_filtering"]], "prereise.gather.demanddata.transportation_electrification.dwelling": [[78, 1, 1, "", "get_energy_limit"], [78, 1, 1, "", "get_rates"], [78, 1, 1, "", "get_segment"]], "prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles": [[78, 1, 1, "", "generate_bev_vehicle_profiles"]], "prereise.gather.demanddata.transportation_electrification.immediate": [[78, 1, 1, "", "adjust_bev"], [78, 1, 1, "", "apply_annual_scaling"], [78, 1, 1, "", "apply_daily_adjustments"], [78, 1, 1, "", "calculate_charging"], [78, 1, 1, "", "immediate_charging"], [78, 1, 1, "", "resample_daily_charging"]], "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV": [[78, 1, 1, "", "calculate_charging"], [78, 1, 1, "", "calculate_charging_helper"], [78, 1, 1, "", "immediate_hdv_charging"], [78, 1, 1, "", "resample_daily_charging"]], "prereise.gather.demanddata.transportation_electrification.smart_charging": [[78, 1, 1, "", "hdv_use_all_data_rows"], [78, 1, 1, "", "ldv_weekday_weekend_check"], [78, 1, 1, "", "smart_charging"]], "prereise.gather.demanddata.transportation_electrification.tests": [[80, 0, 0, "-", "test_dwelling"], [80, 0, 0, "-", "test_generate_BEV_vehicle_profiles"], [80, 0, 0, "-", "test_immediate"], [80, 0, 0, "-", "test_immediate_charging_integration"], [80, 0, 0, "-", "test_smart_charging_integration"]], "prereise.gather.demanddata.transportation_electrification.tests.test_dwelling": [[80, 1, 1, "", "test_energy_limit"], [80, 1, 1, "", "test_get_segment"]], "prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles": [[80, 1, 1, "", "test_ldv_immediate_runs"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate": [[80, 1, 1, "", "test_apply_annual_scaling"], [80, 1, 1, "", "test_apply_daily_adjustments"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration": [[80, 1, 1, "", "test_immediate_charging_hdv"], [80, 1, 1, "", "test_immediate_charging_hdv_1day"], [80, 1, 1, "", "test_immediate_charging_ldv_2days"], [80, 1, 1, "", "test_immediate_charging_mdv"], [80, 1, 1, "", "test_immediate_charging_mdv_1day"], [80, 1, 1, "", "test_immediate_charging_region1"]], "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration": [[80, 1, 1, "", "test_smart_charging_hdv_2days"], [80, 1, 1, "", "test_smart_charging_ldv_2days"], [80, 1, 1, "", "test_smart_charging_mdv_2days"]], "prereise.gather.flexibilitydata": [[82, 0, 0, "-", "doe"]], "prereise.gather.flexibilitydata.doe": [[82, 0, 0, "-", "batch_process"], [82, 0, 0, "-", "doe_data"], [83, 0, 0, "-", "examples"], [82, 0, 0, "-", "geo_data"], [84, 0, 0, "-", "tests"]], "prereise.gather.flexibilitydata.doe.batch_process": [[82, 1, 1, "", "collect_all_raw_data"], [82, 1, 1, "", "create_geo_cache_files"], [82, 1, 1, "", "get_cache_from_blob"]], "prereise.gather.flexibilitydata.doe.doe_data": [[82, 1, 1, "", "aggregate_doe"], [82, 1, 1, "", "cleanup_directory"], [82, 1, 1, "", "download_doe"]], "prereise.gather.flexibilitydata.doe.geo_data": [[82, 1, 1, "", "eiaid_to_fips"], [82, 1, 1, "", "eiaid_to_zip"], [82, 1, 1, "", "fips_to_eiaid"], [82, 1, 1, "", "fips_zip_conversion"], [82, 1, 1, "", "get_census_data"], [82, 1, 1, "", "get_county_fips_data"], [82, 1, 1, "", "get_crosswalk_data"], [82, 1, 1, "", "get_fips_population"], [82, 1, 1, "", "get_lse_region_data"], [82, 1, 1, "", "get_zip_population"], [82, 1, 1, "", "zip_to_eiaid"]], "prereise.gather.flexibilitydata.doe.tests": [[84, 0, 0, "-", "test_geo_data"]], "prereise.gather.flexibilitydata.doe.tests.test_geo_data": [[84, 1, 1, "", "test_batch_download"], [84, 1, 1, "", "test_cache_production"]], "prereise.gather.griddata": [[86, 0, 0, "-", "transmission"]], "prereise.gather.griddata.transmission": [[86, 0, 0, "-", "const"], [86, 0, 0, "-", "geometry"], [86, 0, 0, "-", "helpers"], [87, 0, 0, "-", "tests"]], "prereise.gather.griddata.transmission.geometry": [[86, 2, 1, "", "Conductor"], [86, 2, 1, "", "ConductorBundle"], [86, 2, 1, "", "Line"], [86, 2, 1, "", "PhaseLocations"], [86, 2, 1, "", "Tower"]], "prereise.gather.griddata.transmission.geometry.Conductor": [[86, 4, 1, "", "area"], [86, 4, 1, "", "current_limit"], [86, 4, 1, "", "gmr"], [86, 4, 1, "", "material"], [86, 4, 1, "", "name"], [86, 4, 1, "", "permeability"], [86, 4, 1, "", "radius"], [86, 4, 1, "", "resistance_per_km"]], "prereise.gather.griddata.transmission.geometry.ConductorBundle": [[86, 3, 1, "", "calculate_equivalent_spacing"], [86, 3, 1, "", "calculate_equivalent_spacing_circular"], [86, 3, 1, "", "calculate_equivalent_spacing_flat"], [86, 4, 1, "", "conductor"], [86, 4, 1, "", "current_limit"], [86, 4, 1, "", "layout"], [86, 4, 1, "", "n"], [86, 4, 1, "", "resistance_per_km"], [86, 4, 1, "", "spacing"], [86, 4, 1, "", "spacing_C"], [86, 4, 1, "", "spacing_L"]], "prereise.gather.griddata.transmission.geometry.Line": [[86, 4, 1, "", "freq"], [86, 4, 1, "", "length"], [86, 4, 1, "", "power_rating"], [86, 4, 1, "", "propogation_constant_per_km"], [86, 4, 1, "", "series_impedance"], [86, 4, 1, "", "series_impedance_per_km"], [86, 4, 1, "", "shunt_admittance"], [86, 4, 1, "", "shunt_admittance_per_km"], [86, 4, 1, "", "stability_rating"], [86, 4, 1, "", "surge_impedance"], [86, 4, 1, "", "thermal_rating"], [86, 4, 1, "", "tower"], [86, 4, 1, "", "voltage"]], "prereise.gather.griddata.transmission.geometry.PhaseLocations": [[86, 4, 1, "", "a"], [86, 4, 1, "", "b"], [86, 4, 1, "", "c"], [86, 3, 1, "", "calculate_distances"], [86, 3, 1, "", "calculate_multi_circuit_distances"], [86, 3, 1, "", "calculate_single_circuit_distances"], [86, 4, 1, "", "circuits"], [86, 4, 1, "", "equivalent_distance"], [86, 4, 1, "", "equivalent_height"], [86, 4, 1, "", "equivalent_reflected_distance"], [86, 4, 1, "", "phase_self_distances"]], "prereise.gather.griddata.transmission.geometry.Tower": [[86, 4, 1, "", "bundle"], [86, 3, 1, "", "calculate_inductance_per_km"], [86, 3, 1, "", "calculate_shunt_capacitance_per_km"], [86, 4, 1, "", "capacitance"], [86, 4, 1, "", "inductance"], [86, 4, 1, "", "locations"], [86, 4, 1, "", "phase_current_limit"], [86, 4, 1, "", "resistance"]], "prereise.gather.griddata.transmission.helpers": [[86, 2, 1, "", "DataclassWithValidation"], [86, 1, 1, "", "approximate_loadability"], [86, 1, 1, "", "calculate_z_base"], [86, 1, 1, "", "get_standard_conductors"], [86, 1, 1, "", "translate_to_per_unit"]], "prereise.gather.griddata.transmission.helpers.DataclassWithValidation": [[86, 3, 1, "", "validate_input_types"]], "prereise.gather.griddata.transmission.tests": [[87, 0, 0, "-", "test_geometry"], [87, 0, 0, "-", "test_helpers"]], "prereise.gather.griddata.transmission.tests.test_geometry": [[87, 1, 1, "", "test_conductor_bundle"], [87, 1, 1, "", "test_conductor_by_name"], [87, 1, 1, "", "test_conductor_by_parameter_values"], [87, 1, 1, "", "test_conductor_name_and_parameters"], [87, 1, 1, "", "test_line_long"], [87, 1, 1, "", "test_line_short"], [87, 1, 1, "", "test_tower_double_circuit"], [87, 1, 1, "", "test_tower_single_circuit"]], "prereise.gather.griddata.transmission.tests.test_helpers": [[87, 1, 1, "", "custom_dataclass"], [87, 1, 1, "", "test_DataclassWithValidation_bad_inputs"], [87, 1, 1, "", "test_DataclassWithValidation_not_a_dataclass"], [87, 1, 1, "", "test_DataclassWithValidation_success"], [87, 1, 1, "", "test_calculate_z_base"], [87, 1, 1, "", "test_translate_to_per_unit"]], "prereise.gather.helpers": [[70, 1, 1, "", "get_monthly_net_generation"], [70, 1, 1, "", "trim_eia_form_923"]], "prereise.gather.hydrodata": [[89, 0, 0, "-", "eia"]], "prereise.gather.hydrodata.eia": [[89, 0, 0, "-", "decompose_profile"], [89, 0, 0, "-", "helpers"], [89, 0, 0, "-", "interpolate_capacity_factors"], [89, 0, 0, "-", "net_demand"]], "prereise.gather.hydrodata.eia.decompose_profile": [[89, 1, 1, "", "get_normalized_profile"], [89, 1, 1, "", "get_profile_by_plant"], [89, 1, 1, "", "get_profile_by_state"]], "prereise.gather.hydrodata.eia.helpers": [[89, 1, 1, "", "scale_profile"]], "prereise.gather.hydrodata.eia.interpolate_capacity_factors": [[89, 1, 1, "", "get_profile"]], "prereise.gather.hydrodata.eia.net_demand": [[89, 1, 1, "", "get_net_demand_profile"]], "prereise.gather.request_util": [[70, 2, 1, "", "RateLimit"], [70, 6, 1, "", "TransientError"], [70, 1, 1, "", "rate_limit"], [70, 1, 1, "", "retry"]], "prereise.gather.request_util.RateLimit": [[70, 3, 1, "", "invoke"]], "prereise.gather.solardata": [[91, 0, 0, "-", "ga_wind"], [90, 0, 0, "-", "helpers"], [92, 0, 0, "-", "nsrdb"], [90, 0, 0, "-", "pv_tracking"], [94, 0, 0, "-", "tests"]], "prereise.gather.solardata.ga_wind": [[91, 0, 0, "-", "helpers"]], "prereise.gather.solardata.ga_wind.helpers": [[91, 1, 1, "", "ll2ij"]], "prereise.gather.solardata.helpers": [[90, 1, 1, "", "get_plant_id_unique_location"], [90, 1, 1, "", "to_reise"]], "prereise.gather.solardata.nsrdb": [[92, 0, 0, "-", "naive"], [92, 0, 0, "-", "nrel_api"], [93, 0, 0, "-", "tests"]], "prereise.gather.solardata.nsrdb.naive": [[92, 1, 1, "", "retrieve_data"]], "prereise.gather.solardata.nsrdb.nrel_api": [[92, 2, 1, "", "NrelApi"], [92, 2, 1, "", "Psm3Data"]], "prereise.gather.solardata.nsrdb.nrel_api.NrelApi": [[92, 3, 1, "", "get_psm3_at"]], "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data": [[92, 4, 1, "", "allowed_attrs"], [92, 3, 1, "", "check_attrs"], [92, 4, 1, "", "data_resource"], [92, 4, 1, "", "elevation"], [92, 4, 1, "", "lat"], [92, 4, 1, "", "lon"], [92, 4, 1, "", "rename_attrs"], [92, 3, 1, "", "to_dict"], [92, 4, 1, "", "tz"]], "prereise.gather.solardata.nsrdb.tests": [[93, 0, 0, "-", "test_nrel_api"]], "prereise.gather.solardata.nsrdb.tests.test_nrel_api": [[93, 1, 1, "", "test_check_attrs"], [93, 1, 1, "", "test_psm3_to_dict"]], "prereise.gather.solardata.pv_tracking": [[90, 1, 1, "", "get_pv_tracking_data"], [90, 1, 1, "", "get_pv_tracking_ratio_state"]], "prereise.gather.solardata.tests": [[94, 0, 0, "-", "mock_pv_info"], [94, 0, 0, "-", "test_helpers"], [94, 0, 0, "-", "test_pv_tracking"]], "prereise.gather.solardata.tests.mock_pv_info": [[94, 1, 1, "", "create_mock_pv_info"]], "prereise.gather.solardata.tests.test_helpers": [[94, 1, 1, "", "test_plant_id_unique_location"], [94, 1, 1, "", "test_plant_id_unique_location_type"], [94, 1, 1, "", "test_plant_id_unique_location_value"], [94, 1, 1, "", "test_to_reise"], [94, 1, 1, "", "test_to_reise_type"], [94, 1, 1, "", "test_to_reise_value"]], "prereise.gather.solardata.tests.test_pv_tracking": [[94, 1, 1, "", "test_ratio_state_with_multiple_plants_and_tracking_systems"], [94, 1, 1, "", "test_ratio_state_with_single_plant_and_multiple_tracking"], [94, 1, 1, "", "test_ratio_state_with_single_plant_and_unique_tracking"], [94, 1, 1, "", "test_state_exists"], [94, 1, 1, "", "test_state_type"], [94, 1, 1, "", "test_state_with_solar_return_3ple"], [94, 1, 1, "", "test_state_without_no_solar_return_none"], [94, 1, 1, "", "test_sum_ratio_state_with_multiple_plants_and_tracking_systems"], [94, 1, 1, "", "test_sum_ratio_state_with_single_plant_and_multiple_tracking_systems"], [94, 1, 1, "", "test_sum_ratio_state_with_single_plant_and_tracking_system"]], "prereise.gather.tests": [[95, 0, 0, "-", "mock_generation"], [95, 0, 0, "-", "test_helpers"], [95, 0, 0, "-", "test_rate_limit"], [95, 0, 0, "-", "test_retry"]], "prereise.gather.tests.mock_generation": [[95, 1, 1, "", "create_mock_generation_data_frame"]], "prereise.gather.tests.test_helpers": [[95, 1, 1, "", "test_get_monthly_net_generation"], [95, 1, 1, "", "test_get_monthly_net_generation_argument_type"], [95, 1, 1, "", "test_get_monthly_net_generation_argument_value"]], "prereise.gather.tests.test_rate_limit": [[95, 2, 1, "", "SleepCounter"], [95, 1, 1, "", "sleepless"], [95, 1, 1, "", "test_decorator_with_default"], [95, 1, 1, "", "test_decorator_with_limit"], [95, 1, 1, "", "test_default_no_limit"], [95, 1, 1, "", "test_sleep_occurrs"]], "prereise.gather.tests.test_rate_limit.SleepCounter": [[95, 3, 1, "", "sleep"], [95, 3, 1, "", "time"]], "prereise.gather.tests.test_retry": [[95, 6, 1, "", "CustomError"], [95, 1, 1, "", "test_counter_attribute"], [95, 1, 1, "", "test_decorate_without_call"], [95, 1, 1, "", "test_max_times_reached"], [95, 1, 1, "", "test_raises_after_max_attempts"], [95, 1, 1, "", "test_return_value"], [95, 1, 1, "", "test_unhandled_exception"]], "prereise.gather.winddata": [[96, 0, 0, "-", "const"], [97, 0, 0, "-", "hrrr"], [96, 0, 0, "-", "impute"], [96, 0, 0, "-", "power_curves"], [99, 0, 0, "-", "rap"]], "prereise.gather.winddata.hrrr": [[97, 0, 0, "-", "calculations"], [97, 0, 0, "-", "constants"], [97, 0, 0, "-", "downloader"], [97, 0, 0, "-", "grib"], [97, 0, 0, "-", "helpers"], [97, 0, 0, "-", "hrrr"], [97, 0, 0, "-", "hrrr_api"], [98, 0, 0, "-", "tests"]], "prereise.gather.winddata.hrrr.calculations": [[97, 1, 1, "", "calculate_pout_blended"], [97, 1, 1, "", "calculate_pout_individual"], [97, 1, 1, "", "extract_wind_speed"], [97, 1, 1, "", "find_closest_wind_grids"], [97, 1, 1, "", "get_wind_data_lat_long"]], "prereise.gather.winddata.hrrr.downloader": [[97, 2, 1, "", "Downloader"]], "prereise.gather.winddata.hrrr.downloader.Downloader": [[97, 3, 1, "", "download"]], "prereise.gather.winddata.hrrr.grib": [[97, 2, 1, "", "GribRecordInfo"]], "prereise.gather.winddata.hrrr.grib.GribRecordInfo": [[97, 4, 1, "", "beginning_byte"], [97, 3, 1, "", "byte_range_header_string"], [97, 4, 1, "", "ending_byte"], [97, 4, 1, "", "forecast"], [97, 3, 1, "", "from_string"], [97, 3, 1, "", "full_file"], [97, 3, 1, "", "generate_grib_record_information_list"], [97, 4, 1, "", "initialization_date"], [97, 4, 1, "", "level"], [97, 4, 1, "", "message_number"], [97, 4, 1, "", "variable"]], "prereise.gather.winddata.hrrr.helpers": [[97, 1, 1, "", "formatted_filename"], [97, 1, 1, "", "get_indices_that_contain_selector"]], "prereise.gather.winddata.hrrr.hrrr": [[97, 1, 1, "", "retrieve_data"]], "prereise.gather.winddata.hrrr.hrrr_api": [[97, 2, 1, "", "HrrrApi"]], "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi": [[97, 4, 1, "", "U_COMPONENT_FILTER"], [97, 4, 1, "", "V_COMPONENT_FILTER"], [97, 3, 1, "", "download_meteorological_data"], [97, 3, 1, "", "download_wind_data"]], "prereise.gather.winddata.hrrr.tests": [[98, 0, 0, "-", "test_calculations"], [98, 0, 0, "-", "test_grib"], [98, 0, 0, "-", "test_helpers"], [98, 0, 0, "-", "test_hrrr_api"]], "prereise.gather.winddata.hrrr.tests.test_calculations": [[98, 1, 1, "", "test_calculate_pout_blended"], [98, 1, 1, "", "test_find_closest_wind_grids"]], "prereise.gather.winddata.hrrr.tests.test_grib": [[98, 1, 1, "", "test_grib_info_byte_range_header_string"], [98, 1, 1, "", "test_grib_info_byte_range_header_string_no_end_byte"], [98, 1, 1, "", "test_grib_info_from_string"], [98, 1, 1, "", "test_grib_info_from_string_with_next_string"], [98, 1, 1, "", "test_grib_info_generate_grib_record_information_list"]], "prereise.gather.winddata.hrrr.tests.test_helpers": [[98, 1, 1, "", "test_get_indices_that_contain_selector"]], "prereise.gather.winddata.hrrr.tests.test_hrrr_api": [[98, 1, 1, "", "filename_url_iter_mock"], [98, 1, 1, "", "hrrr_api"], [98, 1, 1, "", "open_mock"], [98, 1, 1, "", "requests_mock"], [98, 1, 1, "", "test_download_meteorological_data_no_selectors"], [98, 1, 1, "", "test_download_meteorological_data_with_selectors"], [98, 1, 1, "", "test_download_wind_data"]], "prereise.gather.winddata.impute": [[96, 1, 1, "", "gaussian"], [96, 1, 1, "", "linear"], [96, 1, 1, "", "simple"]], "prereise.gather.winddata.power_curves": [[96, 1, 1, "", "build_state_curves"], [96, 1, 1, "", "get_form_860"], [96, 1, 1, "", "get_power"], [96, 1, 1, "", "get_state_power_curves"], [96, 1, 1, "", "get_turbine_power_curves"], [96, 1, 1, "", "shift_turbine_curve"]], "prereise.gather.winddata.rap": [[99, 0, 0, "-", "helpers"], [99, 0, 0, "-", "noaa_api"], [99, 0, 0, "-", "rap"], [100, 0, 0, "-", "tests"]], "prereise.gather.winddata.rap.helpers": [[99, 1, 1, "", "to_reise"]], "prereise.gather.winddata.rap.noaa_api": [[99, 2, 1, "", "NoaaApi"]], "prereise.gather.winddata.rap.noaa_api.NoaaApi": [[99, 4, 1, "", "base_url"], [99, 3, 1, "", "build_url"], [99, 4, 1, "", "fallback_url"], [99, 3, 1, "", "get_hourly_data"], [99, 3, 1, "", "get_path_list"], [99, 3, 1, "", "iter_hours"], [99, 4, 1, "", "var_u"], [99, 4, 1, "", "var_v"]], "prereise.gather.winddata.rap.rap": [[99, 1, 1, "", "retrieve_data"]], "prereise.gather.winddata.rap.tests": [[100, 0, 0, "-", "test_noaa_api"]], "prereise.gather.winddata.rap.tests.test_noaa_api": [[100, 1, 1, "", "noaa"], [100, 1, 1, "", "test_box_query_set"], [100, 1, 1, "", "test_box_validation"], [100, 1, 1, "", "test_get_url_list"], [100, 1, 1, "", "test_url_fallback_default"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"code": [0, 2, 3], "conduct": 0, "our": [0, 7, 122, 125], "pledg": 0, "standard": [0, 2], "respons": 0, "scope": 0, "what": [0, 2, 6], "do": [0, 6], "case": 0, "violat": 0, "playbook": 0, "attribut": 0, "mentor": 1, "project": [1, 112], "idea": 1, "get": [1, 126], "touch": 1, "why": 2, "i": 2, "us": [2, 20, 22, 127], "exist": 2, "prefer": 2, "": [2, 6], "unit": 2, "test": [2, 6, 11, 12, 14, 17, 25, 29, 31, 32, 34, 37, 40, 42, 47, 53, 54, 57, 66, 68, 69, 73, 75, 77, 80, 84, 87, 93, 94, 95, 98, 100], "make": 2, "hard": 2, "problem": 2, "non": 2, "determinist": 2, "factor": [2, 109, 112], "option": [2, 58, 60], "1": 2, "fix": 2, "depend": [2, 128], "inject": 2, "2": 2, "higher": 2, "order": 2, "function": [2, 58, 60, 121, 122], "side": 2, "effect": 2, "global": 2, "mutabl": 2, "state": [2, 52], "static": 2, "properti": 2, "field": 2, "singleton": 2, "how": [2, 3, 6, 7, 127], "better": 2, "contribut": 3, "guid": [3, 4, 5, 6, 127], "bug": 3, "report": 3, "featur": [3, 6], "request": [3, 126], "data": [3, 15, 19, 20, 21, 60, 61, 79, 105, 106, 112], "intak": 3, "procedur": 3, "develop": 3, "your": [3, 126], "format": [3, 5], "document": 3, "commun": [3, 7], "docstr": 4, "import": 5, "statement": 5, "path": 5, "Be": 5, "specif": 5, "philosophi": 6, "minimum": 6, "requir": [6, 18, 58, 60, 122, 124, 128], "benefit": 6, "team": 6, "we": 6, "work": [6, 7, 126], "prerequisit": 6, "write": 6, "exampl": [6, 58, 60, 83, 112], "let": 6, "start": 6, "easi": 6, "mock": 6, "object": [6, 59, 60, 121, 122], "facilit": 7, "energi": 7, "transit": 7, "mission": 7, "channel": 7, "usag": [18, 122, 125], "analysi": [19, 20, 60, 62], "scenario": [19, 20, 21, 22, 52, 53, 60, 61, 62, 127], "transmiss": [13, 14, 19, 20, 21, 27, 33, 34, 60, 62, 86, 87], "gener": [10, 11, 19, 20, 21, 27, 28, 29, 60, 62, 112], "capac": [10, 19, 20, 21, 58, 60, 62, 109], "emiss": [10, 19, 20, 21, 45], "curtail": [10, 19, 20, 21, 28], "postreis": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20], "plot": [16, 17, 20, 21], "singl": [20, 21], "price": [20, 21, 60, 62], "comparison": [20, 21], "powersimdata": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60], "packag": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "subpackag": [8, 9, 10, 13, 16, 23, 24, 26, 28, 30, 33, 35, 36, 39, 43, 44, 46, 52, 55, 63, 64, 65, 67, 70, 71, 72, 74, 76, 78, 81, 82, 85, 86, 88, 90, 92, 96, 97, 99], "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "content": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "data_access": [24, 25], "submodul": [9, 10, 11, 12, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "context": 24, "csv_store": 24, "execute_list": 24, "execute_t": 24, "fs_helper": 24, "launcher": 24, "scenario_list": 24, "scenario_t": 24, "sql_store": 24, "ssh_f": 24, "test_data_access": 25, "test_execute_csv": 25, "test_launch": 25, "test_scenario_csv": 25, "design": [26, 27, 28, 29, 30, 31, 32, 33, 34, 60, 62], "mimic_grid": 26, "scenario_info": 26, "compar": [27, 60, 62], "helper": [27, 35, 36, 39, 43, 55, 64, 70, 72, 86, 89, 90, 91, 97, 99], "clean_capacity_sc": 28, "cost_curv": 28, "test_clean_capacity_sc": 29, "test_cost_curv": 29, "test_curtail": [11, 29], "invest": [30, 31], "const": [30, 38, 70, 72, 78, 86, 96], "create_mapping_fil": 30, "inflat": 30, "investment_cost": 30, "todo": [30, 74], "test_investment_cost": 31, "test_scenario_info": 32, "mwmile": 33, "statelin": 33, "substat": 33, "upgrad": [33, 60, 62], "zone": [33, 46], "test_mwmil": 34, "test_statelin": 34, "test_subst": 34, "test_upgrad": 34, "input": [35, 36, 37, 38, 39, 40, 41, 42, 58, 60, 105, 112], "abstract_grid": 35, "change_t": 35, "check": [16, 35, 52], "configur": 35, "electrified_demand_input": 35, "expansion_candid": 35, "grid": [35, 59, 60, 117], "input_bas": 35, "input_data": 35, "profile_input": 35, "transform_demand": 35, "transform_grid": 35, "transform_profil": 35, "chang": [36, 37, 58, 60], "bu": 36, "demand_flex": 36, "electrif": [36, 105, 112], "plant": [36, 45], "storag": [36, 45], "test_add_electrif": 37, "grid_const": 38, "pypsa_const": 38, "convert": [39, 40], "csv_to_grid": 39, "pypsa_to_grid": 39, "pypsa_to_profil": 39, "test_pypsa_to_grid": 40, "test_pypsa_to_profil": 40, "export": 41, "export_to_pypsa": 41, "export_to_reis": 41, "test_change_t": 42, "test_check": [17, 42, 53], "test_configur": 42, "test_expansion_candid": 42, "test_grid": 42, "test_help": [42, 57, 69, 87, 94, 95, 98], "test_input_data": 42, "test_profile_input": 42, "test_transform_demand": 42, "test_transform_grid": 42, "test_transform_profil": 42, "network": [43, 44, 45, 46, 47, 48, 49, 50], "csv_reader": 43, "model": [43, 44, 48, 49, 50, 112, 115], "zenodo": 43, "constant": [44, 45, 46, 47, 64, 97], "carrier": 45, "color": [16, 45], "effici": [45, 112], "label": 45, "resourc": [45, 112], "region": [46, 47], "divis": [46, 112], "geographi": 46, "interconnect": 46, "loadzon": 46, "map": 46, "test_zon": 47, "europe_tub": 48, "hifld": 49, "usa_tamu": 50, "output": [51, 60, 61, 112, 115, 119], "output_data": 51, "analyz": [9, 10, 11, 12, 13, 14, 52, 60, 62], "creat": [52, 58, 60, 61], "delet": [52, 60, 61], "execut": 52, "move": [52, 60, 61], "readi": 52, "test_creat": 53, "test_scenario": 53, "mock_analyz": 54, "mock_build": 54, "mock_change_t": 54, "mock_context": 54, "mock_grid": 54, "mock_profile_input": 54, "mock_scenario": 54, "mock_scenario_info": 54, "test_mock": 54, "util": [13, 55, 56, 57], "config": 55, "distanc": 55, "server_setup": 55, "templat": 56, "test_dist": 57, "plan": [58, 60], "framework": [58, 60, 61], "call": [58, 60, 105, 112], "tabl": [58, 60], "from": [58, 60, 112, 115, 119], "result": [58, 60, 122, 125], "run": [60, 61, 122, 125, 127], "extract": [60, 61, 122, 125], "retriev": [60, 61], "backup": [60, 61], "disk": [60, 61], "cumul": [60, 62], "quantiti": [60, 62], "classifi": [60, 62], "access": [60, 62], "save": [60, 62], "relev": [60, 62], "suppli": [60, 62], "inform": [60, 62], "visual": [60, 62], "curv": [60, 62], "cost": [10, 60, 62], "paramet": [60, 62, 121, 122], "eastern": [101, 108, 112], "texa": [102, 110, 112], "western": [103, 111, 112], "user": [105, 112, 126], "manual": [105, 112], "pre": [105, 112], "process": [105, 112], "main": [105, 112], "transport": [105, 112], "method": [105, 112], "spatial": [105, 112], "translat": [105, 112], "mechan": [105, 112], "between": [105, 112], "ani": [105, 112], "two": [105, 112], "differ": [105, 112], "resolut": [105, 112, 118], "sourc": [106, 112], "summari": [107, 112], "prereis": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 112], "comment": 112, "demand": [9, 112], "histor": 112, "capabl": 112, "methodologi": 112, "ev": 112, "charg": 112, "flowchart": 112, "immedi": [78, 112], "smart": 112, "vehicl": 112, "travel": 112, "pattern": 112, "light": 112, "duti": 112, "censu": 112, "column": 112, "modifi": 112, "nht": 112, "trip": 112, "dataset": [112, 117], "count": 112, "categori": 112, "dai": 112, "week": 112, "medium": 112, "heavi": 112, "mdv": 112, "hdv": 112, "annual": 112, "mile": 112, "electr": 112, "urban": 112, "rural": 112, "area": 112, "monthli": 112, "daili": 112, "weight": 112, "weekdai": 112, "versu": 112, "weekend": 112, "month": 112, "bev": 112, "vmt": 112, "scale": 112, "v": 112, "fuel": 112, "default": 112, "economi": 112, "year": 112, "optim": 112, "algorithm": 112, "adopt": 112, "rate": 112, "nrel": 112, "futur": 112, "studi": 112, "flexibl": 112, "hydro": 112, "renew": 112, "solar": [112, 115, 116], "The": [112, 116], "nation": [112, 116, 117], "radiat": [112, 116], "databas": [112, 116], "irradi": [112, 115], "power": [112, 115, 119], "naiv": [92, 112, 115], "system": [112, 115, 122, 124], "advis": [112, 115], "wind": [112, 117, 119], "rapid": [112, 118, 120], "refresh": [112, 118, 120], "high": [112, 118], "speed": [112, 119], "command": [112, 113], "line": [112, 113], "interfac": [112, 113], "notebook": [112, 114], "bibliographi": 112, "atmospher": 117, "integr": 117, "formul": [121, 122], "set": [121, 122], "subset": [121, 122], "variabl": [121, 122], "constraint": [121, 122], "reis": [122, 123], "jl": [122, 123], "instal": [122, 123, 127, 128], "nativ": [122, 123, 127], "julia": [122, 123, 125], "gurobi": [122, 123], "python": [122, 123, 125, 128], "docker": [122, 123, 127], "simul": [122, 125], "compat": [122, 125], "softwar": [122, 125], "ecosystem": [122, 125], "git": 126, "github": 126, "setup": 126, "For": 126, "contributor": 126, "repositori": 126, "sync": 126, "copi": 126, "branch": 126, "commit": 126, "messag": 126, "don": 126, "t": 126, "pull": 126, "clean": 126, "up": 126, "person": 126, "histori": 126, "client": 127, "server": 127, "On": 127, "laptop": 127, "desktop": 127, "its": 128, "pipenv": 128, "file": 128, "time": 9, "bind": 10, "summar": 10, "test_bind": 11, "test_capac": 11, "test_cost": 11, "test_emiss": 11, "test_summar": 11, "test_demand": 12, "test_tim": 12, "congest": 13, "test_congestion_surplu": 14, "test_util": 14, "canva": 16, "plot_bar_generation_max_min_actu": 16, "plot_bar_generation_stack": 16, "plot_bar_generation_vs_capac": 16, "plot_bar_renewable_max_profile_actu": 16, "plot_bar_shortfal": 16, "plot_capacity_map": 16, "plot_carbon_bar": 16, "plot_carbon_map": 16, "plot_curtailment_t": 16, "plot_energy_carbon_stack": 16, "plot_generation_ts_stack": 16, "plot_heatmap": 16, "plot_interconnection_map": 16, "plot_lmp_map": 16, "plot_pie_generation_vs_capac": 16, "plot_powerflow_snapshot": 16, "plot_scatter_capacity_vs_capacity_factor": 16, "plot_scatter_capacity_vs_cost_curve_slop": 16, "plot_scatter_capacity_vs_curtail": 16, "plot_shadowprice_map": 16, "plot_sim_vs_hist": 16, "plot_stat": 16, "plot_tornado": 16, "plot_transmission_upgrades_map": 16, "plot_utilization_map": 16, "projection_help": 16, "conftest": [17, 66], "test_canva": 17, "test_plot_bar_generation_max_min_actu": 17, "test_plot_bar_generation_stack": 17, "test_plot_bar_generation_vs_capac": 17, "test_plot_bar_renewable_max_profile_actu": 17, "test_plot_bar_shortfal": 17, "test_plot_capacity_map": 17, "test_plot_carbon_bar": 17, "test_plot_pie_generation_vs_capac": 17, "test_plot_scatter_capacity_vs_capacity_factor": 17, "test_plot_scatter_capacity_vs_cost_curve_slop": 17, "test_plot_scatter_capacity_vs_curtail": 17, "test_plot_shadowprice_map": 17, "test_plot_sim_vs_hist": 17, "test_plot_tornado": 17, "cli": [64, 65, 66, 67, 68, 69], "data_sourc": [65, 66], "demand_data": 65, "except": 65, "hydro_data": 65, "solar_data": 65, "wind_data": 65, "test_data_sourc": 66, "test_demand_data": 66, "test_hydro_data": 66, "test_solar_data": 66, "test_wind_data": 66, "download": [67, 68, 97], "download_manag": 67, "test_download_manag": 68, "gather": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "request_util": 70, "demanddata": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "bldg_electrif": [72, 73], "ff2elec_profile_generator_cook": 72, "ff2elec_profile_generator_dhw": 72, "ff2elec_profile_generator_htg": 72, "ff_model": 72, "floor_area_avg_slop": 72, "load_project": 72, "load_projection_scenario": 72, "puma_data_agg": 72, "puma_hp_estim": 72, "weather_data_agg": 72, "zone_profile_gener": 72, "test_ff2elec_profile_generator_htg": 73, "eia": [74, 75, 89], "clean_data": 74, "get_eia_data": 74, "map_ba": 74, "test_clean_data": 75, "test_get_eia_data": 75, "test_map_ba": 75, "nrel_ef": [76, 77], "aggregate_demand": 76, "get_efs_annual_data": 76, "get_efs_data": 76, "map_stat": 76, "test_aggregate_demand": 77, "test_get_efs_data": 77, "test_map_st": 77, "transportation_electrif": [78, 79, 80], "charging_optim": 78, "data_help": 78, "data_process": 78, "dwell": 78, "generate_bev_vehicle_profil": 78, "generate_scaling_factor": 78, "immediate_charging_hdv": 78, "smart_charg": 78, "test_dwel": 80, "test_generate_bev_vehicle_profil": 80, "test_immedi": 80, "test_immediate_charging_integr": 80, "test_smart_charging_integr": 80, "flexibilitydata": [81, 82, 83, 84], "doe": [82, 83, 84], "batch_process": 82, "bus_data": 82, "doe_data": 82, "geo_data": 82, "bus_exampl": 83, "doe_exampl": 83, "geo_exampl": 83, "test_bus_data": 84, "test_geo_data": 84, "griddata": [85, 86, 87], "geometri": 86, "test_geometri": 87, "hydrodata": [88, 89], "decompose_profil": 89, "interpolate_capacity_factor": 89, "net_demand": 89, "solardata": [90, 91, 92, 93, 94], "pv_track": 90, "ga_wind": 91, "nsrdb": [92, 93], "nrel_api": 92, "sam": 92, "test_nrel_api": 93, "mock_pv_info": 94, "test_pv_track": 94, "mock_gener": 95, "test_rate_limit": 95, "test_retri": 95, "winddata": [96, 97, 98, 99, 100], "imput": 96, "power_curv": 96, "hrrr": [97, 98], "calcul": 97, "grib": 97, "hrrr_api": 97, "test_calcul": 98, "test_grib": 98, "test_hrrr_api": 98, "rap": [99, 100], "noaa_api": 99, "test_noaa_api": 100}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Code of Conduct": [[0, "code-of-conduct"]], "Our Pledge": [[0, "our-pledge"]], "Our Standards": [[0, "our-standards"]], "Our Responsibilities": [[0, "our-responsibilities"]], "Scope": [[0, "scope"]], "What to do in case of violations": [[0, "what-to-do-in-case-of-violations"]], "Response Playbook": [[0, "response-playbook"]], "Attribution": [[0, "attribution"]], "Mentored Project Ideas": [[1, "mentored-project-ideas"]], "Getting in Touch": [[1, "getting-in-touch"]], "Project Ideas": [[1, "project-ideas"]], "Coding Standards": [[2, "coding-standards"]], "Why is using existing code preferable?": [[2, "why-is-using-existing-code-preferable"]], "What\u2019s a Unit Test?": [[2, "what-s-a-unit-test"]], "What Makes Code Hard to Test?": [[2, "what-makes-code-hard-to-test"]], "Problem: Non-deterministic Factors": [[2, "problem-non-deterministic-factors"]], "Option 1: Fixing the Code with Dependency Injection": [[2, "option-1-fixing-the-code-with-dependency-injection"]], "Option 2: Fixing the Code with Higher Order Functions": [[2, "option-2-fixing-the-code-with-higher-order-functions"]], "Problem: Side Effects": [[2, "problem-side-effects"]], "Problem: Global Mutable State": [[2, "problem-global-mutable-state"]], "Static Properties and Fields": [[2, "static-properties-and-fields"]], "Singletons": [[2, "singletons"]], "Problem Code": [[2, "problem-code"]], "How to Fix": [[2, "how-to-fix"]], "Better Code that Uses a Higher Order Function": [[2, "better-code-that-uses-a-higher-order-function"]], "Contribution Guide": [[3, "contribution-guide"]], "How to Contribute": [[3, "how-to-contribute"]], "Bug Report and Feature Request": [[3, "bug-report-and-feature-request"]], "Data Intake Procedure": [[3, "data-intake-procedure"]], "Develop your Feature": [[3, "develop-your-feature"]], "Format your Code": [[3, "format-your-code"]], "Document your Code": [[3, "document-your-code"]], "Communication": [[3, "communication"]], "Docstring Guide": [[4, "docstring-guide"]], "Import Statement Guide": [[5, "import-statement-guide"]], "Format": [[5, "format"]], "Path": [[5, "path"]], "Be Specific": [[5, "be-specific"]], "Testing Guide": [[6, "testing-guide"]], "Testing Philosophy": [[6, "testing-philosophy"]], "Minimum Requirement": [[6, "minimum-requirement"]], "What\u2019s the Benefit to the Team?": [[6, "what-s-the-benefit-to-the-team"]], "How do we Test if a Feature Works?": [[6, "how-do-we-test-if-a-feature-works"]], "Prerequisite for Writing Tests": [[6, "prerequisite-for-writing-tests"]], "Examples": [[6, "examples"]], "Let\u2019s Start Easy": [[6, "let-s-start-easy"]], "Mock Objects": [[6, "mock-objects"]], "Facilitating the Energy Transition": [[7, "facilitating-the-energy-transition"]], "Our Mission": [[7, "our-mission"]], "How it Works": [[7, "how-it-works"]], "Communication Channels": [[7, "communication-channels"]], "Requirements": [[18, "requirements"]], "Usage": [[18, "usage"], [122, "usage"], [125, "usage"]], "Analysis of Scenario Data": [[19, "analysis-of-scenario-data"], [20, "analysis-of-scenario-data"]], "Transmission": [[19, "transmission"], [20, "transmission"], [20, "id1"], [21, "transmission"]], "Generator Capacity and Generation": [[19, "generator-capacity-and-generation"], [20, "generator-capacity-and-generation"], [20, "id3"], [20, "id5"], [21, "generator-capacity-and-generation"], [21, "id1"]], "Emission": [[19, "emission"], [20, "emission"], [20, "id2"], [20, "id6"], [21, "emission"], [21, "id2"]], "Curtailment": [[19, "curtailment"], [20, "curtailment"], [20, "id4"], [21, "curtailment"]], "PostREISE": [[20, "postreise"]], "Scenario used": [[20, "scenario-used"], [22, "scenario-used"]], "Plotting Scenario Data": [[20, "plotting-scenario-data"], [21, "plotting-scenario-data"]], "Single Scenario": [[20, "single-scenario"], [21, "single-scenario"]], "Price": [[20, "price"], [21, "price"]], "General": [[20, "general"], [21, "general"]], "Scenarios Comparison": [[20, "scenarios-comparison"], [21, "scenarios-comparison"]], "powersimdata package": [[23, "powersimdata-package"]], "Subpackages": [[23, "subpackages"], [26, "subpackages"], [28, "subpackages"], [30, "subpackages"], [33, "subpackages"], [35, "subpackages"], [36, "subpackages"], [39, "subpackages"], [43, "subpackages"], [44, "subpackages"], [46, "subpackages"], [52, "subpackages"], [55, "subpackages"], [8, "subpackages"], [9, "subpackages"], [10, "subpackages"], [13, "subpackages"], [16, "subpackages"], [24, "subpackages"], [63, "subpackages"], [64, "subpackages"], [65, "subpackages"], [67, "subpackages"], [70, "subpackages"], [71, "subpackages"], [72, "subpackages"], [74, "subpackages"], [76, "subpackages"], [78, "subpackages"], [81, "subpackages"], [82, "subpackages"], [85, "subpackages"], [86, "subpackages"], [88, "subpackages"], [90, "subpackages"], [92, "subpackages"], [96, "subpackages"], [97, "subpackages"], [99, "subpackages"]], "Module contents": [[23, "module-powersimdata"], [25, "module-powersimdata.data_access.tests"], [26, "module-powersimdata.design"], [27, "module-powersimdata.design.compare"], [28, "module-powersimdata.design.generation"], [29, "module-powersimdata.design.generation.tests"], [30, "module-powersimdata.design.investment"], [31, "module-powersimdata.design.investment.tests"], [32, "module-powersimdata.design.tests"], [33, "module-powersimdata.design.transmission"], [34, "module-powersimdata.design.transmission.tests"], [35, "module-powersimdata.input"], [36, "module-powersimdata.input.changes"], [37, "module-powersimdata.input.changes.tests"], [38, "module-powersimdata.input.const"], [39, "module-powersimdata.input.converter"], [40, "module-powersimdata.input.converter.tests"], [41, "module-powersimdata.input.exporter"], [42, "module-powersimdata.input.tests"], [43, "module-powersimdata.network"], [44, "module-powersimdata.network.constants"], [45, "module-powersimdata.network.constants.carrier"], [46, "module-powersimdata.network.constants.region"], [47, "module-powersimdata.network.constants.region.tests"], [48, "module-powersimdata.network.europe_tub"], [49, "module-powersimdata.network.hifld"], [50, "module-powersimdata.network.usa_tamu"], [51, "module-powersimdata.output"], [52, "module-powersimdata.scenario"], [53, "module-powersimdata.scenario.tests"], [54, "module-powersimdata.tests"], [55, "module-powersimdata.utility"], [56, "module-powersimdata.utility.templates"], [57, "module-powersimdata.utility.tests"], [8, "module-postreise"], [9, "module-postreise.analyze"], [10, "module-postreise.analyze.generation"], [11, "module-postreise.analyze.generation.tests"], [12, "module-postreise.analyze.tests"], [13, "module-postreise.analyze.transmission"], [14, "module-postreise.analyze.transmission.tests"], [15, "module-postreise.data"], [16, "module-postreise.plot"], [17, "module-postreise.plot.tests"], [24, "module-powersimdata.data_access"], [63, "module-prereise"], [64, "module-prereise.cli"], [65, "module-contents"], [66, "module-contents"], [67, "module-prereise.cli.download"], [68, "module-prereise.cli.download.tests"], [69, "module-prereise.cli.tests"], [70, "module-prereise.gather"], [71, "module-prereise.gather.demanddata"], [72, "module-prereise.gather.demanddata.bldg_electrification"], [73, "module-prereise.gather.demanddata.bldg_electrification.tests"], [74, "module-prereise.gather.demanddata.eia"], [75, "module-prereise.gather.demanddata.eia.tests"], [76, "module-prereise.gather.demanddata.nrel_efs"], [77, "module-prereise.gather.demanddata.nrel_efs.tests"], [78, "module-prereise.gather.demanddata.transportation_electrification"], [79, "module-prereise.gather.demanddata.transportation_electrification.data"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests"], [81, "module-prereise.gather.flexibilitydata"], [82, "module-prereise.gather.flexibilitydata.doe"], [83, "module-prereise.gather.flexibilitydata.doe.examples"], [84, "module-prereise.gather.flexibilitydata.doe.tests"], [85, "module-prereise.gather.griddata"], [86, "module-prereise.gather.griddata.transmission"], [87, "module-prereise.gather.griddata.transmission.tests"], [88, "module-prereise.gather.hydrodata"], [89, "module-prereise.gather.hydrodata.eia"], [90, "module-prereise.gather.solardata"], [91, "module-prereise.gather.solardata.ga_wind"], [92, "module-prereise.gather.solardata.nsrdb"], [93, "module-prereise.gather.solardata.nsrdb.tests"], [94, "module-prereise.gather.solardata.tests"], [95, "module-prereise.gather.tests"], [96, "module-prereise.gather.winddata"], [97, "module-prereise.gather.winddata.hrrr"], [98, "module-prereise.gather.winddata.hrrr.tests"], [99, "module-prereise.gather.winddata.rap"], [100, "module-prereise.gather.winddata.rap.tests"]], "powersimdata.data_access.tests package": [[25, "powersimdata-data-access-tests-package"]], "Submodules": [[25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"], [35, "submodules"], [36, "submodules"], [37, "submodules"], [38, "submodules"], [39, "submodules"], [40, "submodules"], [41, "submodules"], [42, "submodules"], [43, "submodules"], [44, "submodules"], [45, "submodules"], [46, "submodules"], [47, "submodules"], [48, "submodules"], [49, "submodules"], [50, "submodules"], [51, "submodules"], [52, "submodules"], [53, "submodules"], [54, "submodules"], [55, "submodules"], [57, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [16, "submodules"], [17, "submodules"], [24, "submodules"], [64, "submodules"], [65, "submodules"], [66, "submodules"], [67, "submodules"], [68, "submodules"], [69, "submodules"], [70, "submodules"], [72, "submodules"], [73, "submodules"], [74, "submodules"], [75, "submodules"], [76, "submodules"], [77, "submodules"], [78, "submodules"], [80, "submodules"], [82, "submodules"], [83, "submodules"], [84, "submodules"], [86, "submodules"], [87, "submodules"], [89, "submodules"], [90, "submodules"], [91, "submodules"], [92, "submodules"], [93, "submodules"], [94, "submodules"], [95, "submodules"], [96, "submodules"], [97, "submodules"], [98, "submodules"], [99, "submodules"], [100, "submodules"]], "powersimdata.data_access.tests.test_data_access module": [[25, "module-powersimdata.data_access.tests.test_data_access"]], "powersimdata.data_access.tests.test_execute_csv module": [[25, "module-powersimdata.data_access.tests.test_execute_csv"]], "powersimdata.data_access.tests.test_launcher module": [[25, "module-powersimdata.data_access.tests.test_launcher"]], "powersimdata.data_access.tests.test_scenario_csv module": [[25, "module-powersimdata.data_access.tests.test_scenario_csv"]], "powersimdata.design package": [[26, "powersimdata-design-package"]], "powersimdata.design.mimic_grid module": [[26, "module-powersimdata.design.mimic_grid"]], "powersimdata.design.scenario_info module": [[26, "module-powersimdata.design.scenario_info"]], "powersimdata.design.compare package": [[27, "powersimdata-design-compare-package"]], "powersimdata.design.compare.generation module": [[27, "module-powersimdata.design.compare.generation"]], "powersimdata.design.compare.helpers module": [[27, "module-powersimdata.design.compare.helpers"]], "powersimdata.design.compare.transmission module": [[27, "module-powersimdata.design.compare.transmission"]], "powersimdata.design.generation package": [[28, "powersimdata-design-generation-package"]], "powersimdata.design.generation.clean_capacity_scaling module": [[28, "module-powersimdata.design.generation.clean_capacity_scaling"]], "powersimdata.design.generation.cost_curves module": [[28, "module-powersimdata.design.generation.cost_curves"]], "powersimdata.design.generation.curtailment module": [[28, "module-powersimdata.design.generation.curtailment"]], "powersimdata.design.generation.tests package": [[29, "powersimdata-design-generation-tests-package"]], "powersimdata.design.generation.tests.test_clean_capacity_scaling module": [[29, "module-powersimdata.design.generation.tests.test_clean_capacity_scaling"]], "powersimdata.design.generation.tests.test_cost_curves module": [[29, "module-powersimdata.design.generation.tests.test_cost_curves"]], "powersimdata.design.generation.tests.test_curtailment module": [[29, "module-powersimdata.design.generation.tests.test_curtailment"]], "powersimdata.design.investment package": [[30, "powersimdata-design-investment-package"]], "powersimdata.design.investment.const module": [[30, "module-powersimdata.design.investment.const"]], "powersimdata.design.investment.create_mapping_files module": [[30, "module-powersimdata.design.investment.create_mapping_files"]], "powersimdata.design.investment.inflation module": [[30, "module-powersimdata.design.investment.inflation"]], "powersimdata.design.investment.investment_costs module": [[30, "module-powersimdata.design.investment.investment_costs"]], "Todo": [[30, "id1"], [74, "id1"]], "powersimdata.design.investment.tests package": [[31, "powersimdata-design-investment-tests-package"]], "powersimdata.design.investment.tests.test_investment_costs module": [[31, "module-powersimdata.design.investment.tests.test_investment_costs"]], "powersimdata.design.tests package": [[32, "powersimdata-design-tests-package"]], "powersimdata.design.tests.test_scenario_info module": [[32, "module-powersimdata.design.tests.test_scenario_info"]], "powersimdata.design.transmission package": [[33, "powersimdata-design-transmission-package"]], "powersimdata.design.transmission.mwmiles module": [[33, "module-powersimdata.design.transmission.mwmiles"]], "powersimdata.design.transmission.statelines module": [[33, "module-powersimdata.design.transmission.statelines"]], "powersimdata.design.transmission.substations module": [[33, "module-powersimdata.design.transmission.substations"]], "powersimdata.design.transmission.upgrade module": [[33, "module-powersimdata.design.transmission.upgrade"]], "powersimdata.design.transmission.zones module": [[33, "module-powersimdata.design.transmission.zones"]], "powersimdata.design.transmission.tests package": [[34, "powersimdata-design-transmission-tests-package"]], "powersimdata.design.transmission.tests.test_mwmiles module": [[34, "module-powersimdata.design.transmission.tests.test_mwmiles"]], "powersimdata.design.transmission.tests.test_statelines module": [[34, "module-powersimdata.design.transmission.tests.test_statelines"]], "powersimdata.design.transmission.tests.test_substations module": [[34, "module-powersimdata.design.transmission.tests.test_substations"]], "powersimdata.design.transmission.tests.test_upgrade module": [[34, "module-powersimdata.design.transmission.tests.test_upgrade"]], "powersimdata.input package": [[35, "powersimdata-input-package"]], "powersimdata.input.abstract_grid module": [[35, "module-powersimdata.input.abstract_grid"]], "powersimdata.input.change_table module": [[35, "module-powersimdata.input.change_table"]], "powersimdata.input.check module": [[35, "module-powersimdata.input.check"]], "powersimdata.input.configure module": [[35, "module-powersimdata.input.configure"]], "powersimdata.input.electrified_demand_input module": [[35, "module-powersimdata.input.electrified_demand_input"]], "powersimdata.input.expansion_candidates module": [[35, "module-powersimdata.input.expansion_candidates"]], "powersimdata.input.grid module": [[35, "module-powersimdata.input.grid"]], "powersimdata.input.helpers module": [[35, "module-powersimdata.input.helpers"]], "powersimdata.input.input_base module": [[35, "module-powersimdata.input.input_base"]], "powersimdata.input.input_data module": [[35, "module-powersimdata.input.input_data"]], "powersimdata.input.profile_input module": [[35, "module-powersimdata.input.profile_input"]], "powersimdata.input.transform_demand module": [[35, "module-powersimdata.input.transform_demand"]], "powersimdata.input.transform_grid module": [[35, "module-powersimdata.input.transform_grid"]], "powersimdata.input.transform_profile module": [[35, "module-powersimdata.input.transform_profile"]], "powersimdata.input.changes package": [[36, "powersimdata-input-changes-package"]], "powersimdata.input.changes.bus module": [[36, "module-powersimdata.input.changes.bus"]], "powersimdata.input.changes.demand_flex module": [[36, "module-powersimdata.input.changes.demand_flex"]], "powersimdata.input.changes.electrification module": [[36, "module-powersimdata.input.changes.electrification"]], "powersimdata.input.changes.helpers module": [[36, "module-powersimdata.input.changes.helpers"]], "powersimdata.input.changes.plant module": [[36, "module-powersimdata.input.changes.plant"]], "powersimdata.input.changes.storage module": [[36, "module-powersimdata.input.changes.storage"]], "powersimdata.input.changes.tests package": [[37, "powersimdata-input-changes-tests-package"]], "powersimdata.input.changes.tests.test_add_electrification module": [[37, "module-powersimdata.input.changes.tests.test_add_electrification"]], "powersimdata.input.const package": [[38, "powersimdata-input-const-package"]], "powersimdata.input.const.grid_const module": [[38, "module-powersimdata.input.const.grid_const"]], "powersimdata.input.const.pypsa_const module": [[38, "module-powersimdata.input.const.pypsa_const"]], "powersimdata.input.converter package": [[39, "powersimdata-input-converter-package"]], "powersimdata.input.converter.csv_to_grid module": [[39, "module-powersimdata.input.converter.csv_to_grid"]], "powersimdata.input.converter.helpers module": [[39, "module-powersimdata.input.converter.helpers"]], "powersimdata.input.converter.pypsa_to_grid module": [[39, "module-powersimdata.input.converter.pypsa_to_grid"]], "powersimdata.input.converter.pypsa_to_profiles module": [[39, "module-powersimdata.input.converter.pypsa_to_profiles"]], "powersimdata.input.converter.tests package": [[40, "powersimdata-input-converter-tests-package"]], "powersimdata.input.converter.tests.test_pypsa_to_grid module": [[40, "module-powersimdata.input.converter.tests.test_pypsa_to_grid"]], "powersimdata.input.converter.tests.test_pypsa_to_profiles module": [[40, "module-powersimdata.input.converter.tests.test_pypsa_to_profiles"]], "powersimdata.input.exporter package": [[41, "powersimdata-input-exporter-package"]], "powersimdata.input.exporter.export_to_pypsa module": [[41, "module-powersimdata.input.exporter.export_to_pypsa"]], "powersimdata.input.exporter.export_to_reise module": [[41, "module-powersimdata.input.exporter.export_to_reise"]], "powersimdata.input.tests package": [[42, "powersimdata-input-tests-package"]], "powersimdata.input.tests.test_change_table module": [[42, "module-powersimdata.input.tests.test_change_table"]], "powersimdata.input.tests.test_check module": [[42, "module-powersimdata.input.tests.test_check"]], "powersimdata.input.tests.test_configure module": [[42, "module-powersimdata.input.tests.test_configure"]], "powersimdata.input.tests.test_expansion_candidates module": [[42, "module-powersimdata.input.tests.test_expansion_candidates"]], "powersimdata.input.tests.test_grid module": [[42, "module-powersimdata.input.tests.test_grid"]], "powersimdata.input.tests.test_helpers module": [[42, "module-powersimdata.input.tests.test_helpers"]], "powersimdata.input.tests.test_input_data module": [[42, "module-powersimdata.input.tests.test_input_data"]], "powersimdata.input.tests.test_profile_input module": [[42, "module-powersimdata.input.tests.test_profile_input"]], "powersimdata.input.tests.test_transform_demand module": [[42, "module-powersimdata.input.tests.test_transform_demand"]], "powersimdata.input.tests.test_transform_grid module": [[42, "module-powersimdata.input.tests.test_transform_grid"]], "powersimdata.input.tests.test_transform_profile module": [[42, "module-powersimdata.input.tests.test_transform_profile"]], "powersimdata.network package": [[43, "powersimdata-network-package"]], "powersimdata.network.csv_reader module": [[43, "module-powersimdata.network.csv_reader"]], "powersimdata.network.helpers module": [[43, "module-powersimdata.network.helpers"]], "powersimdata.network.model module": [[43, "module-powersimdata.network.model"]], "powersimdata.network.zenodo module": [[43, "module-powersimdata.network.zenodo"]], "powersimdata.network.constants package": [[44, "powersimdata-network-constants-package"]], "powersimdata.network.constants.model module": [[44, "module-powersimdata.network.constants.model"]], "powersimdata.network.constants.carrier package": [[45, "powersimdata-network-constants-carrier-package"]], "powersimdata.network.constants.carrier.color module": [[45, "module-powersimdata.network.constants.carrier.color"]], "powersimdata.network.constants.carrier.efficiency module": [[45, "module-powersimdata.network.constants.carrier.efficiency"]], "powersimdata.network.constants.carrier.emission module": [[45, "module-powersimdata.network.constants.carrier.emission"]], "powersimdata.network.constants.carrier.label module": [[45, "module-powersimdata.network.constants.carrier.label"]], "powersimdata.network.constants.carrier.plants module": [[45, "module-powersimdata.network.constants.carrier.plants"]], "powersimdata.network.constants.carrier.resource module": [[45, "module-powersimdata.network.constants.carrier.resource"]], "powersimdata.network.constants.carrier.storage module": [[45, "module-powersimdata.network.constants.carrier.storage"]], "powersimdata.network.constants.region package": [[46, "powersimdata-network-constants-region-package"]], "powersimdata.network.constants.region.division module": [[46, "module-powersimdata.network.constants.region.division"]], "powersimdata.network.constants.region.geography module": [[46, "module-powersimdata.network.constants.region.geography"]], "powersimdata.network.constants.region.interconnect module": [[46, "module-powersimdata.network.constants.region.interconnect"]], "powersimdata.network.constants.region.loadzone module": [[46, "module-powersimdata.network.constants.region.loadzone"]], "powersimdata.network.constants.region.mapping module": [[46, "module-powersimdata.network.constants.region.mapping"]], "powersimdata.network.constants.region.zones module": [[46, "module-powersimdata.network.constants.region.zones"]], "powersimdata.network.constants.region.tests package": [[47, "powersimdata-network-constants-region-tests-package"]], "powersimdata.network.constants.region.tests.test_zones module": [[47, "module-powersimdata.network.constants.region.tests.test_zones"]], "powersimdata.network.europe_tub package": [[48, "powersimdata-network-europe-tub-package"]], "powersimdata.network.europe_tub.model module": [[48, "module-powersimdata.network.europe_tub.model"]], "powersimdata.network.hifld package": [[49, "powersimdata-network-hifld-package"]], "powersimdata.network.hifld.model module": [[49, "module-powersimdata.network.hifld.model"]], "powersimdata.network.usa_tamu package": [[50, "powersimdata-network-usa-tamu-package"]], "powersimdata.network.usa_tamu.model module": [[50, "module-powersimdata.network.usa_tamu.model"]], "powersimdata.output package": [[51, "powersimdata-output-package"]], "powersimdata.output.output_data module": [[51, "module-powersimdata.output.output_data"]], "powersimdata.scenario package": [[52, "powersimdata-scenario-package"]], "powersimdata.scenario.analyze module": [[52, "module-powersimdata.scenario.analyze"]], "powersimdata.scenario.check module": [[52, "module-powersimdata.scenario.check"]], "powersimdata.scenario.create module": [[52, "module-powersimdata.scenario.create"]], "powersimdata.scenario.delete module": [[52, "module-powersimdata.scenario.delete"]], "powersimdata.scenario.execute module": [[52, "module-powersimdata.scenario.execute"]], "powersimdata.scenario.move module": [[52, "module-powersimdata.scenario.move"]], "powersimdata.scenario.ready module": [[52, "module-powersimdata.scenario.ready"]], "powersimdata.scenario.scenario module": [[52, "module-powersimdata.scenario.scenario"]], "powersimdata.scenario.state module": [[52, "module-powersimdata.scenario.state"]], "powersimdata.scenario.tests package": [[53, "powersimdata-scenario-tests-package"]], "powersimdata.scenario.tests.test_check module": [[53, "module-powersimdata.scenario.tests.test_check"]], "powersimdata.scenario.tests.test_create module": [[53, "module-powersimdata.scenario.tests.test_create"]], "powersimdata.scenario.tests.test_scenario module": [[53, "module-powersimdata.scenario.tests.test_scenario"]], "powersimdata.tests package": [[54, "powersimdata-tests-package"]], "powersimdata.tests.mock_analyze module": [[54, "module-powersimdata.tests.mock_analyze"]], "powersimdata.tests.mock_builder module": [[54, "module-powersimdata.tests.mock_builder"]], "powersimdata.tests.mock_change_table module": [[54, "module-powersimdata.tests.mock_change_table"]], "powersimdata.tests.mock_context module": [[54, "module-powersimdata.tests.mock_context"]], "powersimdata.tests.mock_grid module": [[54, "module-powersimdata.tests.mock_grid"]], "powersimdata.tests.mock_profile_input module": [[54, "module-powersimdata.tests.mock_profile_input"]], "powersimdata.tests.mock_scenario module": [[54, "module-powersimdata.tests.mock_scenario"]], "powersimdata.tests.mock_scenario_info module": [[54, "module-powersimdata.tests.mock_scenario_info"]], "powersimdata.tests.test_mocks module": [[54, "module-powersimdata.tests.test_mocks"]], "powersimdata.utility package": [[55, "powersimdata-utility-package"]], "powersimdata.utility.config module": [[55, "module-powersimdata.utility.config"]], "powersimdata.utility.distance module": [[55, "module-powersimdata.utility.distance"]], "powersimdata.utility.helpers module": [[55, "module-powersimdata.utility.helpers"]], "powersimdata.utility.server_setup module": [[55, "module-powersimdata.utility.server_setup"]], "powersimdata.utility.templates package": [[56, "powersimdata-utility-templates-package"]], "powersimdata.utility.tests package": [[57, "powersimdata-utility-tests-package"]], "powersimdata.utility.tests.test_distance module": [[57, "module-powersimdata.utility.tests.test_distance"]], "powersimdata.utility.tests.test_helpers module": [[57, "module-powersimdata.utility.tests.test_helpers"]], "Capacity Planning Framework": [[58, "capacity-planning-framework"], [60, "capacity-planning-framework"]], "Required Inputs": [[58, "required-inputs"], [60, "required-inputs"]], "Optional Inputs": [[58, "optional-inputs"], [60, "optional-inputs"]], "Example Capacity Planning Function Calls": [[58, "example-capacity-planning-function-calls"], [60, "example-capacity-planning-function-calls"]], "Creating a Change Table from Capacity Planning Results": [[58, "creating-a-change-table-from-capacity-planning-results"], [60, "creating-a-change-table-from-capacity-planning-results"]], "Grid Object": [[59, "grid-object"], [60, "grid-object"]], "PowerSimData": [[60, "powersimdata"]], "Scenario Framework": [[60, "scenario-framework"], [61, "scenario-framework"]], "Creating a Scenario": [[60, "creating-a-scenario"], [61, "creating-a-scenario"]], "Running the Scenario and Extracting Output Data": [[60, "running-the-scenario-and-extracting-output-data"], [61, "running-the-scenario-and-extracting-output-data"]], "Retrieving Scenario Output Data": [[60, "retrieving-scenario-output-data"], [61, "retrieving-scenario-output-data"]], "Deleting a Scenario": [[60, "deleting-a-scenario"], [61, "deleting-a-scenario"]], "Moving a Scenario to Backup disk": [[60, "moving-a-scenario-to-backup-disk"], [61, "moving-a-scenario-to-backup-disk"]], "Analyzing Scenario Designs": [[60, "analyzing-scenario-designs"], [62, "analyzing-scenario-designs"]], "Analysis of Transmission Upgrades": [[60, "analysis-of-transmission-upgrades"], [62, "analysis-of-transmission-upgrades"]], "Cumulative Upgrade Quantity": [[60, "cumulative-upgrade-quantity"], [62, "cumulative-upgrade-quantity"]], "Classify Upgrades": [[60, "classify-upgrades"], [62, "classify-upgrades"]], "Analysis of Generation Upgrades": [[60, "analysis-of-generation-upgrades"], [62, "analysis-of-generation-upgrades"]], "Accessing and Saving Relevant Supply Information": [[60, "accessing-and-saving-relevant-supply-information"], [62, "accessing-and-saving-relevant-supply-information"]], "Visualizing Generator Supply Curves": [[60, "visualizing-generator-supply-curves"], [62, "visualizing-generator-supply-curves"]], "Comparing Supply Curves": [[60, "comparing-supply-curves"], [62, "comparing-supply-curves"]], "Comparing Cost Curve Parameters": [[60, "comparing-cost-curve-parameters"], [62, "comparing-cost-curve-parameters"]], "Comparing Generators by Capacity and Price": [[60, "comparing-generators-by-capacity-and-price"], [62, "comparing-generators-by-capacity-and-price"]], "Eastern": [[101, "eastern"], [108, "eastern"], [112, "eastern"], [112, "id26"]], "Texas": [[102, "texas"], [110, "texas"], [112, "texas"], [112, "id24"]], "Western": [[103, "western"], [111, "western"], [112, "western"], [112, "id25"]], "User Manual": [[105, "user-manual"], [112, "user-manual"]], "Pre-processed input data": [[105, "pre-processed-input-data"], [112, "pre-processed-input-data"]], "Calling the main Transportation Electrification method": [[105, "calling-the-main-transportation-electrification-method"], [112, "calling-the-main-transportation-electrification-method"]], "Spatial translation mechanism \u2013 between any two different spatial resolutions": [[105, "spatial-translation-mechanism-between-any-two-different-spatial-resolutions"], [112, "spatial-translation-mechanism-between-any-two-different-spatial-resolutions"]], "Data Sources": [[106, "data-sources"], [112, "data-sources"]], "Summary": [[107, "summary"], [112, "summary"]], "Capacity Factor": [[109, "capacity-factor"]], "PreREISE": [[112, "prereise"]], "General Comments": [[112, "general-comments"]], "Demand": [[112, "demand"]], "Historical": [[112, "historical"]], "Transportation Electrification": [[112, "transportation-electrification"]], "Capabilities and Data": [[112, "capabilities-and-data"]], "Methodology": [[112, "methodology"]], "EV Charging Model Process and Flowchart": [[112, "ev-charging-model-process-and-flowchart"]], "Immediate and Smart Charging Example Outputs": [[112, "immediate-and-smart-charging-example-outputs"]], "Vehicle Travel Patterns": [[112, "vehicle-travel-patterns"]], "Light-duty Travel patterns": [[112, "light-duty-travel-patterns"]], "Census divisions": [[112, "id54"]], "Columns in modified NHTS trip Dataset": [[112, "id55"]], "Trip count by vehicle category, census division, and day of week": [[112, "id56"]], "Medium- and Heavy-duty Vehicles": [[112, "medium-and-heavy-duty-vehicles"]], "Columns in modified MDV and HDV trip datasets": [[112, "id57"]], "Annual Vehicle Miles Traveled": [[112, "annual-vehicle-miles-traveled"]], "Electric Vehicle Miles Traveled Projections by Urban and Rural Area": [[112, "electric-vehicle-miles-traveled-projections-by-urban-and-rural-area"]], "Monthly and Daily Weight Factors": [[112, "monthly-and-daily-weight-factors"]], "Weekday versus weekend weight factors": [[112, "id58"]], "Month weight factors": [[112, "id59"]], "BEV VMT Projections": [[112, "bev-vmt-projections"]], "Urban and rural scaling factors by month and weekday vs weekend": [[112, "id60"]], "Fuel Efficiency Projections": [[112, "fuel-efficiency-projections"]], "Default BEV fuel economy by vehicle category and year": [[112, "id61"]], "Smart Charging Optimization Algorithm": [[112, "smart-charging-optimization-algorithm"]], "Adoption Rate": [[112, "adoption-rate"]], "NREL Electrification Futures Study Demand and Flexibility Data": [[112, "nrel-electrification-futures-study-demand-and-flexibility-data"]], "Hydro": [[112, "hydro"]], "Renewables": [[112, "renewables"]], "Solar": [[112, "solar"]], "The National Solar Radiation Database": [[112, "the-national-solar-radiation-database"], [116, "the-national-solar-radiation-database"]], "From Solar Irradiance to Power Output": [[112, "from-solar-irradiance-to-power-output"], [115, "from-solar-irradiance-to-power-output"]], "Naive": [[112, "naive"], [115, "naive"]], "System Adviser Model": [[112, "system-adviser-model"], [115, "system-adviser-model"]], "Wind": [[112, "wind"]], "Rapid Refresh": [[112, "rapid-refresh"], [120, "rapid-refresh"]], "High-Resolution Rapid Refresh": [[112, "high-resolution-rapid-refresh"], [118, "high-resolution-rapid-refresh"]], "From Wind Speed to Power Output": [[112, "from-wind-speed-to-power-output"], [119, "from-wind-speed-to-power-output"]], "Resources": [[112, "resources"]], "Command Line Interface": [[112, "command-line-interface"], [113, "command-line-interface"]], "Notebooks": [[112, "notebooks"], [114, "notebooks"]], "Bibliography": [[112, "bibliography"]], "Gridded Atmospheric Wind Integration National Dataset": [[117, "gridded-atmospheric-wind-integration-national-dataset"]], "Formulation": [[121, "formulation"], [122, "formulation"]], "Sets": [[121, "sets"], [122, "sets"]], "Subsets": [[121, "subsets"], [122, "subsets"]], "Variables": [[121, "variables"], [122, "variables"]], "Parameters": [[121, "parameters"], [122, "parameters"]], "Constraints": [[121, "constraints"], [122, "constraints"]], "Objective Function": [[121, "objective-function"], [122, "objective-function"]], "REISE.jl": [[122, "reise-jl"], [122, "id1"], [123, "reise-jl"]], "System Requirements": [[122, "system-requirements"], [124, "system-requirements"]], "Installation": [[122, "installation"], [123, "installation"]], "Native Installation": [[122, "native-installation"], [123, "native-installation"]], "Julia": [[122, "julia"], [122, "id2"], [123, "julia"], [125, "julia"]], "Gurobi": [[122, "gurobi"], [123, "gurobi"]], "Python": [[122, "python"], [122, "id3"], [123, "python"], [125, "python"], [128, "python"]], "Docker": [[122, "docker"], [123, "docker"]], "Running a simulation": [[122, "running-a-simulation"], [125, "running-a-simulation"]], "Extracting Simulation Results": [[122, "extracting-simulation-results"], [125, "extracting-simulation-results"]], "Compatibility with our Software Ecosystem": [[122, "compatibility-with-our-software-ecosystem"], [125, "compatibility-with-our-software-ecosystem"]], "Working with Git/GitHub": [[126, "working-with-git-github"]], "Setup Git": [[126, "setup-git"]], "For Users": [[126, "for-users"]], "For Contributors": [[126, "for-contributors"]], "Get the Repository": [[126, "get-the-repository"]], "Sync your Copy": [[126, "sync-your-copy"]], "Branching": [[126, "branching"]], "Commit message": [[126, "commit-message"]], "Don\u2019t git pull\u2026": [[126, "don-t-git-pull"]], "Clean up personal commit history": [[126, "clean-up-personal-commit-history"]], "Pull request": [[126, "pull-request"]], "Installation Guide": [[127, "installation-guide"]], "Using docker": [[127, "using-docker"]], "Natively": [[127, "natively"]], "Client-Server Installation": [[127, "client-server-installation"]], "On Laptop/Desktop": [[127, "on-laptop-desktop"]], "On Server": [[127, "on-server"]], "How to Run Scenario": [[127, "how-to-run-scenario"]], "Installing Python and its Dependencies": [[128, "installing-python-and-its-dependencies"]], "Dependencies": [[128, "dependencies"]], "Pipenv": [[128, "pipenv"]], "Requirements File": [[128, "requirements-file"]], "postreise package": [[8, "postreise-package"]], "postreise.analyze package": [[9, "postreise-analyze-package"]], "postreise.analyze.demand module": [[9, "module-postreise.analyze.demand"]], "postreise.analyze.time module": [[9, "module-postreise.analyze.time"]], "postreise.analyze.generation package": [[10, "postreise-analyze-generation-package"]], "postreise.analyze.generation.binding module": [[10, "module-postreise.analyze.generation.binding"]], "postreise.analyze.generation.capacity module": [[10, "module-postreise.analyze.generation.capacity"]], "postreise.analyze.generation.costs module": [[10, "module-postreise.analyze.generation.costs"]], "postreise.analyze.generation.curtailment module": [[10, "module-postreise.analyze.generation.curtailment"]], "postreise.analyze.generation.emissions module": [[10, "module-postreise.analyze.generation.emissions"]], "postreise.analyze.generation.summarize module": [[10, "module-postreise.analyze.generation.summarize"]], "postreise.analyze.generation.tests package": [[11, "postreise-analyze-generation-tests-package"]], "postreise.analyze.generation.tests.test_binding module": [[11, "module-postreise.analyze.generation.tests.test_binding"]], "postreise.analyze.generation.tests.test_capacity module": [[11, "module-postreise.analyze.generation.tests.test_capacity"]], "postreise.analyze.generation.tests.test_costs module": [[11, "module-postreise.analyze.generation.tests.test_costs"]], "postreise.analyze.generation.tests.test_curtailment module": [[11, "module-postreise.analyze.generation.tests.test_curtailment"]], "postreise.analyze.generation.tests.test_emissions module": [[11, "module-postreise.analyze.generation.tests.test_emissions"]], "postreise.analyze.generation.tests.test_summarize module": [[11, "module-postreise.analyze.generation.tests.test_summarize"]], "postreise.analyze.tests package": [[12, "postreise-analyze-tests-package"]], "postreise.analyze.tests.test_demand module": [[12, "module-postreise.analyze.tests.test_demand"]], "postreise.analyze.tests.test_time module": [[12, "module-postreise.analyze.tests.test_time"]], "postreise.analyze.transmission package": [[13, "postreise-analyze-transmission-package"]], "postreise.analyze.transmission.congestion module": [[13, "module-postreise.analyze.transmission.congestion"]], "postreise.analyze.transmission.utilization module": [[13, "module-postreise.analyze.transmission.utilization"]], "postreise.analyze.transmission.tests package": [[14, "postreise-analyze-transmission-tests-package"]], "postreise.analyze.transmission.tests.test_congestion_surplus module": [[14, "module-postreise.analyze.transmission.tests.test_congestion_surplus"]], "postreise.analyze.transmission.tests.test_utilization module": [[14, "module-postreise.analyze.transmission.tests.test_utilization"]], "postreise.data package": [[15, "postreise-data-package"]], "postreise.plot package": [[16, "postreise-plot-package"]], "postreise.plot.canvas module": [[16, "module-postreise.plot.canvas"]], "postreise.plot.check module": [[16, "module-postreise.plot.check"]], "postreise.plot.colors module": [[16, "module-postreise.plot.colors"]], "postreise.plot.plot_bar_generation_max_min_actual module": [[16, "module-postreise.plot.plot_bar_generation_max_min_actual"]], "postreise.plot.plot_bar_generation_stack module": [[16, "module-postreise.plot.plot_bar_generation_stack"]], "postreise.plot.plot_bar_generation_vs_capacity module": [[16, "module-postreise.plot.plot_bar_generation_vs_capacity"]], "postreise.plot.plot_bar_renewable_max_profile_actual module": [[16, "module-postreise.plot.plot_bar_renewable_max_profile_actual"]], "postreise.plot.plot_bar_shortfall module": [[16, "module-postreise.plot.plot_bar_shortfall"]], "postreise.plot.plot_capacity_map module": [[16, "module-postreise.plot.plot_capacity_map"]], "postreise.plot.plot_carbon_bar module": [[16, "module-postreise.plot.plot_carbon_bar"]], "postreise.plot.plot_carbon_map module": [[16, "module-postreise.plot.plot_carbon_map"]], "postreise.plot.plot_curtailment_ts module": [[16, "module-postreise.plot.plot_curtailment_ts"]], "postreise.plot.plot_energy_carbon_stack module": [[16, "module-postreise.plot.plot_energy_carbon_stack"]], "postreise.plot.plot_generation_ts_stack module": [[16, "module-postreise.plot.plot_generation_ts_stack"]], "postreise.plot.plot_heatmap module": [[16, "module-postreise.plot.plot_heatmap"]], "postreise.plot.plot_interconnection_map module": [[16, "module-postreise.plot.plot_interconnection_map"]], "postreise.plot.plot_lmp_map module": [[16, "module-postreise.plot.plot_lmp_map"]], "postreise.plot.plot_pie_generation_vs_capacity module": [[16, "module-postreise.plot.plot_pie_generation_vs_capacity"]], "postreise.plot.plot_powerflow_snapshot module": [[16, "module-postreise.plot.plot_powerflow_snapshot"]], "postreise.plot.plot_scatter_capacity_vs_capacity_factor module": [[16, "module-postreise.plot.plot_scatter_capacity_vs_capacity_factor"]], "postreise.plot.plot_scatter_capacity_vs_cost_curve_slope module": [[16, "module-postreise.plot.plot_scatter_capacity_vs_cost_curve_slope"]], "postreise.plot.plot_scatter_capacity_vs_curtailment module": [[16, "module-postreise.plot.plot_scatter_capacity_vs_curtailment"]], "postreise.plot.plot_shadowprice_map module": [[16, "module-postreise.plot.plot_shadowprice_map"]], "postreise.plot.plot_sim_vs_hist module": [[16, "module-postreise.plot.plot_sim_vs_hist"]], "postreise.plot.plot_states module": [[16, "module-postreise.plot.plot_states"]], "postreise.plot.plot_tornado module": [[16, "module-postreise.plot.plot_tornado"]], "postreise.plot.plot_transmission_upgrades_map module": [[16, "module-postreise.plot.plot_transmission_upgrades_map"]], "postreise.plot.plot_utilization_map module": [[16, "module-postreise.plot.plot_utilization_map"]], "postreise.plot.projection_helpers module": [[16, "module-postreise.plot.projection_helpers"]], "postreise.plot.tests package": [[17, "postreise-plot-tests-package"]], "postreise.plot.tests.conftest module": [[17, "module-postreise.plot.tests.conftest"]], "postreise.plot.tests.test_canvas module": [[17, "module-postreise.plot.tests.test_canvas"]], "postreise.plot.tests.test_check module": [[17, "module-postreise.plot.tests.test_check"]], "postreise.plot.tests.test_plot_bar_generation_max_min_actual module": [[17, "module-postreise.plot.tests.test_plot_bar_generation_max_min_actual"]], "postreise.plot.tests.test_plot_bar_generation_stack module": [[17, "module-postreise.plot.tests.test_plot_bar_generation_stack"]], "postreise.plot.tests.test_plot_bar_generation_vs_capacity module": [[17, "module-postreise.plot.tests.test_plot_bar_generation_vs_capacity"]], "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual module": [[17, "module-postreise.plot.tests.test_plot_bar_renewable_max_profile_actual"]], "postreise.plot.tests.test_plot_bar_shortfall module": [[17, "module-postreise.plot.tests.test_plot_bar_shortfall"]], "postreise.plot.tests.test_plot_capacity_map module": [[17, "module-postreise.plot.tests.test_plot_capacity_map"]], "postreise.plot.tests.test_plot_carbon_bar module": [[17, "module-postreise.plot.tests.test_plot_carbon_bar"]], "postreise.plot.tests.test_plot_pie_generation_vs_capacity module": [[17, "module-postreise.plot.tests.test_plot_pie_generation_vs_capacity"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor module": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope module": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment module": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment"]], "postreise.plot.tests.test_plot_shadowprice_map module": [[17, "module-postreise.plot.tests.test_plot_shadowprice_map"]], "postreise.plot.tests.test_plot_sim_vs_hist module": [[17, "module-postreise.plot.tests.test_plot_sim_vs_hist"]], "postreise.plot.tests.test_plot_tornado module": [[17, "module-postreise.plot.tests.test_plot_tornado"]], "powersimdata.data_access package": [[24, "powersimdata-data-access-package"]], "powersimdata.data_access.context module": [[24, "module-powersimdata.data_access.context"]], "powersimdata.data_access.csv_store module": [[24, "module-powersimdata.data_access.csv_store"]], "powersimdata.data_access.data_access module": [[24, "module-powersimdata.data_access.data_access"]], "powersimdata.data_access.execute_list module": [[24, "module-powersimdata.data_access.execute_list"]], "powersimdata.data_access.execute_table module": [[24, "powersimdata-data-access-execute-table-module"]], "powersimdata.data_access.fs_helper module": [[24, "module-powersimdata.data_access.fs_helper"]], "powersimdata.data_access.launcher module": [[24, "module-powersimdata.data_access.launcher"]], "powersimdata.data_access.scenario_list module": [[24, "module-powersimdata.data_access.scenario_list"]], "powersimdata.data_access.scenario_table module": [[24, "powersimdata-data-access-scenario-table-module"]], "powersimdata.data_access.sql_store module": [[24, "powersimdata-data-access-sql-store-module"]], "powersimdata.data_access.ssh_fs module": [[24, "module-powersimdata.data_access.ssh_fs"]], "prereise package": [[63, "prereise-package"]], "prereise.cli package": [[64, "prereise-cli-package"]], "prereise.cli.constants module": [[64, "module-prereise.cli.constants"]], "prereise.cli.helpers module": [[64, "module-prereise.cli.helpers"]], "prereise.cli.data_sources package": [[65, "prereise-cli-data-sources-package"]], "prereise.cli.data_sources.data_source module": [[65, "prereise-cli-data-sources-data-source-module"]], "prereise.cli.data_sources.demand_data module": [[65, "module-prereise.cli.data_sources.demand_data"]], "prereise.cli.data_sources.exceptions module": [[65, "module-prereise.cli.data_sources.exceptions"]], "prereise.cli.data_sources.hydro_data module": [[65, "module-prereise.cli.data_sources.hydro_data"]], "prereise.cli.data_sources.solar_data module": [[65, "prereise-cli-data-sources-solar-data-module"]], "prereise.cli.data_sources.wind_data module": [[65, "prereise-cli-data-sources-wind-data-module"]], "prereise.cli.data_sources.tests package": [[66, "prereise-cli-data-sources-tests-package"]], "prereise.cli.data_sources.tests.conftest module": [[66, "prereise-cli-data-sources-tests-conftest-module"]], "prereise.cli.data_sources.tests.test_data_source module": [[66, "prereise-cli-data-sources-tests-test-data-source-module"]], "prereise.cli.data_sources.tests.test_demand_data module": [[66, "prereise-cli-data-sources-tests-test-demand-data-module"]], "prereise.cli.data_sources.tests.test_hydro_data module": [[66, "prereise-cli-data-sources-tests-test-hydro-data-module"]], "prereise.cli.data_sources.tests.test_solar_data module": [[66, "prereise-cli-data-sources-tests-test-solar-data-module"]], "prereise.cli.data_sources.tests.test_wind_data module": [[66, "prereise-cli-data-sources-tests-test-wind-data-module"]], "prereise.cli.download package": [[67, "prereise-cli-download-package"]], "prereise.cli.download.download_manager module": [[67, "prereise-cli-download-download-manager-module"]], "prereise.cli.download.tests package": [[68, "prereise-cli-download-tests-package"]], "prereise.cli.download.tests.test_download_manager module": [[68, "prereise-cli-download-tests-test-download-manager-module"]], "prereise.cli.tests package": [[69, "prereise-cli-tests-package"]], "prereise.cli.tests.test_helpers module": [[69, "module-prereise.cli.tests.test_helpers"]], "prereise.gather package": [[70, "prereise-gather-package"]], "prereise.gather.const module": [[70, "module-prereise.gather.const"]], "prereise.gather.helpers module": [[70, "module-prereise.gather.helpers"]], "prereise.gather.request_util module": [[70, "module-prereise.gather.request_util"]], "prereise.gather.demanddata package": [[71, "prereise-gather-demanddata-package"]], "prereise.gather.demanddata.bldg_electrification package": [[72, "prereise-gather-demanddata-bldg-electrification-package"]], "prereise.gather.demanddata.bldg_electrification.const module": [[72, "module-prereise.gather.demanddata.bldg_electrification.const"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook module": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw module": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg module": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg"]], "prereise.gather.demanddata.bldg_electrification.ff_model module": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff_model"]], "prereise.gather.demanddata.bldg_electrification.floor_area_avg_slopes module": [[72, "prereise-gather-demanddata-bldg-electrification-floor-area-avg-slopes-module"]], "prereise.gather.demanddata.bldg_electrification.helper module": [[72, "prereise-gather-demanddata-bldg-electrification-helper-module"]], "prereise.gather.demanddata.bldg_electrification.load_projection module": [[72, "prereise-gather-demanddata-bldg-electrification-load-projection-module"]], "prereise.gather.demanddata.bldg_electrification.load_projection_scenario module": [[72, "module-prereise.gather.demanddata.bldg_electrification.load_projection_scenario"]], "prereise.gather.demanddata.bldg_electrification.puma_data_agg module": [[72, "prereise-gather-demanddata-bldg-electrification-puma-data-agg-module"]], "prereise.gather.demanddata.bldg_electrification.puma_hp_estimator module": [[72, "prereise-gather-demanddata-bldg-electrification-puma-hp-estimator-module"]], "prereise.gather.demanddata.bldg_electrification.weather_data_agg module": [[72, "prereise-gather-demanddata-bldg-electrification-weather-data-agg-module"]], "prereise.gather.demanddata.bldg_electrification.zone_profile_generator module": [[72, "prereise-gather-demanddata-bldg-electrification-zone-profile-generator-module"]], "prereise.gather.demanddata.bldg_electrification.tests package": [[73, "prereise-gather-demanddata-bldg-electrification-tests-package"]], "prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg module": [[73, "module-prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg"]], "prereise.gather.demanddata.eia package": [[74, "prereise-gather-demanddata-eia-package"]], "prereise.gather.demanddata.eia.clean_data module": [[74, "module-prereise.gather.demanddata.eia.clean_data"]], "prereise.gather.demanddata.eia.get_eia_data module": [[74, "module-prereise.gather.demanddata.eia.get_eia_data"]], "prereise.gather.demanddata.eia.map_ba module": [[74, "module-prereise.gather.demanddata.eia.map_ba"]], "prereise.gather.demanddata.eia.tests package": [[75, "prereise-gather-demanddata-eia-tests-package"]], "prereise.gather.demanddata.eia.tests.test_clean_data module": [[75, "module-prereise.gather.demanddata.eia.tests.test_clean_data"]], "prereise.gather.demanddata.eia.tests.test_get_eia_data module": [[75, "module-prereise.gather.demanddata.eia.tests.test_get_eia_data"]], "prereise.gather.demanddata.eia.tests.test_map_ba module": [[75, "module-prereise.gather.demanddata.eia.tests.test_map_ba"]], "prereise.gather.demanddata.nrel_efs package": [[76, "prereise-gather-demanddata-nrel-efs-package"]], "prereise.gather.demanddata.nrel_efs.aggregate_demand module": [[76, "module-prereise.gather.demanddata.nrel_efs.aggregate_demand"]], "prereise.gather.demanddata.nrel_efs.get_efs_annual_data module": [[76, "module-prereise.gather.demanddata.nrel_efs.get_efs_annual_data"]], "prereise.gather.demanddata.nrel_efs.get_efs_data module": [[76, "module-prereise.gather.demanddata.nrel_efs.get_efs_data"]], "prereise.gather.demanddata.nrel_efs.map_states module": [[76, "module-prereise.gather.demanddata.nrel_efs.map_states"]], "prereise.gather.demanddata.nrel_efs.tests package": [[77, "prereise-gather-demanddata-nrel-efs-tests-package"]], "prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand module": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand"]], "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data module": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data"]], "prereise.gather.demanddata.nrel_efs.tests.test_map_states module": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_map_states"]], "prereise.gather.demanddata.transportation_electrification package": [[78, "prereise-gather-demanddata-transportation-electrification-package"]], "prereise.gather.demanddata.transportation_electrification.charging_optimization module": [[78, "module-prereise.gather.demanddata.transportation_electrification.charging_optimization"]], "prereise.gather.demanddata.transportation_electrification.const module": [[78, "module-prereise.gather.demanddata.transportation_electrification.const"]], "prereise.gather.demanddata.transportation_electrification.data_helper module": [[78, "module-prereise.gather.demanddata.transportation_electrification.data_helper"]], "prereise.gather.demanddata.transportation_electrification.data_process module": [[78, "module-prereise.gather.demanddata.transportation_electrification.data_process"]], "prereise.gather.demanddata.transportation_electrification.dwelling module": [[78, "module-prereise.gather.demanddata.transportation_electrification.dwelling"]], "prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles module": [[78, "module-prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles"]], "prereise.gather.demanddata.transportation_electrification.generate_scaling_factors module": [[78, "prereise-gather-demanddata-transportation-electrification-generate-scaling-factors-module"]], "prereise.gather.demanddata.transportation_electrification.immediate module": [[78, "module-prereise.gather.demanddata.transportation_electrification.immediate"]], "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV module": [[78, "module-prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV"]], "prereise.gather.demanddata.transportation_electrification.smart_charging module": [[78, "module-prereise.gather.demanddata.transportation_electrification.smart_charging"]], "prereise.gather.demanddata.transportation_electrification.data package": [[79, "prereise-gather-demanddata-transportation-electrification-data-package"]], "prereise.gather.demanddata.transportation_electrification.tests package": [[80, "prereise-gather-demanddata-transportation-electrification-tests-package"]], "prereise.gather.demanddata.transportation_electrification.tests.test_dwelling module": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_dwelling"]], "prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles module": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate module": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration module": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration"]], "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration module": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration"]], "prereise.gather.flexibilitydata package": [[81, "prereise-gather-flexibilitydata-package"]], "prereise.gather.flexibilitydata.doe package": [[82, "prereise-gather-flexibilitydata-doe-package"]], "prereise.gather.flexibilitydata.doe.batch_process module": [[82, "module-prereise.gather.flexibilitydata.doe.batch_process"]], "prereise.gather.flexibilitydata.doe.bus_data module": [[82, "prereise-gather-flexibilitydata-doe-bus-data-module"]], "prereise.gather.flexibilitydata.doe.doe_data module": [[82, "module-prereise.gather.flexibilitydata.doe.doe_data"]], "prereise.gather.flexibilitydata.doe.geo_data module": [[82, "module-prereise.gather.flexibilitydata.doe.geo_data"]], "prereise.gather.flexibilitydata.doe.examples package": [[83, "prereise-gather-flexibilitydata-doe-examples-package"]], "prereise.gather.flexibilitydata.doe.examples.bus_example module": [[83, "prereise-gather-flexibilitydata-doe-examples-bus-example-module"]], "prereise.gather.flexibilitydata.doe.examples.doe_example module": [[83, "prereise-gather-flexibilitydata-doe-examples-doe-example-module"]], "prereise.gather.flexibilitydata.doe.examples.geo_example module": [[83, "prereise-gather-flexibilitydata-doe-examples-geo-example-module"]], "prereise.gather.flexibilitydata.doe.tests package": [[84, "prereise-gather-flexibilitydata-doe-tests-package"]], "prereise.gather.flexibilitydata.doe.tests.test_bus_data module": [[84, "prereise-gather-flexibilitydata-doe-tests-test-bus-data-module"]], "prereise.gather.flexibilitydata.doe.tests.test_geo_data module": [[84, "module-prereise.gather.flexibilitydata.doe.tests.test_geo_data"]], "prereise.gather.griddata package": [[85, "prereise-gather-griddata-package"]], "prereise.gather.griddata.transmission package": [[86, "prereise-gather-griddata-transmission-package"]], "prereise.gather.griddata.transmission.const module": [[86, "module-prereise.gather.griddata.transmission.const"]], "prereise.gather.griddata.transmission.geometry module": [[86, "module-prereise.gather.griddata.transmission.geometry"]], "prereise.gather.griddata.transmission.helpers module": [[86, "module-prereise.gather.griddata.transmission.helpers"]], "prereise.gather.griddata.transmission.tests package": [[87, "prereise-gather-griddata-transmission-tests-package"]], "prereise.gather.griddata.transmission.tests.test_geometry module": [[87, "module-prereise.gather.griddata.transmission.tests.test_geometry"]], "prereise.gather.griddata.transmission.tests.test_helpers module": [[87, "module-prereise.gather.griddata.transmission.tests.test_helpers"]], "prereise.gather.hydrodata package": [[88, "prereise-gather-hydrodata-package"]], "prereise.gather.hydrodata.eia package": [[89, "prereise-gather-hydrodata-eia-package"]], "prereise.gather.hydrodata.eia.decompose_profile module": [[89, "module-prereise.gather.hydrodata.eia.decompose_profile"]], "prereise.gather.hydrodata.eia.helpers module": [[89, "module-prereise.gather.hydrodata.eia.helpers"]], "prereise.gather.hydrodata.eia.interpolate_capacity_factors module": [[89, "module-prereise.gather.hydrodata.eia.interpolate_capacity_factors"]], "prereise.gather.hydrodata.eia.net_demand module": [[89, "module-prereise.gather.hydrodata.eia.net_demand"]], "prereise.gather.solardata package": [[90, "prereise-gather-solardata-package"]], "prereise.gather.solardata.helpers module": [[90, "module-prereise.gather.solardata.helpers"]], "prereise.gather.solardata.pv_tracking module": [[90, "module-prereise.gather.solardata.pv_tracking"]], "prereise.gather.solardata.ga_wind package": [[91, "prereise-gather-solardata-ga-wind-package"]], "prereise.gather.solardata.ga_wind.ga_wind module": [[91, "prereise-gather-solardata-ga-wind-ga-wind-module"]], "prereise.gather.solardata.ga_wind.helpers module": [[91, "module-prereise.gather.solardata.ga_wind.helpers"]], "prereise.gather.solardata.nsrdb package": [[92, "prereise-gather-solardata-nsrdb-package"]], "prereise.gather.solardata.nsrdb.naive module": [[92, "module-prereise.gather.solardata.nsrdb.naive"]], "prereise.gather.solardata.nsrdb.nrel_api module": [[92, "module-prereise.gather.solardata.nsrdb.nrel_api"]], "prereise.gather.solardata.nsrdb.sam module": [[92, "prereise-gather-solardata-nsrdb-sam-module"]], "prereise.gather.solardata.nsrdb.tests package": [[93, "prereise-gather-solardata-nsrdb-tests-package"]], "prereise.gather.solardata.nsrdb.tests.test_nrel_api module": [[93, "module-prereise.gather.solardata.nsrdb.tests.test_nrel_api"]], "prereise.gather.solardata.tests package": [[94, "prereise-gather-solardata-tests-package"]], "prereise.gather.solardata.tests.mock_pv_info module": [[94, "module-prereise.gather.solardata.tests.mock_pv_info"]], "prereise.gather.solardata.tests.test_helpers module": [[94, "module-prereise.gather.solardata.tests.test_helpers"]], "prereise.gather.solardata.tests.test_pv_tracking module": [[94, "module-prereise.gather.solardata.tests.test_pv_tracking"]], "prereise.gather.tests package": [[95, "prereise-gather-tests-package"]], "prereise.gather.tests.mock_generation module": [[95, "module-prereise.gather.tests.mock_generation"]], "prereise.gather.tests.test_helpers module": [[95, "module-prereise.gather.tests.test_helpers"]], "prereise.gather.tests.test_rate_limit module": [[95, "module-prereise.gather.tests.test_rate_limit"]], "prereise.gather.tests.test_retry module": [[95, "module-prereise.gather.tests.test_retry"]], "prereise.gather.winddata package": [[96, "prereise-gather-winddata-package"]], "prereise.gather.winddata.const module": [[96, "module-prereise.gather.winddata.const"]], "prereise.gather.winddata.impute module": [[96, "module-prereise.gather.winddata.impute"]], "prereise.gather.winddata.power_curves module": [[96, "module-prereise.gather.winddata.power_curves"]], "prereise.gather.winddata.hrrr package": [[97, "prereise-gather-winddata-hrrr-package"]], "prereise.gather.winddata.hrrr.calculations module": [[97, "module-prereise.gather.winddata.hrrr.calculations"]], "prereise.gather.winddata.hrrr.constants module": [[97, "module-prereise.gather.winddata.hrrr.constants"]], "prereise.gather.winddata.hrrr.downloader module": [[97, "module-prereise.gather.winddata.hrrr.downloader"]], "prereise.gather.winddata.hrrr.grib module": [[97, "module-prereise.gather.winddata.hrrr.grib"]], "prereise.gather.winddata.hrrr.helpers module": [[97, "module-prereise.gather.winddata.hrrr.helpers"]], "prereise.gather.winddata.hrrr.hrrr module": [[97, "module-prereise.gather.winddata.hrrr.hrrr"]], "prereise.gather.winddata.hrrr.hrrr_api module": [[97, "module-prereise.gather.winddata.hrrr.hrrr_api"]], "prereise.gather.winddata.hrrr.tests package": [[98, "prereise-gather-winddata-hrrr-tests-package"]], "prereise.gather.winddata.hrrr.tests.test_calculations module": [[98, "module-prereise.gather.winddata.hrrr.tests.test_calculations"]], "prereise.gather.winddata.hrrr.tests.test_grib module": [[98, "module-prereise.gather.winddata.hrrr.tests.test_grib"]], "prereise.gather.winddata.hrrr.tests.test_helpers module": [[98, "module-prereise.gather.winddata.hrrr.tests.test_helpers"]], "prereise.gather.winddata.hrrr.tests.test_hrrr_api module": [[98, "module-prereise.gather.winddata.hrrr.tests.test_hrrr_api"]], "prereise.gather.winddata.rap package": [[99, "prereise-gather-winddata-rap-package"]], "prereise.gather.winddata.rap.helpers module": [[99, "module-prereise.gather.winddata.rap.helpers"]], "prereise.gather.winddata.rap.noaa_api module": [[99, "module-prereise.gather.winddata.rap.noaa_api"]], "prereise.gather.winddata.rap.rap module": [[99, "module-prereise.gather.winddata.rap.rap"]], "prereise.gather.winddata.rap.tests package": [[100, "prereise-gather-winddata-rap-tests-package"]], "prereise.gather.winddata.rap.tests.test_noaa_api module": [[100, "module-prereise.gather.winddata.rap.tests.test_noaa_api"]]}, "indexentries": {"module": [[8, "module-postreise"], [9, "module-postreise.analyze"], [9, "module-postreise.analyze.demand"], [9, "module-postreise.analyze.time"], [10, "module-postreise.analyze.generation"], [10, "module-postreise.analyze.generation.binding"], [10, "module-postreise.analyze.generation.capacity"], [10, "module-postreise.analyze.generation.costs"], [10, "module-postreise.analyze.generation.curtailment"], [10, "module-postreise.analyze.generation.emissions"], [10, "module-postreise.analyze.generation.summarize"], [11, "module-postreise.analyze.generation.tests"], [11, "module-postreise.analyze.generation.tests.test_binding"], [11, "module-postreise.analyze.generation.tests.test_capacity"], [11, "module-postreise.analyze.generation.tests.test_costs"], [11, "module-postreise.analyze.generation.tests.test_curtailment"], [11, "module-postreise.analyze.generation.tests.test_emissions"], [11, "module-postreise.analyze.generation.tests.test_summarize"], [12, "module-postreise.analyze.tests"], [12, "module-postreise.analyze.tests.test_demand"], [12, "module-postreise.analyze.tests.test_time"], [13, "module-postreise.analyze.transmission"], [13, "module-postreise.analyze.transmission.congestion"], [13, "module-postreise.analyze.transmission.utilization"], [14, "module-postreise.analyze.transmission.tests"], [14, "module-postreise.analyze.transmission.tests.test_congestion_surplus"], [14, "module-postreise.analyze.transmission.tests.test_utilization"], [15, "module-postreise.data"], [16, "module-postreise.plot"], [16, "module-postreise.plot.canvas"], [16, "module-postreise.plot.check"], [16, "module-postreise.plot.colors"], [16, "module-postreise.plot.plot_bar_generation_max_min_actual"], [16, "module-postreise.plot.plot_bar_generation_stack"], [16, "module-postreise.plot.plot_bar_generation_vs_capacity"], [16, "module-postreise.plot.plot_bar_renewable_max_profile_actual"], [16, "module-postreise.plot.plot_bar_shortfall"], [16, "module-postreise.plot.plot_capacity_map"], [16, "module-postreise.plot.plot_carbon_bar"], [16, "module-postreise.plot.plot_carbon_map"], [16, "module-postreise.plot.plot_curtailment_ts"], [16, "module-postreise.plot.plot_energy_carbon_stack"], [16, "module-postreise.plot.plot_generation_ts_stack"], [16, "module-postreise.plot.plot_heatmap"], [16, "module-postreise.plot.plot_interconnection_map"], [16, "module-postreise.plot.plot_lmp_map"], [16, "module-postreise.plot.plot_pie_generation_vs_capacity"], [16, "module-postreise.plot.plot_powerflow_snapshot"], [16, "module-postreise.plot.plot_scatter_capacity_vs_capacity_factor"], [16, "module-postreise.plot.plot_scatter_capacity_vs_cost_curve_slope"], [16, "module-postreise.plot.plot_scatter_capacity_vs_curtailment"], [16, "module-postreise.plot.plot_shadowprice_map"], [16, "module-postreise.plot.plot_sim_vs_hist"], [16, "module-postreise.plot.plot_states"], [16, "module-postreise.plot.plot_tornado"], [16, "module-postreise.plot.plot_transmission_upgrades_map"], [16, "module-postreise.plot.plot_utilization_map"], [16, "module-postreise.plot.projection_helpers"], [17, "module-postreise.plot.tests"], [17, "module-postreise.plot.tests.conftest"], [17, "module-postreise.plot.tests.test_canvas"], [17, "module-postreise.plot.tests.test_check"], [17, "module-postreise.plot.tests.test_plot_bar_generation_max_min_actual"], [17, "module-postreise.plot.tests.test_plot_bar_generation_stack"], [17, "module-postreise.plot.tests.test_plot_bar_generation_vs_capacity"], [17, "module-postreise.plot.tests.test_plot_bar_renewable_max_profile_actual"], [17, "module-postreise.plot.tests.test_plot_bar_shortfall"], [17, "module-postreise.plot.tests.test_plot_capacity_map"], [17, "module-postreise.plot.tests.test_plot_carbon_bar"], [17, "module-postreise.plot.tests.test_plot_pie_generation_vs_capacity"], [17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor"], [17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope"], [17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment"], [17, "module-postreise.plot.tests.test_plot_shadowprice_map"], [17, "module-postreise.plot.tests.test_plot_sim_vs_hist"], [17, "module-postreise.plot.tests.test_plot_tornado"], [23, "module-powersimdata"], [24, "module-powersimdata.data_access"], [24, "module-powersimdata.data_access.context"], [24, "module-powersimdata.data_access.csv_store"], [24, "module-powersimdata.data_access.data_access"], [24, "module-powersimdata.data_access.execute_list"], [24, "module-powersimdata.data_access.fs_helper"], [24, "module-powersimdata.data_access.launcher"], [24, "module-powersimdata.data_access.scenario_list"], [24, "module-powersimdata.data_access.ssh_fs"], [25, "module-powersimdata.data_access.tests"], [25, "module-powersimdata.data_access.tests.test_data_access"], [25, "module-powersimdata.data_access.tests.test_execute_csv"], [25, "module-powersimdata.data_access.tests.test_launcher"], [25, "module-powersimdata.data_access.tests.test_scenario_csv"], [26, "module-powersimdata.design"], [26, "module-powersimdata.design.mimic_grid"], [26, "module-powersimdata.design.scenario_info"], [27, "module-powersimdata.design.compare"], [27, "module-powersimdata.design.compare.generation"], [27, "module-powersimdata.design.compare.helpers"], [27, "module-powersimdata.design.compare.transmission"], [28, "module-powersimdata.design.generation"], [28, "module-powersimdata.design.generation.clean_capacity_scaling"], [28, "module-powersimdata.design.generation.cost_curves"], [28, "module-powersimdata.design.generation.curtailment"], [29, "module-powersimdata.design.generation.tests"], [29, "module-powersimdata.design.generation.tests.test_clean_capacity_scaling"], [29, "module-powersimdata.design.generation.tests.test_cost_curves"], [29, "module-powersimdata.design.generation.tests.test_curtailment"], [30, "module-powersimdata.design.investment"], [30, "module-powersimdata.design.investment.const"], [30, "module-powersimdata.design.investment.create_mapping_files"], [30, "module-powersimdata.design.investment.inflation"], [30, "module-powersimdata.design.investment.investment_costs"], [31, "module-powersimdata.design.investment.tests"], [31, "module-powersimdata.design.investment.tests.test_investment_costs"], [32, "module-powersimdata.design.tests"], [32, "module-powersimdata.design.tests.test_scenario_info"], [33, "module-powersimdata.design.transmission"], [33, "module-powersimdata.design.transmission.mwmiles"], [33, "module-powersimdata.design.transmission.statelines"], [33, "module-powersimdata.design.transmission.substations"], [33, "module-powersimdata.design.transmission.upgrade"], [33, "module-powersimdata.design.transmission.zones"], [34, "module-powersimdata.design.transmission.tests"], [34, "module-powersimdata.design.transmission.tests.test_mwmiles"], [34, "module-powersimdata.design.transmission.tests.test_statelines"], [34, "module-powersimdata.design.transmission.tests.test_substations"], [34, "module-powersimdata.design.transmission.tests.test_upgrade"], [35, "module-powersimdata.input"], [35, "module-powersimdata.input.abstract_grid"], [35, "module-powersimdata.input.change_table"], [35, "module-powersimdata.input.check"], [35, "module-powersimdata.input.configure"], [35, "module-powersimdata.input.electrified_demand_input"], [35, "module-powersimdata.input.expansion_candidates"], [35, "module-powersimdata.input.grid"], [35, "module-powersimdata.input.helpers"], [35, "module-powersimdata.input.input_base"], [35, "module-powersimdata.input.input_data"], [35, "module-powersimdata.input.profile_input"], [35, "module-powersimdata.input.transform_demand"], [35, "module-powersimdata.input.transform_grid"], [35, "module-powersimdata.input.transform_profile"], [36, "module-powersimdata.input.changes"], [36, "module-powersimdata.input.changes.bus"], [36, "module-powersimdata.input.changes.demand_flex"], [36, "module-powersimdata.input.changes.electrification"], [36, "module-powersimdata.input.changes.helpers"], [36, "module-powersimdata.input.changes.plant"], [36, "module-powersimdata.input.changes.storage"], [37, "module-powersimdata.input.changes.tests"], [37, "module-powersimdata.input.changes.tests.test_add_electrification"], [38, "module-powersimdata.input.const"], [38, "module-powersimdata.input.const.grid_const"], [38, "module-powersimdata.input.const.pypsa_const"], [39, "module-powersimdata.input.converter"], [39, "module-powersimdata.input.converter.csv_to_grid"], [39, "module-powersimdata.input.converter.helpers"], [39, "module-powersimdata.input.converter.pypsa_to_grid"], [39, "module-powersimdata.input.converter.pypsa_to_profiles"], [40, "module-powersimdata.input.converter.tests"], [40, "module-powersimdata.input.converter.tests.test_pypsa_to_grid"], [40, "module-powersimdata.input.converter.tests.test_pypsa_to_profiles"], [41, "module-powersimdata.input.exporter"], [41, "module-powersimdata.input.exporter.export_to_pypsa"], [41, "module-powersimdata.input.exporter.export_to_reise"], [42, "module-powersimdata.input.tests"], [42, "module-powersimdata.input.tests.test_change_table"], [42, "module-powersimdata.input.tests.test_check"], [42, "module-powersimdata.input.tests.test_configure"], [42, "module-powersimdata.input.tests.test_expansion_candidates"], [42, "module-powersimdata.input.tests.test_grid"], [42, "module-powersimdata.input.tests.test_helpers"], [42, "module-powersimdata.input.tests.test_input_data"], [42, "module-powersimdata.input.tests.test_profile_input"], [42, "module-powersimdata.input.tests.test_transform_demand"], [42, "module-powersimdata.input.tests.test_transform_grid"], [42, "module-powersimdata.input.tests.test_transform_profile"], [43, "module-powersimdata.network"], [43, "module-powersimdata.network.csv_reader"], [43, "module-powersimdata.network.helpers"], [43, "module-powersimdata.network.model"], [43, "module-powersimdata.network.zenodo"], [44, "module-powersimdata.network.constants"], [44, "module-powersimdata.network.constants.model"], [45, "module-powersimdata.network.constants.carrier"], [45, "module-powersimdata.network.constants.carrier.color"], [45, "module-powersimdata.network.constants.carrier.efficiency"], [45, "module-powersimdata.network.constants.carrier.emission"], [45, "module-powersimdata.network.constants.carrier.label"], [45, "module-powersimdata.network.constants.carrier.plants"], [45, "module-powersimdata.network.constants.carrier.resource"], [45, "module-powersimdata.network.constants.carrier.storage"], [46, "module-powersimdata.network.constants.region"], [46, "module-powersimdata.network.constants.region.division"], [46, "module-powersimdata.network.constants.region.geography"], [46, "module-powersimdata.network.constants.region.interconnect"], [46, "module-powersimdata.network.constants.region.loadzone"], [46, "module-powersimdata.network.constants.region.mapping"], [46, "module-powersimdata.network.constants.region.zones"], [47, "module-powersimdata.network.constants.region.tests"], [47, "module-powersimdata.network.constants.region.tests.test_zones"], [48, "module-powersimdata.network.europe_tub"], [48, "module-powersimdata.network.europe_tub.model"], [49, "module-powersimdata.network.hifld"], [49, "module-powersimdata.network.hifld.model"], [50, "module-powersimdata.network.usa_tamu"], [50, "module-powersimdata.network.usa_tamu.model"], [51, "module-powersimdata.output"], [51, "module-powersimdata.output.output_data"], [52, "module-powersimdata.scenario"], [52, "module-powersimdata.scenario.analyze"], [52, "module-powersimdata.scenario.check"], [52, "module-powersimdata.scenario.create"], [52, "module-powersimdata.scenario.delete"], [52, "module-powersimdata.scenario.execute"], [52, "module-powersimdata.scenario.move"], [52, "module-powersimdata.scenario.ready"], [52, "module-powersimdata.scenario.scenario"], [52, "module-powersimdata.scenario.state"], [53, "module-powersimdata.scenario.tests"], [53, "module-powersimdata.scenario.tests.test_check"], [53, "module-powersimdata.scenario.tests.test_create"], [53, "module-powersimdata.scenario.tests.test_scenario"], [54, "module-powersimdata.tests"], [54, "module-powersimdata.tests.mock_analyze"], [54, "module-powersimdata.tests.mock_builder"], [54, "module-powersimdata.tests.mock_change_table"], [54, "module-powersimdata.tests.mock_context"], [54, "module-powersimdata.tests.mock_grid"], [54, "module-powersimdata.tests.mock_profile_input"], [54, "module-powersimdata.tests.mock_scenario"], [54, "module-powersimdata.tests.mock_scenario_info"], [54, "module-powersimdata.tests.test_mocks"], [55, "module-powersimdata.utility"], [55, "module-powersimdata.utility.config"], [55, "module-powersimdata.utility.distance"], [55, "module-powersimdata.utility.helpers"], [55, "module-powersimdata.utility.server_setup"], [56, "module-powersimdata.utility.templates"], [57, "module-powersimdata.utility.tests"], [57, "module-powersimdata.utility.tests.test_distance"], [57, "module-powersimdata.utility.tests.test_helpers"], [63, "module-prereise"], [64, "module-prereise.cli"], [64, "module-prereise.cli.constants"], [64, "module-prereise.cli.helpers"], [65, "module-prereise.cli.data_sources.demand_data"], [65, "module-prereise.cli.data_sources.exceptions"], [65, "module-prereise.cli.data_sources.hydro_data"], [67, "module-prereise.cli.download"], [68, "module-prereise.cli.download.tests"], [69, "module-prereise.cli.tests"], [69, "module-prereise.cli.tests.test_helpers"], [70, "module-prereise.gather"], [70, "module-prereise.gather.const"], [70, "module-prereise.gather.helpers"], [70, "module-prereise.gather.request_util"], [71, "module-prereise.gather.demanddata"], [72, "module-prereise.gather.demanddata.bldg_electrification"], [72, "module-prereise.gather.demanddata.bldg_electrification.const"], [72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook"], [72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw"], [72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg"], [72, "module-prereise.gather.demanddata.bldg_electrification.ff_model"], [72, "module-prereise.gather.demanddata.bldg_electrification.load_projection_scenario"], [73, "module-prereise.gather.demanddata.bldg_electrification.tests"], [73, "module-prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg"], [74, "module-prereise.gather.demanddata.eia"], [74, "module-prereise.gather.demanddata.eia.clean_data"], [74, "module-prereise.gather.demanddata.eia.get_eia_data"], [74, "module-prereise.gather.demanddata.eia.map_ba"], [75, "module-prereise.gather.demanddata.eia.tests"], [75, "module-prereise.gather.demanddata.eia.tests.test_clean_data"], [75, "module-prereise.gather.demanddata.eia.tests.test_get_eia_data"], [75, "module-prereise.gather.demanddata.eia.tests.test_map_ba"], [76, "module-prereise.gather.demanddata.nrel_efs"], [76, "module-prereise.gather.demanddata.nrel_efs.aggregate_demand"], [76, "module-prereise.gather.demanddata.nrel_efs.get_efs_annual_data"], [76, "module-prereise.gather.demanddata.nrel_efs.get_efs_data"], [76, "module-prereise.gather.demanddata.nrel_efs.map_states"], [77, "module-prereise.gather.demanddata.nrel_efs.tests"], [77, "module-prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand"], [77, "module-prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data"], [77, "module-prereise.gather.demanddata.nrel_efs.tests.test_map_states"], [78, "module-prereise.gather.demanddata.transportation_electrification"], [78, "module-prereise.gather.demanddata.transportation_electrification.charging_optimization"], [78, "module-prereise.gather.demanddata.transportation_electrification.const"], [78, "module-prereise.gather.demanddata.transportation_electrification.data_helper"], [78, "module-prereise.gather.demanddata.transportation_electrification.data_process"], [78, "module-prereise.gather.demanddata.transportation_electrification.dwelling"], [78, "module-prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles"], [78, "module-prereise.gather.demanddata.transportation_electrification.immediate"], [78, "module-prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV"], [78, "module-prereise.gather.demanddata.transportation_electrification.smart_charging"], [79, "module-prereise.gather.demanddata.transportation_electrification.data"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_dwelling"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration"], [80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration"], [81, "module-prereise.gather.flexibilitydata"], [82, "module-prereise.gather.flexibilitydata.doe"], [82, "module-prereise.gather.flexibilitydata.doe.batch_process"], [82, "module-prereise.gather.flexibilitydata.doe.doe_data"], [82, "module-prereise.gather.flexibilitydata.doe.geo_data"], [83, "module-prereise.gather.flexibilitydata.doe.examples"], [84, "module-prereise.gather.flexibilitydata.doe.tests"], [84, "module-prereise.gather.flexibilitydata.doe.tests.test_geo_data"], [85, "module-prereise.gather.griddata"], [86, "module-prereise.gather.griddata.transmission"], [86, "module-prereise.gather.griddata.transmission.const"], [86, "module-prereise.gather.griddata.transmission.geometry"], [86, "module-prereise.gather.griddata.transmission.helpers"], [87, "module-prereise.gather.griddata.transmission.tests"], [87, "module-prereise.gather.griddata.transmission.tests.test_geometry"], [87, "module-prereise.gather.griddata.transmission.tests.test_helpers"], [88, "module-prereise.gather.hydrodata"], [89, "module-prereise.gather.hydrodata.eia"], [89, "module-prereise.gather.hydrodata.eia.decompose_profile"], [89, "module-prereise.gather.hydrodata.eia.helpers"], [89, "module-prereise.gather.hydrodata.eia.interpolate_capacity_factors"], [89, "module-prereise.gather.hydrodata.eia.net_demand"], [90, "module-prereise.gather.solardata"], [90, "module-prereise.gather.solardata.helpers"], [90, "module-prereise.gather.solardata.pv_tracking"], [91, "module-prereise.gather.solardata.ga_wind"], [91, "module-prereise.gather.solardata.ga_wind.helpers"], [92, "module-prereise.gather.solardata.nsrdb"], [92, "module-prereise.gather.solardata.nsrdb.naive"], [92, "module-prereise.gather.solardata.nsrdb.nrel_api"], [93, "module-prereise.gather.solardata.nsrdb.tests"], [93, "module-prereise.gather.solardata.nsrdb.tests.test_nrel_api"], [94, "module-prereise.gather.solardata.tests"], [94, "module-prereise.gather.solardata.tests.mock_pv_info"], [94, "module-prereise.gather.solardata.tests.test_helpers"], [94, "module-prereise.gather.solardata.tests.test_pv_tracking"], [95, "module-prereise.gather.tests"], [95, "module-prereise.gather.tests.mock_generation"], [95, "module-prereise.gather.tests.test_helpers"], [95, "module-prereise.gather.tests.test_rate_limit"], [95, "module-prereise.gather.tests.test_retry"], [96, "module-prereise.gather.winddata"], [96, "module-prereise.gather.winddata.const"], [96, "module-prereise.gather.winddata.impute"], [96, "module-prereise.gather.winddata.power_curves"], [97, "module-prereise.gather.winddata.hrrr"], [97, "module-prereise.gather.winddata.hrrr.calculations"], [97, "module-prereise.gather.winddata.hrrr.constants"], [97, "module-prereise.gather.winddata.hrrr.downloader"], [97, "module-prereise.gather.winddata.hrrr.grib"], [97, "module-prereise.gather.winddata.hrrr.helpers"], [97, "module-prereise.gather.winddata.hrrr.hrrr"], [97, "module-prereise.gather.winddata.hrrr.hrrr_api"], [98, "module-prereise.gather.winddata.hrrr.tests"], [98, "module-prereise.gather.winddata.hrrr.tests.test_calculations"], [98, "module-prereise.gather.winddata.hrrr.tests.test_grib"], [98, "module-prereise.gather.winddata.hrrr.tests.test_helpers"], [98, "module-prereise.gather.winddata.hrrr.tests.test_hrrr_api"], [99, "module-prereise.gather.winddata.rap"], [99, "module-prereise.gather.winddata.rap.helpers"], [99, "module-prereise.gather.winddata.rap.noaa_api"], [99, "module-prereise.gather.winddata.rap.rap"], [100, "module-prereise.gather.winddata.rap.tests"], [100, "module-prereise.gather.winddata.rap.tests.test_noaa_api"]], "postreise": [[8, "module-postreise"]], "change_time_zone() (in module postreise.analyze.time)": [[9, "postreise.analyze.time.change_time_zone"]], "get_demand_time_series() (in module postreise.analyze.demand)": [[9, "postreise.analyze.demand.get_demand_time_series"]], "get_net_demand_time_series() (in module postreise.analyze.demand)": [[9, "postreise.analyze.demand.get_net_demand_time_series"]], "is_24_hour_format() (in module postreise.analyze.time)": [[9, "postreise.analyze.time.is_24_hour_format"]], "is_dst() (in module postreise.analyze.time)": [[9, "postreise.analyze.time.is_dst"]], "postreise.analyze": [[9, "module-postreise.analyze"]], "postreise.analyze.demand": [[9, "module-postreise.analyze.demand"]], "postreise.analyze.time": [[9, "module-postreise.analyze.time"]], "resample_time_series() (in module postreise.analyze.time)": [[9, "postreise.analyze.time.resample_time_series"]], "slice_time_series() (in module postreise.analyze.time)": [[9, "postreise.analyze.time.slice_time_series"]], "calculate_nldc() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.calculate_NLDC"]], "calculate_costs() (in module postreise.analyze.generation.costs)": [[10, "postreise.analyze.generation.costs.calculate_costs"]], "calculate_curtailment_percentage_by_resources() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_percentage_by_resources"]], "calculate_curtailment_time_series() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_time_series"]], "calculate_curtailment_time_series_by_areas() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_time_series_by_areas"]], "calculate_curtailment_time_series_by_areas_and_resources() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_time_series_by_areas_and_resources"]], "calculate_curtailment_time_series_by_resources() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_time_series_by_resources"]], "calculate_curtailment_time_series_by_resources_and_areas() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.calculate_curtailment_time_series_by_resources_and_areas"]], "calculate_net_load_peak() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.calculate_net_load_peak"]], "carbon_diff() (in module postreise.analyze.generation.emissions)": [[10, "postreise.analyze.generation.emissions.carbon_diff"]], "generate_emissions_stats() (in module postreise.analyze.generation.emissions)": [[10, "postreise.analyze.generation.emissions.generate_emissions_stats"]], "get_capacity_by_resources() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.get_capacity_by_resources"]], "get_capacity_factor_time_series() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.get_capacity_factor_time_series"]], "get_curtailment_time_series() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.get_curtailment_time_series"]], "get_generation_time_series_by_resources() (in module postreise.analyze.generation.summarize)": [[10, "postreise.analyze.generation.summarize.get_generation_time_series_by_resources"]], "get_storage_capacity() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.get_storage_capacity"]], "get_storage_time_series() (in module postreise.analyze.generation.summarize)": [[10, "postreise.analyze.generation.summarize.get_storage_time_series"]], "pmax_constraints() (in module postreise.analyze.generation.binding)": [[10, "postreise.analyze.generation.binding.pmax_constraints"]], "pmin_constraints() (in module postreise.analyze.generation.binding)": [[10, "postreise.analyze.generation.binding.pmin_constraints"]], "postreise.analyze.generation": [[10, "module-postreise.analyze.generation"]], "postreise.analyze.generation.binding": [[10, "module-postreise.analyze.generation.binding"]], "postreise.analyze.generation.capacity": [[10, "module-postreise.analyze.generation.capacity"]], "postreise.analyze.generation.costs": [[10, "module-postreise.analyze.generation.costs"]], "postreise.analyze.generation.curtailment": [[10, "module-postreise.analyze.generation.curtailment"]], "postreise.analyze.generation.emissions": [[10, "module-postreise.analyze.generation.emissions"]], "postreise.analyze.generation.summarize": [[10, "module-postreise.analyze.generation.summarize"]], "ramp_constraints() (in module postreise.analyze.generation.binding)": [[10, "postreise.analyze.generation.binding.ramp_constraints"]], "sum_capacity_by_type_zone() (in module postreise.analyze.generation.capacity)": [[10, "postreise.analyze.generation.capacity.sum_capacity_by_type_zone"]], "sum_generation_by_state() (in module postreise.analyze.generation.summarize)": [[10, "postreise.analyze.generation.summarize.sum_generation_by_state"]], "sum_generation_by_type_zone() (in module postreise.analyze.generation.summarize)": [[10, "postreise.analyze.generation.summarize.sum_generation_by_type_zone"]], "summarize_curtailment_by_bus() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.summarize_curtailment_by_bus"]], "summarize_curtailment_by_location() (in module postreise.analyze.generation.curtailment)": [[10, "postreise.analyze.generation.curtailment.summarize_curtailment_by_location"]], "summarize_emissions_by_bus() (in module postreise.analyze.generation.emissions)": [[10, "postreise.analyze.generation.emissions.summarize_emissions_by_bus"]], "summarize_hist_gen() (in module postreise.analyze.generation.summarize)": [[10, "postreise.analyze.generation.summarize.summarize_hist_gen"]], "testcalculatecurtailmentpercentage (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage"]], "testcalculatecurtailmenttimeseries (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries"]], "testcalculatecurtailmenttimeseriesgrouped (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped"]], "testcarboncalculation (class in postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.TestCarbonCalculation"]], "testcheckepsilon (class in postreise.analyze.generation.tests.test_binding)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon"]], "testcheckresourceinscenario (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCheckResourceInScenario"]], "testcheckscenario (class in postreise.analyze.generation.tests.test_binding)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckScenario"]], "testemissionstatsarguments (class in postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionStatsArguments"]], "testemissionssummarization (class in postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionsSummarization"]], "testgetcurtailmenttimeseries (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestGetCurtailmentTimeSeries"]], "testnoxcalculation (class in postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.TestNOxCalculation"]], "testpmaxconstraints (class in postreise.analyze.generation.tests.test_binding)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints"]], "testpminconstraints (class in postreise.analyze.generation.tests.test_binding)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints"]], "testrampconstraints (class in postreise.analyze.generation.tests.test_binding)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints"]], "testso2calculation (class in postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.TestSO2Calculation"]], "testsumgenerationbytypezone (class in postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone"]], "testsummarizecurtailmentbybus (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByBus"]], "testsummarizecurtailmentbylocation (class in postreise.analyze.generation.tests.test_curtailment)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByLocation"]], "get_default_expected() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.get_default_expected"]], "get_default_expected() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.get_default_expected"]], "get_default_expected() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.get_default_expected"]], "hist_gen_raw() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.hist_gen_raw"]], "mock_gencost() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.mock_gencost"]], "mock_gencost() (in module postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.mock_gencost"]], "mock_gencost_data() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.mock_gencost_data"]], "mock_pg() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.mock_pg"]], "mock_pg() (in module postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.mock_pg"]], "mock_plant() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.mock_plant"]], "mock_plant() (in module postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.mock_plant"]], "mock_scenario() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.mock_scenario"]], "postreise.analyze.generation.tests": [[11, "module-postreise.analyze.generation.tests"]], "postreise.analyze.generation.tests.test_binding": [[11, "module-postreise.analyze.generation.tests.test_binding"]], "postreise.analyze.generation.tests.test_capacity": [[11, "module-postreise.analyze.generation.tests.test_capacity"]], "postreise.analyze.generation.tests.test_costs": [[11, "module-postreise.analyze.generation.tests.test_costs"]], "postreise.analyze.generation.tests.test_curtailment": [[11, "module-postreise.analyze.generation.tests.test_curtailment"]], "postreise.analyze.generation.tests.test_emissions": [[11, "module-postreise.analyze.generation.tests.test_emissions"]], "postreise.analyze.generation.tests.test_summarize": [[11, "module-postreise.analyze.generation.tests.test_summarize"]], "scenario() (in module postreise.analyze.generation.tests.test_emissions)": [[11, "postreise.analyze.generation.tests.test_emissions.scenario"]], "setup() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.setUp"]], "setup() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.setUp"]], "setup() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.setUp"]], "setup() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.setUp"]], "sim_gen_result() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.sim_gen_result"]], "test_nldc_calculation_solar() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_solar"]], "test_nldc_calculation_solar_wind() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_solar_wind"]], "test_nldc_calculation_wind_5_hour() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_5_hour"]], "test_nldc_calculation_wind_list() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_list"]], "test_nldc_calculation_wind_set() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_set"]], "test_nldc_calculation_wind_solar() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_solar"]], "test_nldc_calculation_wind_str() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_str"]], "test_nldc_calculation_wind_tuple() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_NLDC_calculation_wind_tuple"]], "test_bad_scenario_state() (postreise.analyze.generation.tests.test_binding.testcheckscenario method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckScenario.test_bad_scenario_state"]], "test_bad_scenario_type() (postreise.analyze.generation.tests.test_binding.testcheckscenario method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckScenario.test_bad_scenario_type"]], "test_bad_type() (postreise.analyze.generation.tests.test_binding.testcheckepsilon method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon.test_bad_type"]], "test_bad_value() (postreise.analyze.generation.tests.test_binding.testcheckepsilon method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon.test_bad_value"]], "test_calculate_cost_equal_both_methods() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_calculate_cost_equal_both_methods"]], "test_calculate_curtailment_percentage_default() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmentpercentage method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage.test_calculate_curtailment_percentage_default"]], "test_calculate_curtailment_percentage_solar() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmentpercentage method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage.test_calculate_curtailment_percentage_solar"]], "test_calculate_curtailment_percentage_solar_wind() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmentpercentage method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage.test_calculate_curtailment_percentage_solar_wind"]], "test_calculate_curtailment_percentage_wind() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmentpercentage method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage.test_calculate_curtailment_percentage_wind"]], "test_calculate_curtailment_percentage_wind_offshore() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmentpercentage method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentPercentage.test_calculate_curtailment_percentage_wind_offshore"]], "test_calculate_curtailment_time_series_default() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_default"]], "test_calculate_curtailment_time_series_solar() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_solar"]], "test_calculate_curtailment_time_series_solar_wind_set() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_solar_wind_set"]], "test_calculate_curtailment_time_series_solar_wind_tuple() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_solar_wind_tuple"]], "test_calculate_curtailment_time_series_wind_argument_type() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_wind_argument_type"]], "test_calculate_curtailment_time_series_wind_solar_list() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeries.test_calculate_curtailment_time_series_wind_solar_list"]], "test_calculate_net_load_peak_solar() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_solar"]], "test_calculate_net_load_peak_solar_5() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_solar_5"]], "test_calculate_net_load_peak_solar_wind() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_solar_wind"]], "test_calculate_net_load_peak_solar_wind_5() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_solar_wind_5"]], "test_calculate_net_load_peak_wind() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_wind"]], "test_calculate_net_load_peak_wind_5() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_calculate_net_load_peak_wind_5"]], "test_calculate_nox_disallowed_method() (postreise.analyze.generation.tests.test_emissions.testnoxcalculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestNOxCalculation.test_calculate_nox_disallowed_method"]], "test_calculate_nox_simple() (postreise.analyze.generation.tests.test_emissions.testnoxcalculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestNOxCalculation.test_calculate_nox_simple"]], "test_calculate_so2_disallowed_method() (postreise.analyze.generation.tests.test_emissions.testso2calculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestSO2Calculation.test_calculate_so2_disallowed_method"]], "test_calculate_so2_simple() (postreise.analyze.generation.tests.test_emissions.testso2calculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestSO2Calculation.test_calculate_so2_simple"]], "test_carbon_calc_always_on() (postreise.analyze.generation.tests.test_emissions.testcarboncalculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestCarbonCalculation.test_carbon_calc_always_on"]], "test_carbon_calc_decommit() (postreise.analyze.generation.tests.test_emissions.testcarboncalculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestCarbonCalculation.test_carbon_calc_decommit"]], "test_carbon_calc_simple() (postreise.analyze.generation.tests.test_emissions.testcarboncalculation method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestCarbonCalculation.test_carbon_calc_simple"]], "test_carbon_diff() (postreise.analyze.generation.tests.test_emissions.testemissionssummarization method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionsSummarization.test_carbon_diff"]], "test_curtailment_time_series_by_areas() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseriesgrouped method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped.test_curtailment_time_series_by_areas"]], "test_curtailment_time_series_by_areas_and_resource() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseriesgrouped method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped.test_curtailment_time_series_by_areas_and_resource"]], "test_curtailment_time_series_by_areas_and_resources() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseriesgrouped method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped.test_curtailment_time_series_by_areas_and_resources"]], "test_curtailment_time_series_by_resource_and_area() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseriesgrouped method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped.test_curtailment_time_series_by_resource_and_area"]], "test_curtailment_time_series_by_resources_and_areas() (postreise.analyze.generation.tests.test_curtailment.testcalculatecurtailmenttimeseriesgrouped method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCalculateCurtailmentTimeSeriesGrouped.test_curtailment_time_series_by_resources_and_areas"]], "test_emissions_is_non_negative() (postreise.analyze.generation.tests.test_emissions.testemissionssummarization method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionsSummarization.test_emissions_is_non_negative"]], "test_emissions_summarization() (postreise.analyze.generation.tests.test_emissions.testemissionssummarization method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionsSummarization.test_emissions_summarization"]], "test_error_geothermal_curtailment() (postreise.analyze.generation.tests.test_curtailment.testcheckresourceinscenario method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCheckResourceInScenario.test_error_geothermal_curtailment"]], "test_error_no_solar() (postreise.analyze.generation.tests.test_curtailment.testcheckresourceinscenario method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestCheckResourceInScenario.test_error_no_solar"]], "test_failure_hours_type() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_hours_type"]], "test_failure_no_resources() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_no_resources"]], "test_failure_no_resources_present() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_no_resources_present"]], "test_failure_one_resource_not_present() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_one_resource_not_present"]], "test_failure_resources_type_dict() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_resources_type_dict"]], "test_failure_scenario_type() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_scenario_type"]], "test_failure_too_many_hours() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_too_many_hours"]], "test_failure_zero_hours() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_failure_zero_hours"]], "test_get_capacity_by_resources() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_get_capacity_by_resources"]], "test_get_capacity_factor_time_series() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_get_capacity_factor_time_series"]], "test_get_curtailment_time_series() (postreise.analyze.generation.tests.test_curtailment.testgetcurtailmenttimeseries method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestGetCurtailmentTimeSeries.test_get_curtailment_time_series"]], "test_get_generation_time_series_by_resources() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_get_generation_time_series_by_resources"]], "test_get_storage_capacity() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_get_storage_capacity"]], "test_get_storage_time_series() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_get_storage_time_series"]], "test_good_float_value() (postreise.analyze.generation.tests.test_binding.testcheckepsilon method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon.test_good_float_value"]], "test_good_int_value() (postreise.analyze.generation.tests.test_binding.testcheckepsilon method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon.test_good_int_value"]], "test_good_scenario() (postreise.analyze.generation.tests.test_binding.testcheckscenario method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckScenario.test_good_scenario"]], "test_method_type() (postreise.analyze.generation.tests.test_emissions.testemissionstatsarguments method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionStatsArguments.test_method_type"]], "test_method_value() (postreise.analyze.generation.tests.test_emissions.testemissionstatsarguments method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionStatsArguments.test_method_value"]], "test_negative_pg() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_negative_pg"]], "test_pass_just_gencost() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_pass_just_gencost"]], "test_pass_just_pg() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_pass_just_pg"]], "test_pass_nothing() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_pass_nothing"]], "test_pass_too_many_things() (in module postreise.analyze.generation.tests.test_costs)": [[11, "postreise.analyze.generation.tests.test_costs.test_pass_too_many_things"]], "test_pmax_constraints_default() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.test_pmax_constraints_default"]], "test_pmax_constraints_default_sepc_epsilon1() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.test_pmax_constraints_default_sepc_epsilon1"]], "test_pmax_constraints_default_sepc_epsilon2() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.test_pmax_constraints_default_sepc_epsilon2"]], "test_pmax_constraints_default_sepc_epsilon3() (postreise.analyze.generation.tests.test_binding.testpmaxconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPmaxConstraints.test_pmax_constraints_default_sepc_epsilon3"]], "test_pmin_constraints_default() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.test_pmin_constraints_default"]], "test_pmin_constraints_default_spec_epsilon1() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.test_pmin_constraints_default_spec_epsilon1"]], "test_pmin_constraints_default_spec_epsilon2() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.test_pmin_constraints_default_spec_epsilon2"]], "test_pmin_constraints_default_spec_epsilon3() (postreise.analyze.generation.tests.test_binding.testpminconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestPminConstraints.test_pmin_constraints_default_spec_epsilon3"]], "test_pollutant_value() (postreise.analyze.generation.tests.test_emissions.testemissionstatsarguments method)": [[11, "postreise.analyze.generation.tests.test_emissions.TestEmissionStatsArguments.test_pollutant_value"]], "test_print_statement() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_print_statement"]], "test_ramp_constraints_default() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.test_ramp_constraints_default"]], "test_ramp_constraints_spec_epsilon1() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.test_ramp_constraints_spec_epsilon1"]], "test_ramp_constraints_spec_epsilon2() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.test_ramp_constraints_spec_epsilon2"]], "test_ramp_constraints_spec_epsilon3() (postreise.analyze.generation.tests.test_binding.testrampconstraints method)": [[11, "postreise.analyze.generation.tests.test_binding.TestRampConstraints.test_ramp_constraints_spec_epsilon3"]], "test_sum_capacity_by_type_zone() (in module postreise.analyze.generation.tests.test_capacity)": [[11, "postreise.analyze.generation.tests.test_capacity.test_sum_capacity_by_type_zone"]], "test_sum_generation() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_sum_generation"]], "test_sum_generation_by_state_shape() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_sum_generation_by_state_shape"]], "test_sum_generation_by_state_values_scaled() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_sum_generation_by_state_values_scaled"]], "test_summarize_curtailment_by_bus() (postreise.analyze.generation.tests.test_curtailment.testsummarizecurtailmentbybus method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByBus.test_summarize_curtailment_by_bus"]], "test_summarize_curtailment_by_location() (postreise.analyze.generation.tests.test_curtailment.testsummarizecurtailmentbylocation method)": [[11, "postreise.analyze.generation.tests.test_curtailment.TestSummarizeCurtailmentByLocation.test_summarize_curtailment_by_location"]], "test_summarize_hist_gen_include_areas() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_summarize_hist_gen_include_areas"]], "test_summarize_hist_gen_shape() (in module postreise.analyze.generation.tests.test_summarize)": [[11, "postreise.analyze.generation.tests.test_summarize.test_summarize_hist_gen_shape"]], "test_with_scenario_not_analyze() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_with_scenario_not_analyze"]], "test_with_string() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_with_string"]], "test_with_time_change() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_with_time_change"]], "test_with_time_change_and_time_slice() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_with_time_change_and_time_slice"]], "test_with_time_slice() (postreise.analyze.generation.tests.test_summarize.testsumgenerationbytypezone method)": [[11, "postreise.analyze.generation.tests.test_summarize.TestSumGenerationByTypeZone.test_with_time_slice"]], "test_zero() (postreise.analyze.generation.tests.test_binding.testcheckepsilon method)": [[11, "postreise.analyze.generation.tests.test_binding.TestCheckEpsilon.test_zero"]], "postreise.analyze.tests": [[12, "module-postreise.analyze.tests"]], "postreise.analyze.tests.test_demand": [[12, "module-postreise.analyze.tests.test_demand"]], "postreise.analyze.tests.test_time": [[12, "module-postreise.analyze.tests.test_time"]], "test_change_time_zone() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_change_time_zone"]], "test_change_time_zone_argument_type() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_change_time_zone_argument_type"]], "test_change_time_zone_argument_value() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_change_time_zone_argument_value"]], "test_daily_resampling_incomplete_and_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_incomplete_and_time_shift_mean"]], "test_daily_resampling_incomplete_and_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_incomplete_and_time_shift_sum"]], "test_daily_resampling_incomplete_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_incomplete_mean"]], "test_daily_resampling_incomplete_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_incomplete_sum"]], "test_daily_resampling_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_mean"]], "test_daily_resampling_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_sum"]], "test_daily_resampling_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_time_shift_mean"]], "test_daily_resampling_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_daily_resampling_time_shift_sum"]], "test_get_demand_time_series() (in module postreise.analyze.tests.test_demand)": [[12, "postreise.analyze.tests.test_demand.test_get_demand_time_series"]], "test_get_net_demand_time_series() (in module postreise.analyze.tests.test_demand)": [[12, "postreise.analyze.tests.test_demand.test_get_net_demand_time_series"]], "test_is_24_hour_format() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_is_24_hour_format"]], "test_is_dst() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_is_dst"]], "test_monthly_resampling_incomplete_and_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_incomplete_and_time_shift_mean"]], "test_monthly_resampling_incomplete_and_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_incomplete_and_time_shift_sum"]], "test_monthly_resampling_incomplete_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_incomplete_mean"]], "test_monthly_resampling_incomplete_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_incomplete_sum"]], "test_monthly_resampling_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_mean"]], "test_monthly_resampling_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_sum"]], "test_monthly_resampling_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_time_shift_mean"]], "test_monthly_resampling_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_monthly_resampling_time_shift_sum"]], "test_resampling_argument_value() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_resampling_argument_value"]], "test_slicing() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_slicing"]], "test_slicing_argument_value() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_slicing_argument_value"]], "test_weekly_resampling_incomplete_and_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_incomplete_and_time_shift_mean"]], "test_weekly_resampling_incomplete_and_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_incomplete_and_time_shift_sum"]], "test_weekly_resampling_incomplete_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_incomplete_mean"]], "test_weekly_resampling_incomplete_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_incomplete_sum"]], "test_weekly_resampling_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_mean"]], "test_weekly_resampling_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_sum"]], "test_weekly_resampling_time_shift_mean() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_time_shift_mean"]], "test_weekly_resampling_time_shift_sum() (in module postreise.analyze.tests.test_time)": [[12, "postreise.analyze.tests.test_time.test_weekly_resampling_time_shift_sum"]], "calculate_congestion_surplus() (in module postreise.analyze.transmission.congestion)": [[13, "postreise.analyze.transmission.congestion.calculate_congestion_surplus"]], "generate_cong_stats() (in module postreise.analyze.transmission.utilization)": [[13, "postreise.analyze.transmission.utilization.generate_cong_stats"]], "get_utilization() (in module postreise.analyze.transmission.utilization)": [[13, "postreise.analyze.transmission.utilization.get_utilization"]], "postreise.analyze.transmission": [[13, "module-postreise.analyze.transmission"]], "postreise.analyze.transmission.congestion": [[13, "module-postreise.analyze.transmission.congestion"]], "postreise.analyze.transmission.utilization": [[13, "module-postreise.analyze.transmission.utilization"]], "postreise.analyze.transmission.tests": [[14, "module-postreise.analyze.transmission.tests"]], "postreise.analyze.transmission.tests.test_congestion_surplus": [[14, "module-postreise.analyze.transmission.tests.test_congestion_surplus"]], "postreise.analyze.transmission.tests.test_utilization": [[14, "module-postreise.analyze.transmission.tests.test_utilization"]], "test_calculate_congestion_surplus_single_time() (in module postreise.analyze.transmission.tests.test_congestion_surplus)": [[14, "postreise.analyze.transmission.tests.test_congestion_surplus.test_calculate_congestion_surplus_single_time"]], "test_calculate_congestion_surplus_three_times() (in module postreise.analyze.transmission.tests.test_congestion_surplus)": [[14, "postreise.analyze.transmission.tests.test_congestion_surplus.test_calculate_congestion_surplus_three_times"]], "test_count_hours_gt_threshold() (in module postreise.analyze.transmission.tests.test_utilization)": [[14, "postreise.analyze.transmission.tests.test_utilization.test_count_hours_gt_threshold"]], "test_generate_cong_stats() (in module postreise.analyze.transmission.tests.test_utilization)": [[14, "postreise.analyze.transmission.tests.test_utilization.test_generate_cong_stats"]], "test_get_utilization() (in module postreise.analyze.transmission.tests.test_utilization)": [[14, "postreise.analyze.transmission.tests.test_utilization.test_get_utilization"]], "test_get_utilization_median() (in module postreise.analyze.transmission.tests.test_utilization)": [[14, "postreise.analyze.transmission.tests.test_utilization.test_get_utilization_median"]], "postreise.data": [[15, "module-postreise.data"]], "plotsettings (class in postreise.plot.plot_sim_vs_hist)": [[16, "postreise.plot.plot_sim_vs_hist.PlotSettings"]], "add_arrows() (in module postreise.plot.plot_powerflow_snapshot)": [[16, "postreise.plot.plot_powerflow_snapshot.add_arrows"]], "add_emission() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.add_emission"]], "add_lmp() (in module postreise.plot.plot_lmp_map)": [[16, "postreise.plot.plot_lmp_map.add_lmp"]], "add_plant_capacity() (in module postreise.plot.plot_capacity_map)": [[16, "postreise.plot.plot_capacity_map.add_plant_capacity"]], "add_state_borders() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.add_state_borders"]], "add_state_colors() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.add_state_colors"]], "add_state_legends() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.add_state_legends"]], "add_state_tooltips() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.add_state_tooltips"]], "add_transmission_upgrades() (in module postreise.plot.plot_transmission_upgrades_map)": [[16, "postreise.plot.plot_transmission_upgrades_map.add_transmission_upgrades"]], "aggregate_bus_emission_difference() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.aggregate_bus_emission_difference"]], "aggregate_bus_emission_generator() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.aggregate_bus_emission_generator"]], "aggregate_bus_lmp() (in module postreise.plot.plot_lmp_map)": [[16, "postreise.plot.plot_lmp_map.aggregate_bus_lmp"]], "aggregate_plant_generation() (in module postreise.plot.plot_powerflow_snapshot)": [[16, "postreise.plot.plot_powerflow_snapshot.aggregate_plant_generation"]], "combine_bus_info_and_emission() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.combine_bus_info_and_emission"]], "convert_shapefile_to_latlon_dict() (in module postreise.plot.projection_helpers)": [[16, "postreise.plot.projection_helpers.convert_shapefile_to_latlon_dict"]], "count_nodes_per_state() (in module postreise.plot.plot_interconnection_map)": [[16, "postreise.plot.plot_interconnection_map.count_nodes_per_state"]], "create_map_canvas() (in module postreise.plot.canvas)": [[16, "postreise.plot.canvas.create_map_canvas"]], "download_states_json() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.download_states_json"]], "download_states_shapefile() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.download_states_shapefile"]], "expand_data_source() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.expand_data_source"]], "fontsize (postreise.plot.plot_sim_vs_hist.plotsettings attribute)": [[16, "postreise.plot.plot_sim_vs_hist.PlotSettings.fontsize"]], "get_state_borders() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.get_state_borders"]], "make_gen_cap_custom_data() (in module postreise.plot.plot_bar_generation_vs_capacity)": [[16, "postreise.plot.plot_bar_generation_vs_capacity.make_gen_cap_custom_data"]], "map_carbon_emission_difference() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.map_carbon_emission_difference"]], "map_carbon_emission_generator() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.map_carbon_emission_generator"]], "map_interconnections() (in module postreise.plot.plot_interconnection_map)": [[16, "postreise.plot.plot_interconnection_map.map_interconnections"]], "map_lmp() (in module postreise.plot.plot_lmp_map)": [[16, "postreise.plot.plot_lmp_map.map_lmp"]], "map_plant_capacity() (in module postreise.plot.plot_capacity_map)": [[16, "postreise.plot.plot_capacity_map.map_plant_capacity"]], "map_risk_bind() (in module postreise.plot.plot_utilization_map)": [[16, "postreise.plot.plot_utilization_map.map_risk_bind"]], "map_transmission_upgrades() (in module postreise.plot.plot_transmission_upgrades_map)": [[16, "postreise.plot.plot_transmission_upgrades_map.map_transmission_upgrades"]], "map_utilization() (in module postreise.plot.plot_utilization_map)": [[16, "postreise.plot.plot_utilization_map.map_utilization"]], "plot_bar_generation_max_min_actual() (in module postreise.plot.plot_bar_generation_max_min_actual)": [[16, "postreise.plot.plot_bar_generation_max_min_actual.plot_bar_generation_max_min_actual"]], "plot_bar_generation_stack() (in module postreise.plot.plot_bar_generation_stack)": [[16, "postreise.plot.plot_bar_generation_stack.plot_bar_generation_stack"]], "plot_bar_generation_vs_capacity() (in module postreise.plot.plot_bar_generation_vs_capacity)": [[16, "postreise.plot.plot_bar_generation_vs_capacity.plot_bar_generation_vs_capacity"]], "plot_bar_renewable_max_profile_actual() (in module postreise.plot.plot_bar_renewable_max_profile_actual)": [[16, "postreise.plot.plot_bar_renewable_max_profile_actual.plot_bar_renewable_max_profile_actual"]], "plot_bar_shortfall() (in module postreise.plot.plot_bar_shortfall)": [[16, "postreise.plot.plot_bar_shortfall.plot_bar_shortfall"]], "plot_carbon_bar() (in module postreise.plot.plot_carbon_bar)": [[16, "postreise.plot.plot_carbon_bar.plot_carbon_bar"]], "plot_curtailment_time_series() (in module postreise.plot.plot_curtailment_ts)": [[16, "postreise.plot.plot_curtailment_ts.plot_curtailment_time_series"]], "plot_generation_sim_vs_hist() (in module postreise.plot.plot_sim_vs_hist)": [[16, "postreise.plot.plot_sim_vs_hist.plot_generation_sim_vs_hist"]], "plot_generation_time_series_stack() (in module postreise.plot.plot_generation_ts_stack)": [[16, "postreise.plot.plot_generation_ts_stack.plot_generation_time_series_stack"]], "plot_heatmap() (in module postreise.plot.plot_heatmap)": [[16, "postreise.plot.plot_heatmap.plot_heatmap"]], "plot_n_scenarios() (in module postreise.plot.plot_energy_carbon_stack)": [[16, "postreise.plot.plot_energy_carbon_stack.plot_n_scenarios"]], "plot_pie_generation_vs_capacity() (in module postreise.plot.plot_pie_generation_vs_capacity)": [[16, "postreise.plot.plot_pie_generation_vs_capacity.plot_pie_generation_vs_capacity"]], "plot_powerflow_snapshot() (in module postreise.plot.plot_powerflow_snapshot)": [[16, "postreise.plot.plot_powerflow_snapshot.plot_powerflow_snapshot"]], "plot_scatter_capacity_vs_capacity_factor() (in module postreise.plot.plot_scatter_capacity_vs_capacity_factor)": [[16, "postreise.plot.plot_scatter_capacity_vs_capacity_factor.plot_scatter_capacity_vs_capacity_factor"]], "plot_scatter_capacity_vs_cost_curve_slope() (in module postreise.plot.plot_scatter_capacity_vs_cost_curve_slope)": [[16, "postreise.plot.plot_scatter_capacity_vs_cost_curve_slope.plot_scatter_capacity_vs_cost_curve_slope"]], "plot_scatter_capacity_vs_curtailment() (in module postreise.plot.plot_scatter_capacity_vs_curtailment)": [[16, "postreise.plot.plot_scatter_capacity_vs_curtailment.plot_scatter_capacity_vs_curtailment"]], "plot_shadowprice() (in module postreise.plot.plot_shadowprice_map)": [[16, "postreise.plot.plot_shadowprice_map.plot_shadowprice"]], "plot_states() (in module postreise.plot.plot_states)": [[16, "postreise.plot.plot_states.plot_states"]], "plot_tornado() (in module postreise.plot.plot_tornado)": [[16, "postreise.plot.plot_tornado.plot_tornado"]], "postreise.plot": [[16, "module-postreise.plot"]], "postreise.plot.canvas": [[16, "module-postreise.plot.canvas"]], "postreise.plot.check": [[16, "module-postreise.plot.check"]], "postreise.plot.colors": [[16, "module-postreise.plot.colors"]], "postreise.plot.plot_bar_generation_max_min_actual": [[16, "module-postreise.plot.plot_bar_generation_max_min_actual"]], "postreise.plot.plot_bar_generation_stack": [[16, "module-postreise.plot.plot_bar_generation_stack"]], "postreise.plot.plot_bar_generation_vs_capacity": [[16, "module-postreise.plot.plot_bar_generation_vs_capacity"]], "postreise.plot.plot_bar_renewable_max_profile_actual": [[16, "module-postreise.plot.plot_bar_renewable_max_profile_actual"]], "postreise.plot.plot_bar_shortfall": [[16, "module-postreise.plot.plot_bar_shortfall"]], "postreise.plot.plot_capacity_map": [[16, "module-postreise.plot.plot_capacity_map"]], "postreise.plot.plot_carbon_bar": [[16, "module-postreise.plot.plot_carbon_bar"]], "postreise.plot.plot_carbon_map": [[16, "module-postreise.plot.plot_carbon_map"]], "postreise.plot.plot_curtailment_ts": [[16, "module-postreise.plot.plot_curtailment_ts"]], "postreise.plot.plot_energy_carbon_stack": [[16, "module-postreise.plot.plot_energy_carbon_stack"]], "postreise.plot.plot_generation_ts_stack": [[16, "module-postreise.plot.plot_generation_ts_stack"]], "postreise.plot.plot_heatmap": [[16, "module-postreise.plot.plot_heatmap"]], "postreise.plot.plot_interconnection_map": [[16, "module-postreise.plot.plot_interconnection_map"]], "postreise.plot.plot_lmp_map": [[16, "module-postreise.plot.plot_lmp_map"]], "postreise.plot.plot_pie_generation_vs_capacity": [[16, "module-postreise.plot.plot_pie_generation_vs_capacity"]], "postreise.plot.plot_powerflow_snapshot": [[16, "module-postreise.plot.plot_powerflow_snapshot"]], "postreise.plot.plot_scatter_capacity_vs_capacity_factor": [[16, "module-postreise.plot.plot_scatter_capacity_vs_capacity_factor"]], "postreise.plot.plot_scatter_capacity_vs_cost_curve_slope": [[16, "module-postreise.plot.plot_scatter_capacity_vs_cost_curve_slope"]], "postreise.plot.plot_scatter_capacity_vs_curtailment": [[16, "module-postreise.plot.plot_scatter_capacity_vs_curtailment"]], "postreise.plot.plot_shadowprice_map": [[16, "module-postreise.plot.plot_shadowprice_map"]], "postreise.plot.plot_sim_vs_hist": [[16, "module-postreise.plot.plot_sim_vs_hist"]], "postreise.plot.plot_states": [[16, "module-postreise.plot.plot_states"]], "postreise.plot.plot_tornado": [[16, "module-postreise.plot.plot_tornado"]], "postreise.plot.plot_transmission_upgrades_map": [[16, "module-postreise.plot.plot_transmission_upgrades_map"]], "postreise.plot.plot_utilization_map": [[16, "module-postreise.plot.plot_utilization_map"]], "postreise.plot.projection_helpers": [[16, "module-postreise.plot.projection_helpers"]], "prepare_bus_data_difference() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.prepare_bus_data_difference"]], "prepare_bus_data_generator() (in module postreise.plot.plot_carbon_map)": [[16, "postreise.plot.plot_carbon_map.prepare_bus_data_generator"]], "project_borders() (in module postreise.plot.projection_helpers)": [[16, "postreise.plot.projection_helpers.project_borders"]], "project_branch() (in module postreise.plot.projection_helpers)": [[16, "postreise.plot.projection_helpers.project_branch"]], "project_bus() (in module postreise.plot.projection_helpers)": [[16, "postreise.plot.projection_helpers.project_bus"]], "size_inches (postreise.plot.plot_sim_vs_hist.plotsettings attribute)": [[16, "postreise.plot.plot_sim_vs_hist.PlotSettings.size_inches"]], "width (postreise.plot.plot_sim_vs_hist.plotsettings attribute)": [[16, "postreise.plot.plot_sim_vs_hist.PlotSettings.width"]], "plt_close() (in module postreise.plot.tests.conftest)": [[17, "postreise.plot.tests.conftest.plt_close"]], "postreise.plot.tests": [[17, "module-postreise.plot.tests"]], "postreise.plot.tests.conftest": [[17, "module-postreise.plot.tests.conftest"]], "postreise.plot.tests.test_canvas": [[17, "module-postreise.plot.tests.test_canvas"]], "postreise.plot.tests.test_check": [[17, "module-postreise.plot.tests.test_check"]], "postreise.plot.tests.test_plot_bar_generation_max_min_actual": [[17, "module-postreise.plot.tests.test_plot_bar_generation_max_min_actual"]], "postreise.plot.tests.test_plot_bar_generation_stack": [[17, "module-postreise.plot.tests.test_plot_bar_generation_stack"]], "postreise.plot.tests.test_plot_bar_generation_vs_capacity": [[17, "module-postreise.plot.tests.test_plot_bar_generation_vs_capacity"]], "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual": [[17, "module-postreise.plot.tests.test_plot_bar_renewable_max_profile_actual"]], "postreise.plot.tests.test_plot_bar_shortfall": [[17, "module-postreise.plot.tests.test_plot_bar_shortfall"]], "postreise.plot.tests.test_plot_capacity_map": [[17, "module-postreise.plot.tests.test_plot_capacity_map"]], "postreise.plot.tests.test_plot_carbon_bar": [[17, "module-postreise.plot.tests.test_plot_carbon_bar"]], "postreise.plot.tests.test_plot_pie_generation_vs_capacity": [[17, "module-postreise.plot.tests.test_plot_pie_generation_vs_capacity"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope"]], "postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment": [[17, "module-postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment"]], "postreise.plot.tests.test_plot_shadowprice_map": [[17, "module-postreise.plot.tests.test_plot_shadowprice_map"]], "postreise.plot.tests.test_plot_sim_vs_hist": [[17, "module-postreise.plot.tests.test_plot_sim_vs_hist"]], "postreise.plot.tests.test_plot_tornado": [[17, "module-postreise.plot.tests.test_plot_tornado"]], "test_check_func_kwargs() (in module postreise.plot.tests.test_check)": [[17, "postreise.plot.tests.test_check.test_check_func_kwargs"]], "test_check_func_kwargs_errors() (in module postreise.plot.tests.test_check)": [[17, "postreise.plot.tests.test_check.test_check_func_kwargs_errors"]], "test_construct_branch_data() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_construct_branch_data"]], "test_construct_bus_data() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_construct_bus_data"]], "test_create_map_canvas() (in module postreise.plot.tests.test_canvas)": [[17, "postreise.plot.tests.test_canvas.test_create_map_canvas"]], "test_create_map_canvas_argument_size() (in module postreise.plot.tests.test_canvas)": [[17, "postreise.plot.tests.test_canvas.test_create_map_canvas_argument_size"]], "test_create_map_canvas_argument_type() (in module postreise.plot.tests.test_canvas)": [[17, "postreise.plot.tests.test_canvas.test_create_map_canvas_argument_type"]], "test_create_map_canvas_figsize() (in module postreise.plot.tests.test_canvas)": [[17, "postreise.plot.tests.test_canvas.test_create_map_canvas_figsize"]], "test_create_map_canvas_range() (in module postreise.plot.tests.test_canvas)": [[17, "postreise.plot.tests.test_canvas.test_create_map_canvas_range"]], "test_get_bar_display_val_greater_than_ten() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_get_bar_display_val_greater_than_ten"]], "test_get_bar_display_val_less_than_ten() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_get_bar_display_val_less_than_ten"]], "test_get_bar_display_val_zero() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_get_bar_display_val_zero"]], "test_get_bus_legend_bars_and_labels() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_bus_legend_bars_and_labels"]], "test_get_bus_legend_bars_and_labels_clamps_large_numbers() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_bus_legend_bars_and_labels_clamps_large_numbers"]], "test_get_bus_legend_bars_and_labels_min_bar_len_is_one() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_bus_legend_bars_and_labels_min_bar_len_is_one"]], "test_get_bus_legend_bars_and_labels_with_rounding() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_bus_legend_bars_and_labels_with_rounding"]], "test_get_func_kwargs() (in module postreise.plot.tests.test_check)": [[17, "postreise.plot.tests.test_check.test_get_func_kwargs"]], "test_get_func_kwargs_error() (in module postreise.plot.tests.test_check)": [[17, "postreise.plot.tests.test_check.test_get_func_kwargs_error"]], "test_get_lmp_split_points_with_min_between_neg_one_and_one() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_lmp_split_points_with_min_between_neg_one_and_one"]], "test_get_lmp_split_points_with_min_lmp_below_neg_one() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_lmp_split_points_with_min_lmp_below_neg_one"]], "test_get_lmp_split_points_with_min_lmp_more_than_one() (in module postreise.plot.tests.test_plot_shadowprice_map)": [[17, "postreise.plot.tests.test_plot_shadowprice_map.test_get_lmp_split_points_with_min_lmp_more_than_one"]], "test_make_gen_cap_custom_data_given_cap_data() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_make_gen_cap_custom_data_given_cap_data"]], "test_make_gen_cap_custom_data_given_gen_and_cap_data() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_make_gen_cap_custom_data_given_gen_and_cap_data"]], "test_make_gen_cap_custom_data_given_no_data() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_make_gen_cap_custom_data_given_no_data"]], "test_map_plant_capacity() (in module postreise.plot.tests.test_plot_capacity_map)": [[17, "postreise.plot.tests.test_plot_capacity_map.test_map_plant_capacity"]], "test_map_plant_capacity_argument_value() (in module postreise.plot.tests.test_plot_capacity_map)": [[17, "postreise.plot.tests.test_plot_capacity_map.test_map_plant_capacity_argument_value"]], "test_plot_bar_generation_max_min_actual() (in module postreise.plot.tests.test_plot_bar_generation_max_min_actual)": [[17, "postreise.plot.tests.test_plot_bar_generation_max_min_actual.test_plot_bar_generation_max_min_actual"]], "test_plot_bar_generation_max_min_actual_argument_type() (in module postreise.plot.tests.test_plot_bar_generation_max_min_actual)": [[17, "postreise.plot.tests.test_plot_bar_generation_max_min_actual.test_plot_bar_generation_max_min_actual_argument_type"]], "test_plot_bar_generation_max_min_actual_argument_value() (in module postreise.plot.tests.test_plot_bar_generation_max_min_actual)": [[17, "postreise.plot.tests.test_plot_bar_generation_max_min_actual.test_plot_bar_generation_max_min_actual_argument_value"]], "test_plot_bar_generation_stack() (in module postreise.plot.tests.test_plot_bar_generation_stack)": [[17, "postreise.plot.tests.test_plot_bar_generation_stack.test_plot_bar_generation_stack"]], "test_plot_bar_generation_stack() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_plot_bar_generation_stack"]], "test_plot_bar_generation_stack_argument_type() (in module postreise.plot.tests.test_plot_bar_generation_stack)": [[17, "postreise.plot.tests.test_plot_bar_generation_stack.test_plot_bar_generation_stack_argument_type"]], "test_plot_bar_generation_stack_argument_type() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_plot_bar_generation_stack_argument_type"]], "test_plot_bar_generation_stack_argument_value() (in module postreise.plot.tests.test_plot_bar_generation_stack)": [[17, "postreise.plot.tests.test_plot_bar_generation_stack.test_plot_bar_generation_stack_argument_value"]], "test_plot_bar_generation_stack_argument_value() (in module postreise.plot.tests.test_plot_bar_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_bar_generation_vs_capacity.test_plot_bar_generation_stack_argument_value"]], "test_plot_bar_renewable_max_profile_actual() (in module postreise.plot.tests.test_plot_bar_renewable_max_profile_actual)": [[17, "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual.test_plot_bar_renewable_max_profile_actual"]], "test_plot_bar_renewable_max_profile_actual_argument_type() (in module postreise.plot.tests.test_plot_bar_renewable_max_profile_actual)": [[17, "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual.test_plot_bar_renewable_max_profile_actual_argument_type"]], "test_plot_bar_renewable_max_profile_actual_argument_value() (in module postreise.plot.tests.test_plot_bar_renewable_max_profile_actual)": [[17, "postreise.plot.tests.test_plot_bar_renewable_max_profile_actual.test_plot_bar_renewable_max_profile_actual_argument_value"]], "test_plot_bar_shortfall() (in module postreise.plot.tests.test_plot_bar_shortfall)": [[17, "postreise.plot.tests.test_plot_bar_shortfall.test_plot_bar_shortfall"]], "test_plot_bar_shortfall_argument_type() (in module postreise.plot.tests.test_plot_bar_shortfall)": [[17, "postreise.plot.tests.test_plot_bar_shortfall.test_plot_bar_shortfall_argument_type"]], "test_plot_bar_shortfall_argument_value() (in module postreise.plot.tests.test_plot_bar_shortfall)": [[17, "postreise.plot.tests.test_plot_bar_shortfall.test_plot_bar_shortfall_argument_value"]], "test_plot_carbon_bar() (in module postreise.plot.tests.test_plot_carbon_bar)": [[17, "postreise.plot.tests.test_plot_carbon_bar.test_plot_carbon_bar"]], "test_plot_carbon_bar_argument_type() (in module postreise.plot.tests.test_plot_carbon_bar)": [[17, "postreise.plot.tests.test_plot_carbon_bar.test_plot_carbon_bar_argument_type"]], "test_plot_carbon_bar_argument_value() (in module postreise.plot.tests.test_plot_carbon_bar)": [[17, "postreise.plot.tests.test_plot_carbon_bar.test_plot_carbon_bar_argument_value"]], "test_plot_generation_sim_vs_hist() (in module postreise.plot.tests.test_plot_sim_vs_hist)": [[17, "postreise.plot.tests.test_plot_sim_vs_hist.test_plot_generation_sim_vs_hist"]], "test_plot_generation_sim_vs_hist_argument_type() (in module postreise.plot.tests.test_plot_sim_vs_hist)": [[17, "postreise.plot.tests.test_plot_sim_vs_hist.test_plot_generation_sim_vs_hist_argument_type"]], "test_plot_generation_sim_vs_hist_argument_value() (in module postreise.plot.tests.test_plot_sim_vs_hist)": [[17, "postreise.plot.tests.test_plot_sim_vs_hist.test_plot_generation_sim_vs_hist_argument_value"]], "test_plot_pie_generation_vs_capacity() (in module postreise.plot.tests.test_plot_pie_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_pie_generation_vs_capacity.test_plot_pie_generation_vs_capacity"]], "test_plot_pie_generation_vs_capacity_argument_type() (in module postreise.plot.tests.test_plot_pie_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_pie_generation_vs_capacity.test_plot_pie_generation_vs_capacity_argument_type"]], "test_plot_pie_generation_vs_capacity_argument_value() (in module postreise.plot.tests.test_plot_pie_generation_vs_capacity)": [[17, "postreise.plot.tests.test_plot_pie_generation_vs_capacity.test_plot_pie_generation_vs_capacity_argument_value"]], "test_plot_scatter_capacity_vs_capacity_factor() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor.test_plot_scatter_capacity_vs_capacity_factor"]], "test_plot_scatter_capacity_vs_capacity_factor_argument_type() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_capacity_factor.test_plot_scatter_capacity_vs_capacity_factor_argument_type"]], "test_plot_scatter_capacity_vs_cost_curve_slope() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope.test_plot_scatter_capacity_vs_cost_curve_slope"]], "test_plot_scatter_capacity_vs_cost_curve_slope_argument_type() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_cost_curve_slope.test_plot_scatter_capacity_vs_cost_curve_slope_argument_type"]], "test_plot_scatter_capacity_vs_curtailment() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment.test_plot_scatter_capacity_vs_curtailment"]], "test_plot_scatter_capacity_vs_curtailment_argument_type() (in module postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment)": [[17, "postreise.plot.tests.test_plot_scatter_capacity_vs_curtailment.test_plot_scatter_capacity_vs_curtailment_argument_type"]], "test_plot_tornado() (in module postreise.plot.tests.test_plot_tornado)": [[17, "postreise.plot.tests.test_plot_tornado.test_plot_tornado"]], "test_plot_tornado_argument_type() (in module postreise.plot.tests.test_plot_tornado)": [[17, "postreise.plot.tests.test_plot_tornado.test_plot_tornado_argument_type"]], "powersimdata": [[23, "module-powersimdata"]], "base_url (powersimdata.data_access.launcher.httplauncher attribute)": [[24, "powersimdata.data_access.launcher.HttpLauncher.BASE_URL"]], "context (class in powersimdata.data_access.context)": [[24, "powersimdata.data_access.context.Context"]], "csvstore (class in powersimdata.data_access.csv_store)": [[24, "powersimdata.data_access.csv_store.CsvStore"]], "dataaccess (class in powersimdata.data_access.data_access)": [[24, "powersimdata.data_access.data_access.DataAccess"]], "executelistmanager (class in powersimdata.data_access.execute_list)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager"]], "httplauncher (class in powersimdata.data_access.launcher)": [[24, "powersimdata.data_access.launcher.HttpLauncher"]], "launcher (class in powersimdata.data_access.launcher)": [[24, "powersimdata.data_access.launcher.Launcher"]], "localdataaccess (class in powersimdata.data_access.data_access)": [[24, "powersimdata.data_access.data_access.LocalDataAccess"]], "memorydataaccess (class in powersimdata.data_access.data_access)": [[24, "powersimdata.data_access.data_access.MemoryDataAccess"]], "nativelauncher (class in powersimdata.data_access.launcher)": [[24, "powersimdata.data_access.launcher.NativeLauncher"]], "sshdataaccess (class in powersimdata.data_access.data_access)": [[24, "powersimdata.data_access.data_access.SSHDataAccess"]], "sshlauncher (class in powersimdata.data_access.launcher)": [[24, "powersimdata.data_access.launcher.SSHLauncher"]], "scenariolistmanager (class in powersimdata.data_access.scenario_list)": [[24, "powersimdata.data_access.scenario_list.ScenarioListManager"]], "tempdataaccess (class in powersimdata.data_access.data_access)": [[24, "powersimdata.data_access.data_access.TempDataAccess"]], "wrapsshfs (class in powersimdata.data_access.ssh_fs)": [[24, "powersimdata.data_access.ssh_fs.WrapSSHFS"]], "add_entry() (powersimdata.data_access.execute_list.executelistmanager method)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager.add_entry"]], "add_entry() (powersimdata.data_access.scenario_list.scenariolistmanager method)": [[24, "powersimdata.data_access.scenario_list.ScenarioListManager.add_entry"]], "check_progress() (powersimdata.data_access.launcher.httplauncher method)": [[24, "powersimdata.data_access.launcher.HttpLauncher.check_progress"]], "check_progress() (powersimdata.data_access.launcher.nativelauncher method)": [[24, "powersimdata.data_access.launcher.NativeLauncher.check_progress"]], "check_progress() (powersimdata.data_access.launcher.sshlauncher method)": [[24, "powersimdata.data_access.launcher.SSHLauncher.check_progress"]], "checksum() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.checksum"]], "checksum() (powersimdata.data_access.data_access.sshdataaccess method)": [[24, "powersimdata.data_access.data_access.SSHDataAccess.checksum"]], "checksum() (powersimdata.data_access.ssh_fs.wrapsshfs method)": [[24, "powersimdata.data_access.ssh_fs.WrapSSHFS.checksum"]], "commit() (powersimdata.data_access.csv_store.csvstore method)": [[24, "powersimdata.data_access.csv_store.CsvStore.commit"]], "copy_from() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.copy_from"]], "delete_entry() (powersimdata.data_access.execute_list.executelistmanager method)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager.delete_entry"]], "delete_entry() (powersimdata.data_access.scenario_list.scenariolistmanager method)": [[24, "powersimdata.data_access.scenario_list.ScenarioListManager.delete_entry"]], "download() (powersimdata.data_access.ssh_fs.wrapsshfs method)": [[24, "powersimdata.data_access.ssh_fs.WrapSSHFS.download"]], "exec_command() (powersimdata.data_access.data_access.sshdataaccess method)": [[24, "powersimdata.data_access.data_access.SSHDataAccess.exec_command"]], "exec_command() (powersimdata.data_access.ssh_fs.wrapsshfs method)": [[24, "powersimdata.data_access.ssh_fs.WrapSSHFS.exec_command"]], "execute_command_async() (powersimdata.data_access.data_access.sshdataaccess method)": [[24, "powersimdata.data_access.data_access.SSHDataAccess.execute_command_async"]], "extract_simulation_output() (powersimdata.data_access.launcher.httplauncher method)": [[24, "powersimdata.data_access.launcher.HttpLauncher.extract_simulation_output"]], "extract_simulation_output() (powersimdata.data_access.launcher.launcher method)": [[24, "powersimdata.data_access.launcher.Launcher.extract_simulation_output"]], "extract_simulation_output() (powersimdata.data_access.launcher.nativelauncher method)": [[24, "powersimdata.data_access.launcher.NativeLauncher.extract_simulation_output"]], "extract_simulation_output() (powersimdata.data_access.launcher.sshlauncher method)": [[24, "powersimdata.data_access.launcher.SSHLauncher.extract_simulation_output"]], "fs (powersimdata.data_access.data_access.sshdataaccess property)": [[24, "powersimdata.data_access.data_access.SSHDataAccess.fs"]], "get() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.get"]], "get_blob_fs() (in module powersimdata.data_access.fs_helper)": [[24, "powersimdata.data_access.fs_helper.get_blob_fs"]], "get_data_access() (powersimdata.data_access.context.context static method)": [[24, "powersimdata.data_access.context.Context.get_data_access"]], "get_execute_table() (powersimdata.data_access.execute_list.executelistmanager method)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager.get_execute_table"]], "get_launcher() (powersimdata.data_access.context.context static method)": [[24, "powersimdata.data_access.context.Context.get_launcher"]], "get_multi_fs() (in module powersimdata.data_access.fs_helper)": [[24, "powersimdata.data_access.fs_helper.get_multi_fs"]], "get_profile_version() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.get_profile_version"]], "get_scenario() (powersimdata.data_access.scenario_list.scenariolistmanager method)": [[24, "powersimdata.data_access.scenario_list.ScenarioListManager.get_scenario"]], "get_scenario_fs() (in module powersimdata.data_access.fs_helper)": [[24, "powersimdata.data_access.fs_helper.get_scenario_fs"]], "get_scenario_table() (powersimdata.data_access.scenario_list.scenariolistmanager method)": [[24, "powersimdata.data_access.scenario_list.ScenarioListManager.get_scenario_table"]], "get_ssh_fs() (in module powersimdata.data_access.fs_helper)": [[24, "powersimdata.data_access.fs_helper.get_ssh_fs"]], "get_status() (powersimdata.data_access.execute_list.executelistmanager method)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager.get_status"]], "get_table() (powersimdata.data_access.csv_store.csvstore method)": [[24, "powersimdata.data_access.csv_store.CsvStore.get_table"]], "launch_simulation() (powersimdata.data_access.launcher.launcher method)": [[24, "powersimdata.data_access.launcher.Launcher.launch_simulation"]], "powersimdata.data_access": [[24, "module-powersimdata.data_access"]], "powersimdata.data_access.context": [[24, "module-powersimdata.data_access.context"]], "powersimdata.data_access.csv_store": [[24, "module-powersimdata.data_access.csv_store"]], "powersimdata.data_access.data_access": [[24, "module-powersimdata.data_access.data_access"]], "powersimdata.data_access.execute_list": [[24, "module-powersimdata.data_access.execute_list"]], "powersimdata.data_access.fs_helper": [[24, "module-powersimdata.data_access.fs_helper"]], "powersimdata.data_access.launcher": [[24, "module-powersimdata.data_access.launcher"]], "powersimdata.data_access.scenario_list": [[24, "module-powersimdata.data_access.scenario_list"]], "powersimdata.data_access.ssh_fs": [[24, "module-powersimdata.data_access.ssh_fs"]], "progress_bar() (in module powersimdata.data_access.ssh_fs)": [[24, "powersimdata.data_access.ssh_fs.progress_bar"]], "push() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.push"]], "push() (powersimdata.data_access.data_access.localdataaccess method)": [[24, "powersimdata.data_access.data_access.LocalDataAccess.push"]], "push() (powersimdata.data_access.data_access.sshdataaccess method)": [[24, "powersimdata.data_access.data_access.SSHDataAccess.push"]], "remove() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.remove"]], "scenario_id (powersimdata.data_access.launcher.launcher property)": [[24, "powersimdata.data_access.launcher.Launcher.scenario_id"]], "set_status() (powersimdata.data_access.execute_list.executelistmanager method)": [[24, "powersimdata.data_access.execute_list.ExecuteListManager.set_status"]], "tmp_folder() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.tmp_folder"]], "verify_hash() (in module powersimdata.data_access.csv_store)": [[24, "powersimdata.data_access.csv_store.verify_hash"]], "write() (powersimdata.data_access.data_access.dataaccess method)": [[24, "powersimdata.data_access.data_access.DataAccess.write"]], "clone_template() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.clone_template"]], "clone_template() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.clone_template"]], "data_access() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.data_access"]], "data_access() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.data_access"]], "data_access() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.data_access"]], "execute_table() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.execute_table"]], "make_temp() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.make_temp"]], "manager() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.manager"]], "manager() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.manager"]], "mock_row() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.mock_row"]], "mock_row() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.mock_row"]], "powersimdata.data_access.tests": [[25, "module-powersimdata.data_access.tests"]], "powersimdata.data_access.tests.test_data_access": [[25, "module-powersimdata.data_access.tests.test_data_access"]], "powersimdata.data_access.tests.test_execute_csv": [[25, "module-powersimdata.data_access.tests.test_execute_csv"]], "powersimdata.data_access.tests.test_launcher": [[25, "module-powersimdata.data_access.tests.test_launcher"]], "powersimdata.data_access.tests.test_scenario_csv": [[25, "module-powersimdata.data_access.tests.test_scenario_csv"]], "scenario_table() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.scenario_table"]], "ssh_data_access() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.ssh_data_access"]], "test_blank_csv_append() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_blank_csv_append"]], "test_blank_csv_append() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.test_blank_csv_append"]], "test_check_solver() (in module powersimdata.data_access.tests.test_launcher)": [[25, "powersimdata.data_access.tests.test_launcher.test_check_solver"]], "test_check_threads() (in module powersimdata.data_access.tests.test_launcher)": [[25, "powersimdata.data_access.tests.test_launcher.test_check_threads"]], "test_copy_from() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.test_copy_from"]], "test_copy_from_multi_path() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.test_copy_from_multi_path"]], "test_delete() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_delete"]], "test_delete_entry() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.test_delete_entry"]], "test_get_execute_file_from_server_header() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_get_execute_file_from_server_header"]], "test_get_execute_file_from_server_type() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_get_execute_file_from_server_type"]], "test_get_scenario() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.test_get_scenario"]], "test_get_scenario_file_from_server_header() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.test_get_scenario_file_from_server_header"]], "test_get_scenario_file_from_server_type() (in module powersimdata.data_access.tests.test_scenario_csv)": [[25, "powersimdata.data_access.tests.test_scenario_csv.test_get_scenario_file_from_server_type"]], "test_get_status() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_get_status"]], "test_set_status() (in module powersimdata.data_access.tests.test_execute_csv)": [[25, "powersimdata.data_access.tests.test_execute_csv.test_set_status"]], "test_setup_server_connection() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.test_setup_server_connection"]], "test_tmp_folder() (in module powersimdata.data_access.tests.test_data_access)": [[25, "powersimdata.data_access.tests.test_data_access.test_tmp_folder"]], "scenarioinfo (class in powersimdata.design.scenario_info)": [[26, "powersimdata.design.scenario_info.ScenarioInfo"]], "area_to_loadzone() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.area_to_loadzone"]], "get_available_resource() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_available_resource"]], "get_capacity() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_capacity"]], "get_capacity_factor() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_capacity_factor"]], "get_curtailment() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_curtailment"]], "get_demand() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_demand"]], "get_generation() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_generation"]], "get_no_congest_capacity_factor() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_no_congest_capacity_factor"]], "get_profile_resource() (powersimdata.design.scenario_info.scenarioinfo method)": [[26, "powersimdata.design.scenario_info.ScenarioInfo.get_profile_resource"]], "mimic_generation_capacity() (in module powersimdata.design.mimic_grid)": [[26, "powersimdata.design.mimic_grid.mimic_generation_capacity"]], "powersimdata.design": [[26, "module-powersimdata.design"]], "powersimdata.design.mimic_grid": [[26, "module-powersimdata.design.mimic_grid"]], "powersimdata.design.scenario_info": [[26, "module-powersimdata.design.scenario_info"]], "calculate_branch_difference() (in module powersimdata.design.compare.transmission)": [[27, "powersimdata.design.compare.transmission.calculate_branch_difference"]], "calculate_dcline_difference() (in module powersimdata.design.compare.transmission)": [[27, "powersimdata.design.compare.transmission.calculate_dcline_difference"]], "calculate_plant_difference() (in module powersimdata.design.compare.generation)": [[27, "powersimdata.design.compare.generation.calculate_plant_difference"]], "powersimdata.design.compare": [[27, "module-powersimdata.design.compare"]], "powersimdata.design.compare.generation": [[27, "module-powersimdata.design.compare.generation"]], "powersimdata.design.compare.helpers": [[27, "module-powersimdata.design.compare.helpers"]], "powersimdata.design.compare.transmission": [[27, "module-powersimdata.design.compare.transmission"]], "add_demand_to_targets() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.add_demand_to_targets"]], "add_new_capacities_collaborative() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.add_new_capacities_collaborative"]], "add_new_capacities_independent() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.add_new_capacities_independent"]], "add_resource_data_to_targets() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.add_resource_data_to_targets"]], "add_shortfall_to_targets() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.add_shortfall_to_targets"]], "build_supply_curve() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.build_supply_curve"]], "calculate_clean_capacity_scaling() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.calculate_clean_capacity_scaling"]], "calculate_overall_shortfall() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.calculate_overall_shortfall"]], "check_supply_data() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.check_supply_data"]], "create_change_table() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.create_change_table"]], "get_supply_data() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.get_supply_data"]], "ks_test() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.ks_test"]], "load_targets_from_csv() (in module powersimdata.design.generation.clean_capacity_scaling)": [[28, "powersimdata.design.generation.clean_capacity_scaling.load_targets_from_csv"]], "lower_bound_index() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.lower_bound_index"]], "plot_capacity_vs_price() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.plot_capacity_vs_price"]], "plot_linear_vs_quadratic_terms() (in module powersimdata.design.generation.cost_curves)": [[28, "powersimdata.design.generation.cost_curves.plot_linear_vs_quadratic_terms"]], "powersimdata.design.generation": [[28, "module-powersimdata.design.generation"]], "powersimdata.design.generation.clean_capacity_scaling": [[28, "module-powersimdata.design.generation.clean_capacity_scaling"]], "powersimdata.design.generation.cost_curves": [[28, "module-powersimdata.design.generation.cost_curves"]], "powersimdata.design.generation.curtailment": [[28, "module-powersimdata.design.generation.curtailment"]], "temporal_curtailment() (in module powersimdata.design.generation.curtailment)": [[28, "powersimdata.design.generation.curtailment.temporal_curtailment"]], "collaborative_test_targets() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.collaborative_test_targets"]], "mock_scenario() (in module powersimdata.design.generation.tests.test_curtailment)": [[29, "powersimdata.design.generation.tests.test_curtailment.mock_scenario"]], "powersimdata.design.generation.tests": [[29, "module-powersimdata.design.generation.tests"]], "powersimdata.design.generation.tests.test_clean_capacity_scaling": [[29, "module-powersimdata.design.generation.tests.test_clean_capacity_scaling"]], "powersimdata.design.generation.tests.test_cost_curves": [[29, "module-powersimdata.design.generation.tests.test_cost_curves"]], "powersimdata.design.generation.tests.test_curtailment": [[29, "module-powersimdata.design.generation.tests.test_curtailment"]], "test_build_supply_curve_1seg() (in module powersimdata.design.generation.tests.test_cost_curves)": [[29, "powersimdata.design.generation.tests.test_cost_curves.test_build_supply_curve_1seg"]], "test_build_supply_curve_2seg() (in module powersimdata.design.generation.tests.test_cost_curves)": [[29, "powersimdata.design.generation.tests.test_cost_curves.test_build_supply_curve_2seg"]], "test_collaborative_three_areas_one_nonparticipating() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.test_collaborative_three_areas_one_nonparticipating"]], "test_collaborative_two_areas_addl_curtailment() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.test_collaborative_two_areas_addl_curtailment"]], "test_collaborative_two_areas_addl_external() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.test_collaborative_two_areas_addl_external"]], "test_collaborative_two_areas_overgeneration() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.test_collaborative_two_areas_overgeneration"]], "test_get_supply_data() (in module powersimdata.design.generation.tests.test_cost_curves)": [[29, "powersimdata.design.generation.tests.test_cost_curves.test_get_supply_data"]], "test_independent_new_capacity() (in module powersimdata.design.generation.tests.test_clean_capacity_scaling)": [[29, "powersimdata.design.generation.tests.test_clean_capacity_scaling.test_independent_new_capacity"]], "test_ks_test() (in module powersimdata.design.generation.tests.test_cost_curves)": [[29, "powersimdata.design.generation.tests.test_cost_curves.test_ks_test"]], "test_lower_bound_index() (in module powersimdata.design.generation.tests.test_cost_curves)": [[29, "powersimdata.design.generation.tests.test_cost_curves.test_lower_bound_index"]], "test_temporal_curtailment() (in module powersimdata.design.generation.tests.test_curtailment)": [[29, "powersimdata.design.generation.tests.test_curtailment.test_temporal_curtailment"]], "append_keep_index_name() (in module powersimdata.design.investment.investment_costs)": [[30, "powersimdata.design.investment.investment_costs.append_keep_index_name"]], "bus_to_neem_reg() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.bus_to_neem_reg"]], "bus_to_reeds_reg() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.bus_to_reeds_reg"]], "calculate_ac_inv_costs() (in module powersimdata.design.investment.investment_costs)": [[30, "powersimdata.design.investment.investment_costs.calculate_ac_inv_costs"]], "calculate_dc_inv_costs() (in module powersimdata.design.investment.investment_costs)": [[30, "powersimdata.design.investment.investment_costs.calculate_dc_inv_costs"]], "calculate_gen_inv_costs() (in module powersimdata.design.investment.investment_costs)": [[30, "powersimdata.design.investment.investment_costs.calculate_gen_inv_costs"]], "calculate_inflation() (in module powersimdata.design.investment.inflation)": [[30, "powersimdata.design.investment.inflation.calculate_inflation"]], "merge_keep_index() (in module powersimdata.design.investment.investment_costs)": [[30, "powersimdata.design.investment.investment_costs.merge_keep_index"]], "points_to_polys() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.points_to_polys"]], "powersimdata.design.investment": [[30, "module-powersimdata.design.investment"]], "powersimdata.design.investment.const": [[30, "module-powersimdata.design.investment.const"]], "powersimdata.design.investment.create_mapping_files": [[30, "module-powersimdata.design.investment.create_mapping_files"]], "powersimdata.design.investment.inflation": [[30, "module-powersimdata.design.investment.inflation"]], "powersimdata.design.investment.investment_costs": [[30, "module-powersimdata.design.investment.investment_costs"]], "sjoin_nearest() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.sjoin_nearest"]], "write_bus_neem_map() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.write_bus_neem_map"]], "write_bus_reeds_map() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.write_bus_reeds_map"]], "write_poly_shapefile() (in module powersimdata.design.investment.create_mapping_files)": [[30, "powersimdata.design.investment.create_mapping_files.write_poly_shapefile"]], "mock_grid() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.mock_grid"]], "powersimdata.design.investment.tests": [[31, "module-powersimdata.design.investment.tests"]], "powersimdata.design.investment.tests.test_investment_costs": [[31, "module-powersimdata.design.investment.tests.test_investment_costs"]], "test_calculate_ac_inv_costs() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_ac_inv_costs"]], "test_calculate_ac_inv_costs_lines_only() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_ac_inv_costs_lines_only"]], "test_calculate_ac_inv_costs_not_summed() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_ac_inv_costs_not_summed"]], "test_calculate_ac_inv_costs_transformers_only() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_ac_inv_costs_transformers_only"]], "test_calculate_dc_inv_costs() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_dc_inv_costs"]], "test_calculate_dc_inv_costs_not_summed() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_dc_inv_costs_not_summed"]], "test_calculate_gen_inv_costs_2030() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_gen_inv_costs_2030"]], "test_calculate_gen_inv_costs_not_summed() (in module powersimdata.design.investment.tests.test_investment_costs)": [[31, "powersimdata.design.investment.tests.test_investment_costs.test_calculate_gen_inv_costs_not_summed"]], "testscenarioinfo (class in powersimdata.design.tests.test_scenario_info)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo"]], "powersimdata.design.tests": [[32, "module-powersimdata.design.tests"]], "powersimdata.design.tests.test_scenario_info": [[32, "module-powersimdata.design.tests.test_scenario_info"]], "setup() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.setUp"]], "test_get_available_resource() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_available_resource"]], "test_get_capacity() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_capacity"]], "test_get_capacity_factor() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_capacity_factor"]], "test_get_curtailment() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_curtailment"]], "test_get_demand() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_demand"]], "test_get_generation() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_generation"]], "test_get_no_congest_capacity_factor() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_no_congest_capacity_factor"]], "test_get_profile_resource() (powersimdata.design.tests.test_scenario_info.testscenarioinfo method)": [[32, "powersimdata.design.tests.test_scenario_info.TestScenarioInfo.test_get_profile_resource"]], "calculate_interzone_capacity() (in module powersimdata.design.transmission.zones)": [[33, "powersimdata.design.transmission.zones.calculate_interzone_capacity"]], "calculate_mw_miles() (in module powersimdata.design.transmission.mwmiles)": [[33, "powersimdata.design.transmission.mwmiles.calculate_mw_miles"]], "calculate_substation_capacity() (in module powersimdata.design.transmission.substations)": [[33, "powersimdata.design.transmission.substations.calculate_substation_capacity"]], "classify_interstate_intrastate() (in module powersimdata.design.transmission.statelines)": [[33, "powersimdata.design.transmission.statelines.classify_interstate_intrastate"]], "get_branches_by_area() (in module powersimdata.design.transmission.upgrade)": [[33, "powersimdata.design.transmission.upgrade.get_branches_by_area"]], "powersimdata.design.transmission": [[33, "module-powersimdata.design.transmission"]], "powersimdata.design.transmission.mwmiles": [[33, "module-powersimdata.design.transmission.mwmiles"]], "powersimdata.design.transmission.statelines": [[33, "module-powersimdata.design.transmission.statelines"]], "powersimdata.design.transmission.substations": [[33, "module-powersimdata.design.transmission.substations"]], "powersimdata.design.transmission.upgrade": [[33, "module-powersimdata.design.transmission.upgrade"]], "powersimdata.design.transmission.zones": [[33, "module-powersimdata.design.transmission.zones"]], "scale_congested_mesh_branches() (in module powersimdata.design.transmission.upgrade)": [[33, "powersimdata.design.transmission.upgrade.scale_congested_mesh_branches"]], "scale_renewable_stubs() (in module powersimdata.design.transmission.upgrade)": [[33, "powersimdata.design.transmission.upgrade.scale_renewable_stubs"]], "testcalculatemwmiles (class in powersimdata.design.transmission.tests.test_mwmiles)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles"]], "testclassifyinterstateintrastate (class in powersimdata.design.transmission.tests.test_statelines)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate"]], "testconstructcompositeallowlist (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist"]], "testgetbranchesbyarea (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea"]], "testidentifymesh (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh"]], "testincrementbranch (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch"]], "testscalerenewablestubs (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs"]], "teststubtopologyhelpers (class in powersimdata.design.transmission.tests.test_upgrade)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers"]], "powersimdata.design.transmission.tests": [[34, "module-powersimdata.design.transmission.tests"]], "powersimdata.design.transmission.tests.test_mwmiles": [[34, "module-powersimdata.design.transmission.tests.test_mwmiles"]], "powersimdata.design.transmission.tests.test_statelines": [[34, "module-powersimdata.design.transmission.tests.test_statelines"]], "powersimdata.design.transmission.tests.test_substations": [[34, "module-powersimdata.design.transmission.tests.test_substations"]], "powersimdata.design.transmission.tests.test_upgrade": [[34, "module-powersimdata.design.transmission.tests.test_upgrade"]], "setup() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.setUp"]], "setup() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.setUp"]], "setup() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.setUp"]], "setup() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.setUp"]], "setup() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.setUp"]], "setup() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.setUp"]], "test_allow_list_and_deny_list_failure() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_allow_list_and_deny_list_failure"]], "test_bad_allow_list_entry_type() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_bad_allow_list_entry_type"]], "test_bad_allow_list_value() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_bad_allow_list_value"]], "test_bad_area_name() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bad_area_name"]], "test_bad_area_type() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bad_area_type"]], "test_bad_deny_list_type() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_bad_deny_list_type"]], "test_bad_deny_list_value() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_bad_deny_list_value"]], "test_bad_grid_type() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bad_grid_type"]], "test_bad_method_name() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bad_method_name"]], "test_bad_method_type() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bad_method_type"]], "test_bridging_multi_state() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bridging_multi_state"]], "test_bridging_oregon() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bridging_oregon"]], "test_bridging_washington() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_bridging_washington"]], "test_calculate_mw_miles_many_scaled() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_many_scaled"]], "test_calculate_mw_miles_many_scaled_one_branch_excluded() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_many_scaled_one_branch_excluded"]], "test_calculate_mw_miles_many_scaled_two_branches_excluded() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_many_scaled_two_branches_excluded"]], "test_calculate_mw_miles_no_scale() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_no_scale"]], "test_calculate_mw_miles_one_line_scaled() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_one_line_scaled"]], "test_calculate_mw_miles_one_transformer_scaled() (powersimdata.design.transmission.tests.test_mwmiles.testcalculatemwmiles method)": [[34, "powersimdata.design.transmission.tests.test_mwmiles.TestCalculateMWMiles.test_calculate_mw_miles_one_transformer_scaled"]], "test_calculate_substation_capacity() (in module powersimdata.design.transmission.tests.test_substations)": [[34, "powersimdata.design.transmission.tests.test_substations.test_calculate_substation_capacity"]], "test_classify_interstate_intrastate_bad_ct() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.test_classify_interstate_intrastate_bad_ct"]], "test_classify_interstate_intrastate_empty_ct() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.test_classify_interstate_intrastate_empty_ct"]], "test_classify_interstate_intrastate_none() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.test_classify_interstate_intrastate_none"]], "test_classify_interstate_intrastate_several() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.test_classify_interstate_intrastate_several"]], "test_classify_interstate_intrastate_two() (powersimdata.design.transmission.tests.test_statelines.testclassifyinterstateintrastate method)": [[34, "powersimdata.design.transmission.tests.test_statelines.TestClassifyInterstateIntrastate.test_classify_interstate_intrastate_two"]], "test_either_multi_state() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_either_multi_state"]], "test_either_oregon() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_either_oregon"]], "test_either_washington() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_either_washington"]], "test_empty_ct_inplace_default() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_empty_ct_inplace_default"]], "test_empty_ct_inplace_false() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_empty_ct_inplace_false"]], "test_empty_ct_inplace_true() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_empty_ct_inplace_true"]], "test_empty_ct_no_fuzz() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_empty_ct_no_fuzz"]], "test_existing_ct_unrelated_branch_id() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_existing_ct_unrelated_branch_id"]], "test_existing_ct_zone_id_solar_wind() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_existing_ct_zone_id_solar_wind"]], "test_existing_ct_zone_id_wind() (powersimdata.design.transmission.tests.test_upgrade.testscalerenewablestubs method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestScaleRenewableStubs.test_existing_ct_zone_id_wind"]], "test_find_branches_connected_to_bus_1() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_branches_connected_to_bus_1"]], "test_find_branches_connected_to_bus_4() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_branches_connected_to_bus_4"]], "test_find_branches_connected_to_bus_5() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_branches_connected_to_bus_5"]], "test_find_capacity_at_bus_1_solar_str() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_capacity_at_bus_1_solar_str"]], "test_find_capacity_at_bus_1_solar_tuple() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_capacity_at_bus_1_solar_tuple"]], "test_find_capacity_at_bus_2_wind() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_capacity_at_bus_2_wind"]], "test_find_capacity_at_bus_7_solar() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_capacity_at_bus_7_solar"]], "test_find_capacity_at_bus_7_solar_ng() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_capacity_at_bus_7_solar_ng"]], "test_find_first_degree_branches_101() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_first_degree_branches_101"]], "test_find_first_degree_branches_108() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_first_degree_branches_108"]], "test_find_stub_degree_1() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_stub_degree_1"]], "test_find_stub_degree_5() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_stub_degree_5"]], "test_find_stub_degree_7() (powersimdata.design.transmission.tests.test_upgrade.teststubtopologyhelpers method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestStubTopologyHelpers.test_find_stub_degree_7"]], "test_good_allow_list() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_good_allow_list"]], "test_good_deny_list() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_good_deny_list"]], "test_identify_mesh_mw_n_1() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MW_n_1"]], "test_identify_mesh_mw_n_2() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MW_n_2"]], "test_identify_mesh_mw_n_2_allow_list() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MW_n_2_allow_list"]], "test_identify_mesh_mw_n_2_deny_list() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MW_n_2_deny_list"]], "test_identify_mesh_mw_n_3() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MW_n_3"]], "test_identify_mesh_mwmiles_n_1() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MWmiles_n_1"]], "test_identify_mesh_mwmiles_n_2() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MWmiles_n_2"]], "test_identify_mesh_mwmiles_n_3() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_MWmiles_n_3"]], "test_identify_mesh_bad_method() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_bad_method"]], "test_identify_mesh_branch_upgrades_default() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_branch_upgrades_default"]], "test_identify_mesh_branch_upgrades_n_2() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_branch_upgrades_n_2"]], "test_identify_mesh_branch_upgrades_n_3() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_branch_upgrades_n_3"]], "test_identify_mesh_branch_upgrades_n_4() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_branch_upgrades_n_4"]], "test_identify_mesh_branch_upgrades_quantile90() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_branch_upgrades_quantile90"]], "test_identify_mesh_mean() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean"]], "test_identify_mesh_mean_n_1() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean_n_1"]], "test_identify_mesh_mean_n_2() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean_n_2"]], "test_identify_mesh_mean_n_3() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean_n_3"]], "test_identify_mesh_mean_n_4() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean_n_4"]], "test_identify_mesh_mean_n_4_specify_quantile() (powersimdata.design.transmission.tests.test_upgrade.testidentifymesh method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIdentifyMesh.test_identify_mesh_mean_n_4_specify_quantile"]], "test_increment_branch_scaling_ref_and_ct_and_increment1() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.test_increment_branch_scaling_ref_and_ct_and_increment1"]], "test_increment_branch_scaling_ref_and_ct_and_increment2() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.test_increment_branch_scaling_ref_and_ct_and_increment2"]], "test_increment_branch_scaling_ref_and_custom_increment() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.test_increment_branch_scaling_ref_and_custom_increment"]], "test_increment_branch_scaling_ref_and_increment() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.test_increment_branch_scaling_ref_and_increment"]], "test_increment_branch_scaling_ref_only() (powersimdata.design.transmission.tests.test_upgrade.testincrementbranch method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestIncrementBranch.test_increment_branch_scaling_ref_only"]], "test_internal_multi_state() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_internal_multi_state"]], "test_internal_oregon() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_internal_oregon"]], "test_internal_washington() (powersimdata.design.transmission.tests.test_upgrade.testgetbranchesbyarea method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestGetBranchesByArea.test_internal_washington"]], "test_none_none() (powersimdata.design.transmission.tests.test_upgrade.testconstructcompositeallowlist method)": [[34, "powersimdata.design.transmission.tests.test_upgrade.TestConstructCompositeAllowlist.test_none_none"]], "abstractgrid (class in powersimdata.input.abstract_grid)": [[35, "powersimdata.input.abstract_grid.AbstractGrid"]], "changetable (class in powersimdata.input.change_table)": [[35, "powersimdata.input.change_table.ChangeTable"]], "electrifieddemand (class in powersimdata.input.electrified_demand_input)": [[35, "powersimdata.input.electrified_demand_input.ElectrifiedDemand"]], "expansioncandidates (class in powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates"]], "grid (class in powersimdata.input.grid)": [[35, "powersimdata.input.grid.Grid"]], "inputbase (class in powersimdata.input.input_base)": [[35, "powersimdata.input.input_base.InputBase"]], "inputdata (class in powersimdata.input.input_data)": [[35, "powersimdata.input.input_data.InputData"]], "profileinput (class in powersimdata.input.profile_input)": [[35, "powersimdata.input.profile_input.ProfileInput"]], "supported_imports (powersimdata.input.grid.grid attribute)": [[35, "powersimdata.input.grid.Grid.SUPPORTED_IMPORTS"]], "supported_models (powersimdata.input.grid.grid attribute)": [[35, "powersimdata.input.grid.Grid.SUPPORTED_MODELS"]], "transformdemand (class in powersimdata.input.transform_demand)": [[35, "powersimdata.input.transform_demand.TransformDemand"]], "transformgrid (class in powersimdata.input.transform_grid)": [[35, "powersimdata.input.transform_grid.TransformGrid"]], "transformprofile (class in powersimdata.input.transform_profile)": [[35, "powersimdata.input.transform_profile.TransformProfile"]], "add_branch() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_branch"]], "add_bus() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_bus"]], "add_dcline() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_dcline"]], "add_demand_flexibility() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_demand_flexibility"]], "add_electrification() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_electrification"]], "add_plant() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_plant"]], "add_storage_capacity() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.add_storage_capacity"]], "adjust_pmin() (in module powersimdata.input.configure)": [[35, "powersimdata.input.configure.adjust_pmin"]], "adjust_ramp30() (in module powersimdata.input.configure)": [[35, "powersimdata.input.configure.adjust_ramp30"]], "branch (powersimdata.input.expansion_candidates.expansioncandidates attribute)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.branch"]], "check_branch() (in module powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.check_branch"]], "check_branch_voltage() (in module powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.check_branch_voltage"]], "check_bus_id() (in module powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.check_bus_id"]], "check_grid() (in module powersimdata.input.check)": [[35, "powersimdata.input.check.check_grid"]], "check_plant() (in module powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.check_plant"]], "check_storage() (in module powersimdata.input.expansion_candidates)": [[35, "powersimdata.input.expansion_candidates.check_storage"]], "clear() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.clear"]], "decompose_plant_data_frame_into_areas() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.decompose_plant_data_frame_into_areas"]], "decompose_plant_data_frame_into_areas_and_resources() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.decompose_plant_data_frame_into_areas_and_resources"]], "decompose_plant_data_frame_into_resources() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.decompose_plant_data_frame_into_resources"]], "decompose_plant_data_frame_into_resources_and_areas() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.decompose_plant_data_frame_into_resources_and_areas"]], "distribute_demand_from_zones_to_buses() (in module powersimdata.input.input_data)": [[35, "powersimdata.input.input_data.distribute_demand_from_zones_to_buses"]], "get_active_resources_in_grid() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_active_resources_in_grid"]], "get_data() (powersimdata.input.input_base.inputbase method)": [[35, "powersimdata.input.input_base.InputBase.get_data"]], "get_grid() (powersimdata.input.transform_grid.transformgrid method)": [[35, "powersimdata.input.transform_grid.TransformGrid.get_grid"]], "get_plant_id_for_resources() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_for_resources"]], "get_plant_id_for_resources_in_area() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_for_resources_in_area"]], "get_plant_id_for_resources_in_interconnects() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_for_resources_in_interconnects"]], "get_plant_id_for_resources_in_loadzones() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_for_resources_in_loadzones"]], "get_plant_id_for_resources_in_states() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_for_resources_in_states"]], "get_plant_id_in_interconnects() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_in_interconnects"]], "get_plant_id_in_loadzones() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_in_loadzones"]], "get_plant_id_in_states() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_plant_id_in_states"]], "get_profile() (powersimdata.input.electrified_demand_input.electrifieddemand method)": [[35, "powersimdata.input.electrified_demand_input.ElectrifiedDemand.get_profile"]], "get_profile() (powersimdata.input.transform_demand.transformdemand method)": [[35, "powersimdata.input.transform_demand.TransformDemand.get_profile"]], "get_profile() (powersimdata.input.transform_profile.transformprofile method)": [[35, "powersimdata.input.transform_profile.TransformProfile.get_profile"]], "get_profile_version() (in module powersimdata.input.electrified_demand_input)": [[35, "powersimdata.input.electrified_demand_input.get_profile_version"]], "get_profile_version() (in module powersimdata.input.profile_input)": [[35, "powersimdata.input.profile_input.get_profile_version"]], "get_profile_version() (powersimdata.input.electrified_demand_input.electrifieddemand method)": [[35, "powersimdata.input.electrified_demand_input.ElectrifiedDemand.get_profile_version"]], "get_profile_version() (powersimdata.input.profile_input.profileinput method)": [[35, "powersimdata.input.profile_input.ProfileInput.get_profile_version"]], "get_resources_in_grid() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_resources_in_grid"]], "get_storage_id_in_area() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.get_storage_id_in_area"]], "linearize_gencost() (in module powersimdata.input.configure)": [[35, "powersimdata.input.configure.linearize_gencost"]], "plant (powersimdata.input.expansion_candidates.expansioncandidates attribute)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.plant"]], "powersimdata.input": [[35, "module-powersimdata.input"]], "powersimdata.input.abstract_grid": [[35, "module-powersimdata.input.abstract_grid"]], "powersimdata.input.change_table": [[35, "module-powersimdata.input.change_table"]], "powersimdata.input.check": [[35, "module-powersimdata.input.check"]], "powersimdata.input.configure": [[35, "module-powersimdata.input.configure"]], "powersimdata.input.electrified_demand_input": [[35, "module-powersimdata.input.electrified_demand_input"]], "powersimdata.input.expansion_candidates": [[35, "module-powersimdata.input.expansion_candidates"]], "powersimdata.input.grid": [[35, "module-powersimdata.input.grid"]], "powersimdata.input.helpers": [[35, "module-powersimdata.input.helpers"]], "powersimdata.input.input_base": [[35, "module-powersimdata.input.input_base"]], "powersimdata.input.input_data": [[35, "module-powersimdata.input.input_data"]], "powersimdata.input.profile_input": [[35, "module-powersimdata.input.profile_input"]], "powersimdata.input.transform_demand": [[35, "module-powersimdata.input.transform_demand"]], "powersimdata.input.transform_grid": [[35, "module-powersimdata.input.transform_grid"]], "powersimdata.input.transform_profile": [[35, "module-powersimdata.input.transform_profile"]], "remove_branch() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.remove_branch"]], "remove_bus() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.remove_bus"]], "remove_dcline() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.remove_dcline"]], "remove_plant() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.remove_plant"]], "save_change_table() (powersimdata.input.input_data.inputdata method)": [[35, "powersimdata.input.input_data.InputData.save_change_table"]], "scale_branch_capacity() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_branch_capacity"]], "scale_congested_mesh_branches() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_congested_mesh_branches"]], "scale_dcline_capacity() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_dcline_capacity"]], "scale_demand() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_demand"]], "scale_plant_capacity() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_plant_capacity"]], "scale_plant_cost() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_plant_cost"]], "scale_plant_pmin() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_plant_pmin"]], "scale_renewable_stubs() (powersimdata.input.change_table.changetable method)": [[35, "powersimdata.input.change_table.ChangeTable.scale_renewable_stubs"]], "set_branch() (powersimdata.input.expansion_candidates.expansioncandidates method)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.set_branch"]], "set_plant() (powersimdata.input.expansion_candidates.expansioncandidates method)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.set_plant"]], "set_storage() (powersimdata.input.expansion_candidates.expansioncandidates method)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.set_storage"]], "storage (powersimdata.input.expansion_candidates.expansioncandidates attribute)": [[35, "powersimdata.input.expansion_candidates.ExpansionCandidates.storage"]], "storage_template() (in module powersimdata.input.abstract_grid)": [[35, "powersimdata.input.abstract_grid.storage_template"]], "summarize_plant_to_bus() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.summarize_plant_to_bus"]], "summarize_plant_to_location() (in module powersimdata.input.helpers)": [[35, "powersimdata.input.helpers.summarize_plant_to_location"]], "upload() (powersimdata.input.profile_input.profileinput method)": [[35, "powersimdata.input.profile_input.ProfileInput.upload"]], "value() (powersimdata.input.transform_demand.transformdemand method)": [[35, "powersimdata.input.transform_demand.TransformDemand.value"]], "voltage_to_x_per_distance() (in module powersimdata.input.transform_grid)": [[35, "powersimdata.input.transform_grid.voltage_to_x_per_distance"]], "areascaling (class in powersimdata.input.changes.electrification)": [[36, "powersimdata.input.changes.electrification.AreaScaling"]], "electrifieddemand (class in powersimdata.input.changes.electrification)": [[36, "powersimdata.input.changes.electrification.ElectrifiedDemand"]], "scalefactors (class in powersimdata.input.changes.electrification)": [[36, "powersimdata.input.changes.electrification.ScaleFactors"]], "add_bus() (in module powersimdata.input.changes.bus)": [[36, "powersimdata.input.changes.bus.add_bus"]], "add_demand_flexibility() (in module powersimdata.input.changes.demand_flex)": [[36, "powersimdata.input.changes.demand_flex.add_demand_flexibility"]], "add_electrification() (in module powersimdata.input.changes.electrification)": [[36, "powersimdata.input.changes.electrification.add_electrification"]], "add_plant() (in module powersimdata.input.changes.plant)": [[36, "powersimdata.input.changes.plant.add_plant"]], "add_storage_capacity() (in module powersimdata.input.changes.storage)": [[36, "powersimdata.input.changes.storage.add_storage_capacity"]], "end_uses (powersimdata.input.changes.electrification.areascaling attribute)": [[36, "powersimdata.input.changes.electrification.AreaScaling.end_uses"]], "grid_info (powersimdata.input.changes.electrification.electrifieddemand attribute)": [[36, "powersimdata.input.changes.electrification.ElectrifiedDemand.grid_info"]], "ordinal() (in module powersimdata.input.changes.helpers)": [[36, "powersimdata.input.changes.helpers.ordinal"]], "powersimdata.input.changes": [[36, "module-powersimdata.input.changes"]], "powersimdata.input.changes.bus": [[36, "module-powersimdata.input.changes.bus"]], "powersimdata.input.changes.demand_flex": [[36, "module-powersimdata.input.changes.demand_flex"]], "powersimdata.input.changes.electrification": [[36, "module-powersimdata.input.changes.electrification"]], "powersimdata.input.changes.helpers": [[36, "module-powersimdata.input.changes.helpers"]], "powersimdata.input.changes.plant": [[36, "module-powersimdata.input.changes.plant"]], "powersimdata.input.changes.storage": [[36, "module-powersimdata.input.changes.storage"]], "remove_bus() (in module powersimdata.input.changes.bus)": [[36, "powersimdata.input.changes.bus.remove_bus"]], "remove_plant() (in module powersimdata.input.changes.plant)": [[36, "powersimdata.input.changes.plant.remove_plant"]], "scale_plant_pmin() (in module powersimdata.input.changes.plant)": [[36, "powersimdata.input.changes.plant.scale_plant_pmin"]], "sf (powersimdata.input.changes.electrification.scalefactors attribute)": [[36, "powersimdata.input.changes.electrification.ScaleFactors.sf"]], "value() (powersimdata.input.changes.electrification.areascaling method)": [[36, "powersimdata.input.changes.electrification.AreaScaling.value"]], "value() (powersimdata.input.changes.electrification.electrifieddemand method)": [[36, "powersimdata.input.changes.electrification.ElectrifiedDemand.value"]], "value() (powersimdata.input.changes.electrification.scalefactors method)": [[36, "powersimdata.input.changes.electrification.ScaleFactors.value"]], "zone_info (powersimdata.input.changes.electrification.electrifieddemand attribute)": [[36, "powersimdata.input.changes.electrification.ElectrifiedDemand.zone_info"]], "powersimdata.input.changes.tests": [[37, "module-powersimdata.input.changes.tests"]], "powersimdata.input.changes.tests.test_add_electrification": [[37, "module-powersimdata.input.changes.tests.test_add_electrification"]], "test_add_electrification() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_add_electrification"]], "test_add_electrification_by_zone() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_add_electrification_by_zone"]], "test_add_electrification_combined() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_add_electrification_combined"]], "test_area_scaling() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_area_scaling"]], "test_check_scale_factors() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_check_scale_factors"]], "test_scale_factors() (in module powersimdata.input.changes.tests.test_add_electrification)": [[37, "powersimdata.input.changes.tests.test_add_electrification.test_scale_factors"]], "powersimdata.input.const": [[38, "module-powersimdata.input.const"]], "powersimdata.input.const.grid_const": [[38, "module-powersimdata.input.const.grid_const"]], "powersimdata.input.const.pypsa_const": [[38, "module-powersimdata.input.const.pypsa_const"]], "fromcsv (class in powersimdata.input.converter.csv_to_grid)": [[39, "powersimdata.input.converter.csv_to_grid.FromCSV"]], "frompypsa (class in powersimdata.input.converter.pypsa_to_grid)": [[39, "powersimdata.input.converter.pypsa_to_grid.FromPyPSA"]], "add_coord_to_grid_data_frames() (in module powersimdata.input.converter.helpers)": [[39, "powersimdata.input.converter.helpers.add_coord_to_grid_data_frames"]], "add_interconnect_to_grid_data_frames() (in module powersimdata.input.converter.helpers)": [[39, "powersimdata.input.converter.helpers.add_interconnect_to_grid_data_frames"]], "add_zone_to_grid_data_frames() (in module powersimdata.input.converter.helpers)": [[39, "powersimdata.input.converter.helpers.add_zone_to_grid_data_frames"]], "build() (powersimdata.input.converter.pypsa_to_grid.frompypsa method)": [[39, "powersimdata.input.converter.pypsa_to_grid.FromPyPSA.build"]], "get_pypsa_demand_profile() (in module powersimdata.input.converter.pypsa_to_profiles)": [[39, "powersimdata.input.converter.pypsa_to_profiles.get_pypsa_demand_profile"]], "get_pypsa_gen_profile() (in module powersimdata.input.converter.pypsa_to_profiles)": [[39, "powersimdata.input.converter.pypsa_to_profiles.get_pypsa_gen_profile"]], "powersimdata.input.converter": [[39, "module-powersimdata.input.converter"]], "powersimdata.input.converter.csv_to_grid": [[39, "module-powersimdata.input.converter.csv_to_grid"]], "powersimdata.input.converter.helpers": [[39, "module-powersimdata.input.converter.helpers"]], "powersimdata.input.converter.pypsa_to_grid": [[39, "module-powersimdata.input.converter.pypsa_to_grid"]], "powersimdata.input.converter.pypsa_to_profiles": [[39, "module-powersimdata.input.converter.pypsa_to_profiles"]], "network() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.network"]], "powersimdata.input.converter.tests": [[40, "module-powersimdata.input.converter.tests"]], "powersimdata.input.converter.tests.test_pypsa_to_grid": [[40, "module-powersimdata.input.converter.tests.test_pypsa_to_grid"]], "powersimdata.input.converter.tests.test_pypsa_to_profiles": [[40, "module-powersimdata.input.converter.tests.test_pypsa_to_profiles"]], "test_extract_demand() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.test_extract_demand"]], "test_extract_wind() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.test_extract_wind"]], "test_get_pypsa_demand_profile_argument_type() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.test_get_pypsa_demand_profile_argument_type"]], "test_get_pypsa_gen_profile_argument_type() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.test_get_pypsa_gen_profile_argument_type"]], "test_get_pypsa_gen_profile_argument_value() (in module powersimdata.input.converter.tests.test_pypsa_to_profiles)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_profiles.test_get_pypsa_gen_profile_argument_value"]], "test_import_arbitrary_network_from_pypsa_to_grid() (in module powersimdata.input.converter.tests.test_pypsa_to_grid)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_grid.test_import_arbitrary_network_from_pypsa_to_grid"]], "test_import_exported_network() (in module powersimdata.input.converter.tests.test_pypsa_to_grid)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_grid.test_import_exported_network"]], "test_import_network_including_storages_from_pypsa_to_grid() (in module powersimdata.input.converter.tests.test_pypsa_to_grid)": [[40, "powersimdata.input.converter.tests.test_pypsa_to_grid.test_import_network_including_storages_from_pypsa_to_grid"]], "export_grid() (in module powersimdata.input.exporter.export_to_reise)": [[41, "powersimdata.input.exporter.export_to_reise.export_grid"]], "export_to_pypsa() (in module powersimdata.input.exporter.export_to_pypsa)": [[41, "powersimdata.input.exporter.export_to_pypsa.export_to_pypsa"]], "export_transformed_profile() (in module powersimdata.input.exporter.export_to_reise)": [[41, "powersimdata.input.exporter.export_to_reise.export_transformed_profile"]], "powersimdata.input.exporter": [[41, "module-powersimdata.input.exporter"]], "powersimdata.input.exporter.export_to_pypsa": [[41, "module-powersimdata.input.exporter.export_to_pypsa"]], "powersimdata.input.exporter.export_to_reise": [[41, "module-powersimdata.input.exporter.export_to_reise"]], "restore_original_columns() (in module powersimdata.input.exporter.export_to_pypsa)": [[41, "powersimdata.input.exporter.export_to_pypsa.restore_original_columns"]], "testresourcesingrid (class in powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.TestResourcesInGrid"]], "testsummarizeplanttobus (class in powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus"]], "testsummarizeplanttolocation (class in powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToLocation"]], "base_grid() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.base_grid"]], "base_texas() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.base_texas"]], "base_western() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.base_western"]], "check_dataframe_matches() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.check_dataframe_matches"]], "check_grid_models_match_failure() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.check_grid_models_match_failure"]], "check_grid_models_match_success() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.check_grid_models_match_success"]], "ct() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.ct"]], "ct() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.ct"]], "europe() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.europe"]], "get_branch_id() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.get_branch_id"]], "get_change_table_for_id_scaling() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.get_change_table_for_id_scaling"]], "get_change_table_for_new_plant_addition() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.get_change_table_for_new_plant_addition"]], "get_change_table_for_zone_scaling() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.get_change_table_for_zone_scaling"]], "get_plant_id() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.get_plant_id"]], "get_plant_with_resource() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.get_plant_with_resource"]], "get_zone_with_resource() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.get_zone_with_resource"]], "grid() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.grid"]], "mock_gencost() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.mock_gencost"]], "mock_grid() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.mock_grid"]], "mock_plant() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.mock_plant"]], "mock_profile_input_class() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.mock_profile_input_class"]], "mock_scenario() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.mock_scenario"]], "powersimdata.input.tests": [[42, "module-powersimdata.input.tests"]], "powersimdata.input.tests.test_change_table": [[42, "module-powersimdata.input.tests.test_change_table"]], "powersimdata.input.tests.test_check": [[42, "module-powersimdata.input.tests.test_check"]], "powersimdata.input.tests.test_configure": [[42, "module-powersimdata.input.tests.test_configure"]], "powersimdata.input.tests.test_expansion_candidates": [[42, "module-powersimdata.input.tests.test_expansion_candidates"]], "powersimdata.input.tests.test_grid": [[42, "module-powersimdata.input.tests.test_grid"]], "powersimdata.input.tests.test_helpers": [[42, "module-powersimdata.input.tests.test_helpers"]], "powersimdata.input.tests.test_input_data": [[42, "module-powersimdata.input.tests.test_input_data"]], "powersimdata.input.tests.test_profile_input": [[42, "module-powersimdata.input.tests.test_profile_input"]], "powersimdata.input.tests.test_transform_demand": [[42, "module-powersimdata.input.tests.test_transform_demand"]], "powersimdata.input.tests.test_transform_grid": [[42, "module-powersimdata.input.tests.test_transform_grid"]], "powersimdata.input.tests.test_transform_profile": [[42, "module-powersimdata.input.tests.test_transform_profile"]], "profile_input() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.profile_input"]], "raw_demand() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_demand"]], "raw_demand_flexibility_dn() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_demand_flexibility_dn"]], "raw_demand_flexibility_up() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_demand_flexibility_up"]], "raw_hydro() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_hydro"]], "raw_solar() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_solar"]], "raw_wind() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.raw_wind"]], "setup() (powersimdata.input.tests.test_helpers.testresourcesingrid method)": [[42, "powersimdata.input.tests.test_helpers.TestResourcesInGrid.setUp"]], "setup() (powersimdata.input.tests.test_helpers.testsummarizeplanttobus method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus.setUp"]], "setup() (powersimdata.input.tests.test_helpers.testsummarizeplanttolocation method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToLocation.setUp"]], "test_add_branch() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_branch"]], "test_add_branch_pmin_and_pmax() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_branch_Pmin_and_Pmax"]], "test_add_branch_argument_buses_in_different_interconnect() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_branch_argument_buses_in_different_interconnect"]], "test_add_branch_zero_distance_between_buses() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_branch_zero_distance_between_buses"]], "test_add_bus() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_bus"]], "test_add_bus_bad_list_entries() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_bus_bad_list_entries"]], "test_add_bus_bad_type() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_bus_bad_type"]], "test_add_bus_success() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_bus_success"]], "test_add_dcline() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_dcline"]], "test_add_dcline_pmin_and_pmax_and_capacity() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_Pmin_and_Pmax_and_capacity"]], "test_add_dcline_pmin_and_pmax_success() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_Pmin_and_Pmax_success"]], "test_add_dcline_pmin_gt_pmax() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_Pmin_gt_Pmax"]], "test_add_dcline_argument_negative_capacity() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_negative_capacity"]], "test_add_dcline_argument_number_of_keys() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_number_of_keys"]], "test_add_dcline_argument_same_buses() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_same_buses"]], "test_add_dcline_argument_type() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_type"]], "test_add_dcline_argument_wrong_bus() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_wrong_bus"]], "test_add_dcline_argument_wrong_keys() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_argument_wrong_keys"]], "test_add_dcline_in_different_interconnect() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_in_different_interconnect"]], "test_add_dcline_output() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_dcline_output"]], "test_add_demand_flexibility() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_demand_flexibility"]], "test_add_gen_add_entries_in_gencost_data_frame() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_gen_add_entries_in_gencost_data_frame"]], "test_add_gen_add_entries_in_plant_data_frame() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_gen_add_entries_in_plant_data_frame"]], "test_add_new_elements_at_new_buses() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_new_elements_at_new_buses"]], "test_add_plant_argument_type() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_argument_type"]], "test_add_plant_check_pmin_is_added() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_check_pmin_is_added"]], "test_add_plant_negative_pmax() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_negative_pmax"]], "test_add_plant_negative_pmin() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_negative_pmin"]], "test_add_plant_neighbor_can_be_on_same_bus() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_neighbor_can_be_on_same_bus"]], "test_add_plant_pmin_pmax_relationship() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_pmin_pmax_relationship"]], "test_add_plant_wrong_bus() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_wrong_bus"]], "test_add_plant_wrong_resource() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_plant_wrong_resource"]], "test_add_renewable_plant_check_neighbor_is_added() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_renewable_plant_check_neighbor_is_added"]], "test_add_renewable_plant_missing_key_bus_id() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_renewable_plant_missing_key_bus_id"]], "test_add_renewable_plant_missing_key_pmax() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_renewable_plant_missing_key_pmax"]], "test_add_renewable_plant_missing_key_type() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_renewable_plant_missing_key_type"]], "test_add_storage() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_add_storage"]], "test_add_thermal_plant_missing_key_c0() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_thermal_plant_missing_key_c0"]], "test_add_thermal_plant_missing_key_c1() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_thermal_plant_missing_key_c1"]], "test_add_thermal_plant_missing_key_c2() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_thermal_plant_missing_key_c2"]], "test_add_thermal_plant_wrong_coefficients() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_add_thermal_plant_wrong_coefficients"]], "test_added_branch_scaled() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_added_branch_scaled"]], "test_aggregate_demand() (in module powersimdata.input.tests.test_transform_demand)": [[42, "powersimdata.input.tests.test_transform_demand.test_aggregate_demand"]], "test_change_table_clear_bad_key() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_change_table_clear_bad_key"]], "test_change_table_clear_bad_type() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_change_table_clear_bad_type"]], "test_change_table_clear_success() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_change_table_clear_success"]], "test_check_areas_and_format() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_and_format"]], "test_check_areas_and_format_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_and_format_argument_type"]], "test_check_areas_and_format_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_and_format_argument_value"]], "test_check_areas_are_in_grid_and_format() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_are_in_grid_and_format"]], "test_check_areas_are_in_grid_and_format_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_are_in_grid_and_format_argument_type"]], "test_check_areas_are_in_grid_and_format_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_areas_are_in_grid_and_format_argument_value"]], "test_check_branch_voltage() (in module powersimdata.input.tests.test_expansion_candidates)": [[42, "powersimdata.input.tests.test_expansion_candidates.test_check_branch_voltage"]], "test_check_bus_id() (in module powersimdata.input.tests.test_expansion_candidates)": [[42, "powersimdata.input.tests.test_expansion_candidates.test_check_bus_id"]], "test_check_data_frame() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_data_frame"]], "test_check_data_frame_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_data_frame_argument_type"]], "test_check_data_frame_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_data_frame_argument_value"]], "test_check_date() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_date"]], "test_check_date_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_date_argument_type"]], "test_check_date_range_in_scenario() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_date_range_in_scenario"]], "test_check_date_range_in_scenario_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_date_range_in_scenario_argument_value"]], "test_check_date_range_in_time_series_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_date_range_in_time_series_argument_value"]], "test_check_epsilon() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_epsilon"]], "test_check_epsilon_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_epsilon_argument_type"]], "test_check_epsilon_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_epsilon_argument_value"]], "test_check_field() (in module powersimdata.input.tests.test_input_data)": [[42, "powersimdata.input.tests.test_input_data.test_check_field"]], "test_check_gencost() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_gencost"]], "test_check_gencost_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_gencost_argument_type"]], "test_check_gencost_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_gencost_argument_value"]], "test_check_grid() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_grid"]], "test_check_grid_type_failure() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_grid_type_failure"]], "test_check_grid_type_success() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_grid_type_success"]], "test_check_number_hours_to_analyze() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_number_hours_to_analyze"]], "test_check_number_hours_to_analyze_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_number_hours_to_analyze_argument_type"]], "test_check_number_hours_to_analyze_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_number_hours_to_analyze_argument_value"]], "test_check_plants_are_in_grid() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_plants_are_in_grid"]], "test_check_plants_are_in_grid_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_plants_are_in_grid_argument_type"]], "test_check_plants_are_in_grid_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_plants_are_in_grid_argument_value"]], "test_check_resources_and_format() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_and_format"]], "test_check_resources_and_format_argument_type() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_and_format_argument_type"]], "test_check_resources_and_format_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_and_format_argument_value"]], "test_check_resources_are_in_grid_and_format() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_are_in_grid_and_format"]], "test_check_resources_are_in_grid_and_format_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_are_in_grid_and_format_argument_value"]], "test_check_resources_are_renewable_and_format() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_are_renewable_and_format"]], "test_check_resources_are_renewable_and_format_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_resources_are_renewable_and_format_argument_value"]], "test_check_time_series() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_time_series"]], "test_check_time_series_argument_value() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_check_time_series_argument_value"]], "test_column_types() (in module powersimdata.input.tests.test_expansion_candidates)": [[42, "powersimdata.input.tests.test_expansion_candidates.test_column_types"]], "test_deepcopy_works() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_deepcopy_works"]], "test_demand_is_scaled() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_demand_is_scaled"]], "test_error_handling() (in module powersimdata.input.tests.test_check)": [[42, "powersimdata.input.tests.test_check.test_error_handling"]], "test_flexible_demand_profiles_are_trimmed() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_flexible_demand_profiles_are_trimmed"]], "test_get_active_resources_in_grid() (powersimdata.input.tests.test_helpers.testresourcesingrid method)": [[42, "powersimdata.input.tests.test_helpers.TestResourcesInGrid.test_get_active_resources_in_grid"]], "test_get_file_components() (in module powersimdata.input.tests.test_input_data)": [[42, "powersimdata.input.tests.test_input_data.test_get_file_components"]], "test_get_file_path() (in module powersimdata.input.tests.test_profile_input)": [[42, "powersimdata.input.tests.test_profile_input.test_get_file_path"]], "test_get_plant_id_for_resources() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources"]], "test_get_plant_id_for_resources_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_argument_type"]], "test_get_plant_id_for_resources_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_argument_value"]], "test_get_plant_id_for_resources_in_area() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_area"]], "test_get_plant_id_for_resources_in_interconnects() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_interconnects"]], "test_get_plant_id_for_resources_in_interconnects_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_interconnects_argument_type"]], "test_get_plant_id_for_resources_in_interconnects_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_interconnects_argument_value"]], "test_get_plant_id_for_resources_in_loadzones() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_loadzones"]], "test_get_plant_id_for_resources_in_loadzones_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_loadzones_argument_type"]], "test_get_plant_id_for_resources_in_loadzones_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_loadzones_argument_value"]], "test_get_plant_id_for_resources_in_states() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_states"]], "test_get_plant_id_for_resources_in_states_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_states_argument_type"]], "test_get_plant_id_for_resources_in_states_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_for_resources_in_states_argument_value"]], "test_get_plant_id_in_interconnects() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_interconnects"]], "test_get_plant_id_in_interconnects_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_interconnects_argument_type"]], "test_get_plant_id_in_interconnects_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_interconnects_argument_value"]], "test_get_plant_id_in_loadzones() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_loadzones"]], "test_get_plant_id_in_loadzones_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_loadzones_argument_type"]], "test_get_plant_id_in_loadzones_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_loadzones_argument_value"]], "test_get_plant_id_in_states() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_states"]], "test_get_plant_id_in_states_argument_type() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_states_argument_type"]], "test_get_plant_id_in_states_argument_value() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_plant_id_in_states_argument_value"]], "test_get_profile_version() (in module powersimdata.input.tests.test_profile_input)": [[42, "powersimdata.input.tests.test_profile_input.test_get_profile_version"]], "test_get_profile_version_electrification() (in module powersimdata.input.tests.test_profile_input)": [[42, "powersimdata.input.tests.test_profile_input.test_get_profile_version_electrification"]], "test_get_resources_in_grid() (powersimdata.input.tests.test_helpers.testresourcesingrid method)": [[42, "powersimdata.input.tests.test_helpers.TestResourcesInGrid.test_get_resources_in_grid"]], "test_get_storage_id_in_area() (in module powersimdata.input.tests.test_helpers)": [[42, "powersimdata.input.tests.test_helpers.test_get_storage_id_in_area"]], "test_grid_eq_failure_branch() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_branch"]], "test_grid_eq_failure_bus() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_bus"]], "test_grid_eq_failure_dcline() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_dcline"]], "test_grid_eq_failure_gencost_before() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_gencost_before"]], "test_grid_eq_failure_plant() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_plant"]], "test_grid_eq_failure_simple() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_simple"]], "test_grid_eq_failure_storage() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_storage"]], "test_grid_eq_failure_sub() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_failure_sub"]], "test_grid_eq_success_bus_type() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_success_bus_type"]], "test_grid_eq_success_gencost_after() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_success_gencost_after"]], "test_grid_eq_success_plant_ramp30() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_success_plant_ramp30"]], "test_grid_eq_success_simple() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_eq_success_simple"]], "test_grid_incorrect_source() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_incorrect_source"]], "test_grid_type() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_grid_type"]], "test_hydro_is_scaled_by_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_hydro_is_scaled_by_id"]], "test_hydro_is_scaled_by_zone() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_hydro_is_scaled_by_zone"]], "test_hydro_is_scaled_by_zone_and_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_hydro_is_scaled_by_zone_and_id"]], "test_linearize_gencost() (in module powersimdata.input.tests.test_configure)": [[42, "powersimdata.input.tests.test_configure.test_linearize_gencost"]], "test_linearize_gencost_pmin_equal_pmax() (in module powersimdata.input.tests.test_configure)": [[42, "powersimdata.input.tests.test_configure.test_linearize_gencost_pmin_equal_pmax"]], "test_linearize_gencost_two_segment() (in module powersimdata.input.tests.test_configure)": [[42, "powersimdata.input.tests.test_configure.test_linearize_gencost_two_segment"]], "test_new_hydro_added() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_hydro_added"]], "test_new_hydro_are_not_scaled() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_hydro_are_not_scaled"]], "test_new_hydro_profile() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_hydro_profile"]], "test_new_solar_are_added() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_solar_are_added"]], "test_new_solar_are_not_scaled() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_solar_are_not_scaled"]], "test_new_solar_profile() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_solar_profile"]], "test_new_wind_are_added() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_wind_are_added"]], "test_new_wind_are_not_scaled() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_wind_are_not_scaled"]], "test_new_wind_profile() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_new_wind_profile"]], "test_profile_mappings() (in module powersimdata.input.tests.test_transform_demand)": [[42, "powersimdata.input.tests.test_transform_demand.test_profile_mappings"]], "test_remove_branch() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_remove_branch"]], "test_remove_branch() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_remove_branch"]], "test_remove_bus() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_remove_bus"]], "test_remove_bus() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_remove_bus"]], "test_resource_exist() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_resource_exist"]], "test_scale_branch_one_zone() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_branch_one_zone"]], "test_scale_branch_two_zones() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_branch_two_zones"]], "test_scale_dcline() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_dcline"]], "test_scale_gen_capacity_one_zone() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gen_capacity_one_zone"]], "test_scale_gen_one_plant() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gen_one_plant"]], "test_scale_gen_pmin_one_plant() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gen_pmin_one_plant"]], "test_scale_gen_pmin_two_types_two_zones() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gen_pmin_two_types_two_zones"]], "test_scale_gencost_one_plant() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gencost_one_plant"]], "test_scale_gencost_two_types_two_zones() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_gencost_two_types_two_zones"]], "test_scale_one_branch() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_one_branch"]], "test_scale_pmin_by_plant_and_zone_too_high() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_scale_pmin_by_plant_and_zone_too_high"]], "test_scale_pmin_by_plant_too_high() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_scale_pmin_by_plant_too_high"]], "test_scale_pmin_by_zone_too_high() (in module powersimdata.input.tests.test_change_table)": [[42, "powersimdata.input.tests.test_change_table.test_scale_pmin_by_zone_too_high"]], "test_scale_renewable_gen_gencost_one_zone() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_renewable_gen_gencost_one_zone"]], "test_scale_thermal_gen_gencost_two_types_two_zones() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_scale_thermal_gen_gencost_two_types_two_zones"]], "test_set_candidates() (in module powersimdata.input.tests.test_expansion_candidates)": [[42, "powersimdata.input.tests.test_expansion_candidates.test_set_candidates"]], "test_solar_is_scaled_by_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_solar_is_scaled_by_id"]], "test_solar_is_scaled_by_zone() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_solar_is_scaled_by_zone"]], "test_solar_is_scaled_by_zone_and_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_solar_is_scaled_by_zone_and_id"]], "test_summarize_all_buses_false() (powersimdata.input.tests.test_helpers.testsummarizeplanttobus method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus.test_summarize_all_buses_false"]], "test_summarize_all_buses_true() (powersimdata.input.tests.test_helpers.testsummarizeplanttobus method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus.test_summarize_all_buses_true"]], "test_summarize_default() (powersimdata.input.tests.test_helpers.testsummarizeplanttobus method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToBus.test_summarize_default"]], "test_summarize_location() (powersimdata.input.tests.test_helpers.testsummarizeplanttolocation method)": [[42, "powersimdata.input.tests.test_helpers.TestSummarizePlantToLocation.test_summarize_location"]], "test_that_fields_are_not_modified_when_loading_another_grid() (in module powersimdata.input.tests.test_grid)": [[42, "powersimdata.input.tests.test_grid.test_that_fields_are_not_modified_when_loading_another_grid"]], "test_that_only_capacities_are_modified_when_scaling_renewable_gen() (in module powersimdata.input.tests.test_transform_grid)": [[42, "powersimdata.input.tests.test_transform_grid.test_that_only_capacities_are_modified_when_scaling_renewable_gen"]], "test_wind_is_scaled_by_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_wind_is_scaled_by_id"]], "test_wind_is_scaled_by_zone() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_wind_is_scaled_by_zone"]], "test_wind_is_scaled_by_zone_and_id() (in module powersimdata.input.tests.test_transform_profile)": [[42, "powersimdata.input.tests.test_transform_profile.test_wind_is_scaled_by_zone_and_id"]], "csvreader (class in powersimdata.network.csv_reader)": [[43, "powersimdata.network.csv_reader.CSVReader"]], "modelimmutables (class in powersimdata.network.model)": [[43, "powersimdata.network.model.ModelImmutables"]], "zenodo (class in powersimdata.network.zenodo)": [[43, "powersimdata.network.zenodo.Zenodo"]], "area_to_loadzone() (in module powersimdata.network.model)": [[43, "powersimdata.network.model.area_to_loadzone"]], "area_to_loadzone() (powersimdata.network.model.modelimmutables method)": [[43, "powersimdata.network.model.ModelImmutables.area_to_loadzone"]], "check_and_format_interconnect() (in module powersimdata.network.helpers)": [[43, "powersimdata.network.helpers.check_and_format_interconnect"]], "check_model() (in module powersimdata.network.helpers)": [[43, "powersimdata.network.helpers.check_model"]], "get_zone_info() (in module powersimdata.network.helpers)": [[43, "powersimdata.network.helpers.get_zone_info"]], "interconnect_to_name() (in module powersimdata.network.helpers)": [[43, "powersimdata.network.helpers.interconnect_to_name"]], "load_data() (powersimdata.network.zenodo.zenodo method)": [[43, "powersimdata.network.zenodo.Zenodo.load_data"]], "powerset() (in module powersimdata.network.helpers)": [[43, "powersimdata.network.helpers.powerset"]], "powersimdata.network": [[43, "module-powersimdata.network"]], "powersimdata.network.csv_reader": [[43, "module-powersimdata.network.csv_reader"]], "powersimdata.network.helpers": [[43, "module-powersimdata.network.helpers"]], "powersimdata.network.model": [[43, "module-powersimdata.network.model"]], "powersimdata.network.zenodo": [[43, "module-powersimdata.network.zenodo"]], "read() (in module powersimdata.network.csv_reader)": [[43, "powersimdata.network.csv_reader.read"]], "powersimdata.network.constants": [[44, "module-powersimdata.network.constants"]], "powersimdata.network.constants.model": [[44, "module-powersimdata.network.constants.model"]], "eucolor (class in powersimdata.network.constants.carrier.color)": [[45, "powersimdata.network.constants.carrier.color.EUColor"]], "euefficiency (class in powersimdata.network.constants.carrier.efficiency)": [[45, "powersimdata.network.constants.carrier.efficiency.EUEfficiency"]], "euemission (class in powersimdata.network.constants.carrier.emission)": [[45, "powersimdata.network.constants.carrier.emission.EUEmission"]], "eulabel (class in powersimdata.network.constants.carrier.label)": [[45, "powersimdata.network.constants.carrier.label.EULabel"]], "euresource (class in powersimdata.network.constants.carrier.resource)": [[45, "powersimdata.network.constants.carrier.resource.EUResource"]], "usacolor (class in powersimdata.network.constants.carrier.color)": [[45, "powersimdata.network.constants.carrier.color.USAColor"]], "usaefficiency (class in powersimdata.network.constants.carrier.efficiency)": [[45, "powersimdata.network.constants.carrier.efficiency.USAEfficiency"]], "usaemission (class in powersimdata.network.constants.carrier.emission)": [[45, "powersimdata.network.constants.carrier.emission.USAEmission"]], "usalabel (class in powersimdata.network.constants.carrier.label)": [[45, "powersimdata.network.constants.carrier.label.USALabel"]], "usaresource (class in powersimdata.network.constants.carrier.resource)": [[45, "powersimdata.network.constants.carrier.resource.USAResource"]], "get_color() (in module powersimdata.network.constants.carrier.color)": [[45, "powersimdata.network.constants.carrier.color.get_color"]], "get_efficiency() (in module powersimdata.network.constants.carrier.efficiency)": [[45, "powersimdata.network.constants.carrier.efficiency.get_efficiency"]], "get_emission() (in module powersimdata.network.constants.carrier.emission)": [[45, "powersimdata.network.constants.carrier.emission.get_emission"]], "get_label() (in module powersimdata.network.constants.carrier.label)": [[45, "powersimdata.network.constants.carrier.label.get_label"]], "get_plants() (in module powersimdata.network.constants.carrier.plants)": [[45, "powersimdata.network.constants.carrier.plants.get_plants"]], "get_resource() (in module powersimdata.network.constants.carrier.resource)": [[45, "powersimdata.network.constants.carrier.resource.get_resource"]], "get_storage() (in module powersimdata.network.constants.carrier.storage)": [[45, "powersimdata.network.constants.carrier.storage.get_storage"]], "powersimdata.network.constants.carrier": [[45, "module-powersimdata.network.constants.carrier"]], "powersimdata.network.constants.carrier.color": [[45, "module-powersimdata.network.constants.carrier.color"]], "powersimdata.network.constants.carrier.efficiency": [[45, "module-powersimdata.network.constants.carrier.efficiency"]], "powersimdata.network.constants.carrier.emission": [[45, "module-powersimdata.network.constants.carrier.emission"]], "powersimdata.network.constants.carrier.label": [[45, "module-powersimdata.network.constants.carrier.label"]], "powersimdata.network.constants.carrier.plants": [[45, "module-powersimdata.network.constants.carrier.plants"]], "powersimdata.network.constants.carrier.resource": [[45, "module-powersimdata.network.constants.carrier.resource"]], "powersimdata.network.constants.carrier.storage": [[45, "module-powersimdata.network.constants.carrier.storage"]], "divisionmapping (class in powersimdata.network.constants.region.division)": [[46, "powersimdata.network.constants.region.division.DivisionMapping"]], "eu (class in powersimdata.network.constants.region.geography)": [[46, "powersimdata.network.constants.region.geography.EU"]], "eudivisionmapping (class in powersimdata.network.constants.region.division)": [[46, "powersimdata.network.constants.region.division.EUDivisionMapping"]], "euloadzonemapping (class in powersimdata.network.constants.region.loadzone)": [[46, "powersimdata.network.constants.region.loadzone.EULoadzoneMapping"]], "eumapping (class in powersimdata.network.constants.region.mapping)": [[46, "powersimdata.network.constants.region.mapping.EUMapping"]], "interconnectmapping (class in powersimdata.network.constants.region.interconnect)": [[46, "powersimdata.network.constants.region.interconnect.InterconnectMapping"]], "loadzonemapping (class in powersimdata.network.constants.region.loadzone)": [[46, "powersimdata.network.constants.region.loadzone.LoadzoneMapping"]], "mapping (class in powersimdata.network.constants.region.mapping)": [[46, "powersimdata.network.constants.region.mapping.Mapping"]], "usa (class in powersimdata.network.constants.region.geography)": [[46, "powersimdata.network.constants.region.geography.USA"]], "usadivisionmapping (class in powersimdata.network.constants.region.division)": [[46, "powersimdata.network.constants.region.division.USADivisionMapping"]], "usaloadzonemapping (class in powersimdata.network.constants.region.loadzone)": [[46, "powersimdata.network.constants.region.loadzone.USALoadzoneMapping"]], "usamapping (class in powersimdata.network.constants.region.mapping)": [[46, "powersimdata.network.constants.region.mapping.USAMapping"]], "check_zone() (in module powersimdata.network.constants.region.zones)": [[46, "powersimdata.network.constants.region.zones.check_zone"]], "format() (in module powersimdata.network.constants.region.geography)": [[46, "powersimdata.network.constants.region.geography.format"]], "from_csv() (in module powersimdata.network.constants.region.zones)": [[46, "powersimdata.network.constants.region.zones.from_csv"]], "from_pypsa() (in module powersimdata.network.constants.region.zones)": [[46, "powersimdata.network.constants.region.zones.from_pypsa"]], "get_division_mapping() (in module powersimdata.network.constants.region.division)": [[46, "powersimdata.network.constants.region.division.get_division_mapping"]], "get_geography() (in module powersimdata.network.constants.region.geography)": [[46, "powersimdata.network.constants.region.geography.get_geography"]], "get_interconnect_mapping() (in module powersimdata.network.constants.region.interconnect)": [[46, "powersimdata.network.constants.region.interconnect.get_interconnect_mapping"]], "get_loadzone_mapping() (in module powersimdata.network.constants.region.loadzone)": [[46, "powersimdata.network.constants.region.loadzone.get_loadzone_mapping"]], "get_mapping() (in module powersimdata.network.constants.region.mapping)": [[46, "powersimdata.network.constants.region.mapping.get_mapping"]], "powersimdata.network.constants.region": [[46, "module-powersimdata.network.constants.region"]], "powersimdata.network.constants.region.division": [[46, "module-powersimdata.network.constants.region.division"]], "powersimdata.network.constants.region.geography": [[46, "module-powersimdata.network.constants.region.geography"]], "powersimdata.network.constants.region.interconnect": [[46, "module-powersimdata.network.constants.region.interconnect"]], "powersimdata.network.constants.region.loadzone": [[46, "module-powersimdata.network.constants.region.loadzone"]], "powersimdata.network.constants.region.mapping": [[46, "module-powersimdata.network.constants.region.mapping"]], "powersimdata.network.constants.region.zones": [[46, "module-powersimdata.network.constants.region.zones"]], "substitute() (powersimdata.network.constants.region.geography.usa method)": [[46, "powersimdata.network.constants.region.geography.USA.substitute"]], "powersimdata.network.constants.region.tests": [[47, "module-powersimdata.network.constants.region.tests"]], "powersimdata.network.constants.region.tests.test_zones": [[47, "module-powersimdata.network.constants.region.tests.test_zones"]], "test_check_zone_argument_type() (in module powersimdata.network.constants.region.tests.test_zones)": [[47, "powersimdata.network.constants.region.tests.test_zones.test_check_zone_argument_type"]], "test_check_zone_column() (in module powersimdata.network.constants.region.tests.test_zones)": [[47, "powersimdata.network.constants.region.tests.test_zones.test_check_zone_column"]], "test_check_zone_index() (in module powersimdata.network.constants.region.tests.test_zones)": [[47, "powersimdata.network.constants.region.tests.test_zones.test_check_zone_index"]], "pypsabase (class in powersimdata.network.europe_tub.model)": [[48, "powersimdata.network.europe_tub.model.PyPSABase"]], "tub (class in powersimdata.network.europe_tub.model)": [[48, "powersimdata.network.europe_tub.model.TUB"]], "build() (powersimdata.network.europe_tub.model.pypsabase method)": [[48, "powersimdata.network.europe_tub.model.PyPSABase.build"]], "build() (powersimdata.network.europe_tub.model.tub method)": [[48, "powersimdata.network.europe_tub.model.TUB.build"]], "build_eur() (powersimdata.network.europe_tub.model.pypsabase method)": [[48, "powersimdata.network.europe_tub.model.PyPSABase.build_eur"]], "from_zenodo() (powersimdata.network.europe_tub.model.tub method)": [[48, "powersimdata.network.europe_tub.model.TUB.from_zenodo"]], "powersimdata.network.europe_tub": [[48, "module-powersimdata.network.europe_tub"]], "powersimdata.network.europe_tub.model": [[48, "module-powersimdata.network.europe_tub.model"]], "hifld (class in powersimdata.network.hifld.model)": [[49, "powersimdata.network.hifld.model.HIFLD"]], "build() (powersimdata.network.hifld.model.hifld method)": [[49, "powersimdata.network.hifld.model.HIFLD.build"]], "powersimdata.network.hifld": [[49, "module-powersimdata.network.hifld"]], "powersimdata.network.hifld.model": [[49, "module-powersimdata.network.hifld.model"]], "tamu (class in powersimdata.network.usa_tamu.model)": [[50, "powersimdata.network.usa_tamu.model.TAMU"]], "build() (powersimdata.network.usa_tamu.model.tamu method)": [[50, "powersimdata.network.usa_tamu.model.TAMU.build"]], "powersimdata.network.usa_tamu": [[50, "module-powersimdata.network.usa_tamu"]], "powersimdata.network.usa_tamu.model": [[50, "module-powersimdata.network.usa_tamu.model"]], "outputdata (class in powersimdata.output.output_data)": [[51, "powersimdata.output.output_data.OutputData"]], "construct_load_shed() (in module powersimdata.output.output_data)": [[51, "powersimdata.output.output_data.construct_load_shed"]], "get_data() (powersimdata.output.output_data.outputdata method)": [[51, "powersimdata.output.output_data.OutputData.get_data"]], "powersimdata.output": [[51, "module-powersimdata.output"]], "powersimdata.output.output_data": [[51, "module-powersimdata.output.output_data"]], "analyze (class in powersimdata.scenario.analyze)": [[52, "powersimdata.scenario.analyze.Analyze"]], "backupdisk (class in powersimdata.scenario.move)": [[52, "powersimdata.scenario.move.BackUpDisk"]], "create (class in powersimdata.scenario.create)": [[52, "powersimdata.scenario.create.Create"]], "delete (class in powersimdata.scenario.delete)": [[52, "powersimdata.scenario.delete.Delete"]], "execute (class in powersimdata.scenario.execute)": [[52, "powersimdata.scenario.execute.Execute"]], "fromcsv (class in powersimdata.scenario.create)": [[52, "powersimdata.scenario.create.FromCSV"]], "frompypsa (class in powersimdata.scenario.create)": [[52, "powersimdata.scenario.create.FromPyPSA"]], "move (class in powersimdata.scenario.move)": [[52, "powersimdata.scenario.move.Move"]], "ready (class in powersimdata.scenario.ready)": [[52, "powersimdata.scenario.ready.Ready"]], "scenario (class in powersimdata.scenario.scenario)": [[52, "powersimdata.scenario.scenario.Scenario"]], "simulationinput (class in powersimdata.scenario.execute)": [[52, "powersimdata.scenario.execute.SimulationInput"]], "state (class in powersimdata.scenario.state)": [[52, "powersimdata.scenario.state.State"]], "allowed (powersimdata.scenario.analyze.analyze attribute)": [[52, "powersimdata.scenario.analyze.Analyze.allowed"]], "allowed (powersimdata.scenario.create.create attribute)": [[52, "powersimdata.scenario.create.Create.allowed"]], "allowed (powersimdata.scenario.delete.delete attribute)": [[52, "powersimdata.scenario.delete.Delete.allowed"]], "allowed (powersimdata.scenario.execute.execute attribute)": [[52, "powersimdata.scenario.execute.Execute.allowed"]], "allowed (powersimdata.scenario.move.move attribute)": [[52, "powersimdata.scenario.move.Move.allowed"]], "allowed (powersimdata.scenario.state.state attribute)": [[52, "powersimdata.scenario.state.State.allowed"]], "backup_scenario() (powersimdata.scenario.move.backupdisk method)": [[52, "powersimdata.scenario.move.BackUpDisk.backup_scenario"]], "change() (powersimdata.scenario.scenario.scenario method)": [[52, "powersimdata.scenario.scenario.Scenario.change"]], "check_progress() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.check_progress"]], "create_scenario() (powersimdata.scenario.create.create method)": [[52, "powersimdata.scenario.create.Create.create_scenario"]], "default_exported_methods (powersimdata.scenario.create.create attribute)": [[52, "powersimdata.scenario.create.Create.default_exported_methods"]], "delete_scenario() (powersimdata.scenario.delete.delete method)": [[52, "powersimdata.scenario.delete.Delete.delete_scenario"]], "exported_methods (powersimdata.scenario.analyze.analyze attribute)": [[52, "powersimdata.scenario.analyze.Analyze.exported_methods"]], "exported_methods (powersimdata.scenario.delete.delete attribute)": [[52, "powersimdata.scenario.delete.Delete.exported_methods"]], "exported_methods (powersimdata.scenario.execute.execute attribute)": [[52, "powersimdata.scenario.execute.Execute.exported_methods"]], "exported_methods (powersimdata.scenario.move.move attribute)": [[52, "powersimdata.scenario.move.Move.exported_methods"]], "exported_methods (powersimdata.scenario.ready.ready attribute)": [[52, "powersimdata.scenario.ready.Ready.exported_methods"]], "exported_methods (powersimdata.scenario.state.state attribute)": [[52, "powersimdata.scenario.state.State.exported_methods"]], "extract_simulation_output() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.extract_simulation_output"]], "get_averaged_cong() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_averaged_cong"]], "get_base_grid() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_base_grid"]], "get_base_profile() (powersimdata.scenario.create.fromcsv method)": [[52, "powersimdata.scenario.create.FromCSV.get_base_profile"]], "get_builder() (in module powersimdata.scenario.create)": [[52, "powersimdata.scenario.create.get_builder"]], "get_bus_demand() (powersimdata.scenario.create.create method)": [[52, "powersimdata.scenario.create.Create.get_bus_demand"]], "get_bus_demand() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_bus_demand"]], "get_congl() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_congl"]], "get_congu() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_congu"]], "get_ct() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_ct"]], "get_dcline_pf() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_dcline_pf"]], "get_demand() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_demand"]], "get_demand() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_demand"]], "get_gentype_profile() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_gentype_profile"]], "get_grid() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_grid"]], "get_hydro() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_hydro"]], "get_lmp() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_lmp"]], "get_load_shed() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_load_shed"]], "get_load_shift_dn() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_load_shift_dn"]], "get_load_shift_up() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_load_shift_up"]], "get_pf() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_pf"]], "get_pg() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_pg"]], "get_profile() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_profile"]], "get_scenario_table() (powersimdata.scenario.scenario.scenario method)": [[52, "powersimdata.scenario.scenario.Scenario.get_scenario_table"]], "get_solar() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_solar"]], "get_storage_e() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_storage_e"]], "get_storage_pg() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.get_storage_pg"]], "get_wind() (powersimdata.scenario.ready.ready method)": [[52, "powersimdata.scenario.ready.Ready.get_wind"]], "launch_simulation() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.launch_simulation"]], "move_scenario() (powersimdata.scenario.move.move method)": [[52, "powersimdata.scenario.move.Move.move_scenario"]], "name (powersimdata.scenario.analyze.analyze attribute)": [[52, "powersimdata.scenario.analyze.Analyze.name"]], "name (powersimdata.scenario.create.create attribute)": [[52, "powersimdata.scenario.create.Create.name"]], "name (powersimdata.scenario.delete.delete attribute)": [[52, "powersimdata.scenario.delete.Delete.name"]], "name (powersimdata.scenario.execute.execute attribute)": [[52, "powersimdata.scenario.execute.Execute.name"]], "name (powersimdata.scenario.move.move attribute)": [[52, "powersimdata.scenario.move.Move.name"]], "name (powersimdata.scenario.state.state attribute)": [[52, "powersimdata.scenario.state.State.name"]], "powersimdata.scenario": [[52, "module-powersimdata.scenario"]], "powersimdata.scenario.analyze": [[52, "module-powersimdata.scenario.analyze"]], "powersimdata.scenario.check": [[52, "module-powersimdata.scenario.check"]], "powersimdata.scenario.create": [[52, "module-powersimdata.scenario.create"]], "powersimdata.scenario.delete": [[52, "module-powersimdata.scenario.delete"]], "powersimdata.scenario.execute": [[52, "module-powersimdata.scenario.execute"]], "powersimdata.scenario.move": [[52, "module-powersimdata.scenario.move"]], "powersimdata.scenario.ready": [[52, "module-powersimdata.scenario.ready"]], "powersimdata.scenario.scenario": [[52, "module-powersimdata.scenario.scenario"]], "powersimdata.scenario.state": [[52, "module-powersimdata.scenario.state"]], "prepare_demand_flexibility_parameters() (powersimdata.scenario.execute.simulationinput method)": [[52, "powersimdata.scenario.execute.SimulationInput.prepare_demand_flexibility_parameters"]], "prepare_grid() (powersimdata.scenario.execute.simulationinput method)": [[52, "powersimdata.scenario.execute.SimulationInput.prepare_grid"]], "prepare_profile() (powersimdata.scenario.execute.simulationinput method)": [[52, "powersimdata.scenario.execute.SimulationInput.prepare_profile"]], "prepare_simulation_input() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.prepare_simulation_input"]], "print_available_profile() (powersimdata.scenario.create.fromcsv method)": [[52, "powersimdata.scenario.create.FromCSV.print_available_profile"]], "print_infeasibilities() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.print_infeasibilities"]], "print_scenario_info() (powersimdata.scenario.state.state method)": [[52, "powersimdata.scenario.state.State.print_scenario_info"]], "print_scenario_status() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.print_scenario_status"]], "refresh() (powersimdata.scenario.analyze.analyze method)": [[52, "powersimdata.scenario.analyze.Analyze.refresh"]], "refresh() (powersimdata.scenario.execute.execute method)": [[52, "powersimdata.scenario.execute.Execute.refresh"]], "refresh() (powersimdata.scenario.state.state method)": [[52, "powersimdata.scenario.state.State.refresh"]], "scenario_id (powersimdata.scenario.execute.execute property)": [[52, "powersimdata.scenario.execute.Execute.scenario_id"]], "set_base_grid() (powersimdata.scenario.create.fromcsv method)": [[52, "powersimdata.scenario.create.FromCSV.set_base_grid"]], "set_base_grid() (powersimdata.scenario.create.frompypsa method)": [[52, "powersimdata.scenario.create.FromPyPSA.set_base_grid"]], "set_base_profile() (powersimdata.scenario.create.fromcsv method)": [[52, "powersimdata.scenario.create.FromCSV.set_base_profile"]], "set_base_profile() (powersimdata.scenario.create.frompypsa method)": [[52, "powersimdata.scenario.create.FromPyPSA.set_base_profile"]], "set_change_table() (powersimdata.scenario.create.fromcsv method)": [[52, "powersimdata.scenario.create.FromCSV.set_change_table"]], "set_change_table() (powersimdata.scenario.create.frompypsa method)": [[52, "powersimdata.scenario.create.FromPyPSA.set_change_table"]], "set_grid() (powersimdata.scenario.create.create method)": [[52, "powersimdata.scenario.create.Create.set_grid"]], "switch() (powersimdata.scenario.state.state method)": [[52, "powersimdata.scenario.state.State.switch"]], "mock_scenario() (in module powersimdata.scenario.tests.test_check)": [[53, "powersimdata.scenario.tests.test_check.mock_scenario"]], "powersimdata.scenario.tests": [[53, "module-powersimdata.scenario.tests"]], "powersimdata.scenario.tests.test_check": [[53, "module-powersimdata.scenario.tests.test_check"]], "powersimdata.scenario.tests.test_create": [[53, "module-powersimdata.scenario.tests.test_create"]], "powersimdata.scenario.tests.test_scenario": [[53, "module-powersimdata.scenario.tests.test_scenario"]], "test_bad_scenario_name() (in module powersimdata.scenario.tests.test_scenario)": [[53, "powersimdata.scenario.tests.test_scenario.test_bad_scenario_name"]], "test_check_scenario_is_in_analyze() (in module powersimdata.scenario.tests.test_check)": [[53, "powersimdata.scenario.tests.test_check.test_check_scenario_is_in_analyze"]], "test_check_scenario_is_in_analyze_state_argument_type() (in module powersimdata.scenario.tests.test_check)": [[53, "powersimdata.scenario.tests.test_check.test_check_scenario_is_in_analyze_state_argument_type"]], "test_check_scenario_is_in_analyze_state_argument_value() (in module powersimdata.scenario.tests.test_check)": [[53, "powersimdata.scenario.tests.test_check.test_check_scenario_is_in_analyze_state_argument_value"]], "test_get_demand_and_get_bus_demand() (in module powersimdata.scenario.tests.test_create)": [[53, "powersimdata.scenario.tests.test_create.test_get_demand_and_get_bus_demand"]], "test_get_solar() (in module powersimdata.scenario.tests.test_create)": [[53, "powersimdata.scenario.tests.test_create.test_get_solar"]], "test_scenario_workflow() (in module powersimdata.scenario.tests.test_scenario)": [[53, "powersimdata.scenario.tests.test_scenario.test_scenario_workflow"]], "mockanalyze (class in powersimdata.tests.mock_analyze)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze"]], "mockbuilder (class in powersimdata.tests.mock_builder)": [[54, "powersimdata.tests.mock_builder.MockBuilder"]], "mockchangetable (class in powersimdata.tests.mock_change_table)": [[54, "powersimdata.tests.mock_change_table.MockChangeTable"]], "mockcontext (class in powersimdata.tests.mock_context)": [[54, "powersimdata.tests.mock_context.MockContext"]], "mockgrid (class in powersimdata.tests.mock_grid)": [[54, "powersimdata.tests.mock_grid.MockGrid"]], "mockprofileinput (class in powersimdata.tests.mock_profile_input)": [[54, "powersimdata.tests.mock_profile_input.MockProfileInput"]], "mockscenario (class in powersimdata.tests.mock_scenario)": [[54, "powersimdata.tests.mock_scenario.MockScenario"]], "mockscenarioinfo (class in powersimdata.tests.mock_scenario_info)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo"]], "testmockgrid (class in powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.TestMockGrid"]], "testmockinputdata (class in powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.TestMockInputData"]], "testmockscenario (class in powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.TestMockScenario"]], "testmockscenarioinfo (class in powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.TestMockScenarioInfo"]], "area_to_loadzone() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.area_to_loadzone"]], "exported_methods (powersimdata.tests.mock_analyze.mockanalyze attribute)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.exported_methods"]], "get_available_resource() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_available_resource"]], "get_bus_demand() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_bus_demand"]], "get_capacity() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_capacity"]], "get_capacity_factor() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_capacity_factor"]], "get_congl() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_congl"]], "get_congu() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_congu"]], "get_ct() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_ct"]], "get_curtailment() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_curtailment"]], "get_data() (powersimdata.tests.mock_profile_input.mockprofileinput method)": [[54, "powersimdata.tests.mock_profile_input.MockProfileInput.get_data"]], "get_data_access() (powersimdata.tests.mock_context.mockcontext method)": [[54, "powersimdata.tests.mock_context.MockContext.get_data_access"]], "get_dcline_pf() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_dcline_pf"]], "get_demand() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_demand"]], "get_demand() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_demand"]], "get_generation() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_generation"]], "get_grid() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_grid"]], "get_hydro() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_hydro"]], "get_lmp() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_lmp"]], "get_no_congest_capacity_factor() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_no_congest_capacity_factor"]], "get_pf() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_pf"]], "get_pg() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_pg"]], "get_profile() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_profile"]], "get_profile_resource() (powersimdata.tests.mock_scenario_info.mockscenarioinfo method)": [[54, "powersimdata.tests.mock_scenario_info.MockScenarioInfo.get_profile_resource"]], "get_solar() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_solar"]], "get_storage_e() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_storage_e"]], "get_storage_pg() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_storage_pg"]], "get_wind() (powersimdata.tests.mock_analyze.mockanalyze method)": [[54, "powersimdata.tests.mock_analyze.MockAnalyze.get_wind"]], "grid() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.grid"]], "mock_hydro() (in module powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.mock_hydro"]], "mock_pg() (in module powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.mock_pg"]], "mock_solar() (in module powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.mock_solar"]], "mock_wind() (in module powersimdata.tests.test_mocks)": [[54, "powersimdata.tests.test_mocks.mock_wind"]], "powersimdata.tests": [[54, "module-powersimdata.tests"]], "powersimdata.tests.mock_analyze": [[54, "module-powersimdata.tests.mock_analyze"]], "powersimdata.tests.mock_builder": [[54, "module-powersimdata.tests.mock_builder"]], "powersimdata.tests.mock_change_table": [[54, "module-powersimdata.tests.mock_change_table"]], "powersimdata.tests.mock_context": [[54, "module-powersimdata.tests.mock_context"]], "powersimdata.tests.mock_grid": [[54, "module-powersimdata.tests.mock_grid"]], "powersimdata.tests.mock_profile_input": [[54, "module-powersimdata.tests.mock_profile_input"]], "powersimdata.tests.mock_scenario": [[54, "module-powersimdata.tests.mock_scenario"]], "powersimdata.tests.mock_scenario_info": [[54, "module-powersimdata.tests.mock_scenario_info"]], "powersimdata.tests.test_mocks": [[54, "module-powersimdata.tests.test_mocks"]], "test_create_mock_profile_input() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_create_mock_profile_input"]], "test_create_mock_scenario_info() (powersimdata.tests.test_mocks.testmockscenarioinfo method)": [[54, "powersimdata.tests.test_mocks.TestMockScenarioInfo.test_create_mock_scenario_info"]], "test_default_float() (powersimdata.tests.test_mocks.testmockscenarioinfo method)": [[54, "powersimdata.tests.test_mocks.TestMockScenarioInfo.test_default_float"]], "test_grid_set_correctly() (powersimdata.tests.test_mocks.testmockscenarioinfo method)": [[54, "powersimdata.tests.test_mocks.TestMockScenarioInfo.test_grid_set_correctly"]], "test_happy_case() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_happy_case"]], "test_info_set_correctly() (powersimdata.tests.test_mocks.testmockscenarioinfo method)": [[54, "powersimdata.tests.test_mocks.TestMockScenarioInfo.test_info_set_correctly"]], "test_mock_grid_failures() (powersimdata.tests.test_mocks.testmockgrid method)": [[54, "powersimdata.tests.test_mocks.TestMockGrid.test_mock_grid_failures"]], "test_mock_grid_successes() (powersimdata.tests.test_mocks.testmockgrid method)": [[54, "powersimdata.tests.test_mocks.TestMockGrid.test_mock_grid_successes"]], "test_mock_hydro_stored_properly() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_hydro_stored_properly"]], "test_mock_pg_stored_properly() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_pg_stored_properly"]], "test_mock_profile() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_profile"]], "test_mock_profile_value() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_profile_value"]], "test_mock_solar_stored_properly() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_solar_stored_properly"]], "test_mock_wind_stored_properly() (powersimdata.tests.test_mocks.testmockscenario method)": [[54, "powersimdata.tests.test_mocks.TestMockScenario.test_mock_wind_stored_properly"]], "test_multiple_get_data_calls_returns_same_data() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_multiple_get_data_calls_returns_same_data"]], "test_no_end_time() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_no_end_time"]], "test_no_freq() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_no_freq"]], "test_no_period() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_no_period"]], "test_no_start_time() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_no_start_time"]], "test_raise_if_all_date_range_fields_present() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_raise_if_all_date_range_fields_present"]], "test_raise_if_no_profile_specified() (powersimdata.tests.test_mocks.testmockinputdata method)": [[54, "powersimdata.tests.test_mocks.TestMockInputData.test_raise_if_no_profile_specified"]], "backup_data_root_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.BACKUP_DATA_ROOT_DIR"]], "config_map (powersimdata.utility.config.deploymentmode attribute)": [[55, "powersimdata.utility.config.DeploymentMode.CONFIG_MAP"]], "cachekeybuilder (class in powersimdata.utility.helpers)": [[55, "powersimdata.utility.helpers.CacheKeyBuilder"]], "config (class in powersimdata.utility.config)": [[55, "powersimdata.utility.config.Config"]], "container (powersimdata.utility.config.deploymentmode attribute)": [[55, "powersimdata.utility.config.DeploymentMode.Container"]], "containerconfig (class in powersimdata.utility.config)": [[55, "powersimdata.utility.config.ContainerConfig"]], "data_root_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.DATA_ROOT_DIR"]], "data_root_dir (powersimdata.utility.config.localconfig attribute)": [[55, "powersimdata.utility.config.LocalConfig.DATA_ROOT_DIR"]], "deploymentmode (class in powersimdata.utility.config)": [[55, "powersimdata.utility.config.DeploymentMode"]], "engine_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.ENGINE_DIR"]], "engine_dir (powersimdata.utility.config.localconfig attribute)": [[55, "powersimdata.utility.config.LocalConfig.ENGINE_DIR"]], "execute_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.EXECUTE_DIR"]], "input_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.INPUT_DIR"]], "local_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.LOCAL_DIR"]], "local (powersimdata.utility.config.deploymentmode attribute)": [[55, "powersimdata.utility.config.DeploymentMode.Local"]], "localconfig (class in powersimdata.utility.config)": [[55, "powersimdata.utility.config.LocalConfig"]], "model_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.MODEL_DIR"]], "model_dir (powersimdata.utility.config.serverconfig attribute)": [[55, "powersimdata.utility.config.ServerConfig.MODEL_DIR"]], "memorycache (class in powersimdata.utility.helpers)": [[55, "powersimdata.utility.helpers.MemoryCache"]], "output_dir (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.OUTPUT_DIR"]], "printmanager (class in powersimdata.utility.helpers)": [[55, "powersimdata.utility.helpers.PrintManager"]], "server_address (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.SERVER_ADDRESS"]], "server_address (powersimdata.utility.config.containerconfig attribute)": [[55, "powersimdata.utility.config.ContainerConfig.SERVER_ADDRESS"]], "server_address (powersimdata.utility.config.serverconfig attribute)": [[55, "powersimdata.utility.config.ServerConfig.SERVER_ADDRESS"]], "server_ssh_port (powersimdata.utility.config.config attribute)": [[55, "powersimdata.utility.config.Config.SERVER_SSH_PORT"]], "server_ssh_port (powersimdata.utility.config.serverconfig attribute)": [[55, "powersimdata.utility.config.ServerConfig.SERVER_SSH_PORT"]], "server (powersimdata.utility.config.deploymentmode attribute)": [[55, "powersimdata.utility.config.DeploymentMode.Server"]], "serverconfig (class in powersimdata.utility.config)": [[55, "powersimdata.utility.config.ServerConfig"]], "angular_distance() (in module powersimdata.utility.distance)": [[55, "powersimdata.utility.distance.angular_distance"]], "block_print() (powersimdata.utility.helpers.printmanager static method)": [[55, "powersimdata.utility.helpers.PrintManager.block_print"]], "build() (powersimdata.utility.helpers.cachekeybuilder method)": [[55, "powersimdata.utility.helpers.CacheKeyBuilder.build"]], "cache_key() (in module powersimdata.utility.helpers)": [[55, "powersimdata.utility.helpers.cache_key"]], "enable_print() (powersimdata.utility.helpers.printmanager method)": [[55, "powersimdata.utility.helpers.PrintManager.enable_print"]], "find_closest_neighbor() (in module powersimdata.utility.distance)": [[55, "powersimdata.utility.distance.find_closest_neighbor"]], "get() (powersimdata.utility.helpers.memorycache method)": [[55, "powersimdata.utility.helpers.MemoryCache.get"]], "get_blob_credential() (in module powersimdata.utility.server_setup)": [[55, "powersimdata.utility.server_setup.get_blob_credential"]], "get_config() (in module powersimdata.utility.config)": [[55, "powersimdata.utility.config.get_config"]], "get_deployment_mode() (in module powersimdata.utility.config)": [[55, "powersimdata.utility.config.get_deployment_mode"]], "get_server_user() (in module powersimdata.utility.server_setup)": [[55, "powersimdata.utility.server_setup.get_server_user"]], "great_circle_distance() (in module powersimdata.utility.distance)": [[55, "powersimdata.utility.distance.great_circle_distance"]], "haversine() (in module powersimdata.utility.distance)": [[55, "powersimdata.utility.distance.haversine"]], "initialize() (powersimdata.utility.config.localconfig method)": [[55, "powersimdata.utility.config.LocalConfig.initialize"]], "list_keys() (powersimdata.utility.helpers.memorycache method)": [[55, "powersimdata.utility.helpers.MemoryCache.list_keys"]], "ll2uv() (in module powersimdata.utility.distance)": [[55, "powersimdata.utility.distance.ll2uv"]], "powersimdata.utility": [[55, "module-powersimdata.utility"]], "powersimdata.utility.config": [[55, "module-powersimdata.utility.config"]], "powersimdata.utility.distance": [[55, "module-powersimdata.utility.distance"]], "powersimdata.utility.helpers": [[55, "module-powersimdata.utility.helpers"]], "powersimdata.utility.server_setup": [[55, "module-powersimdata.utility.server_setup"]], "put() (powersimdata.utility.helpers.memorycache method)": [[55, "powersimdata.utility.helpers.MemoryCache.put"]], "powersimdata.utility.templates": [[56, "module-powersimdata.utility.templates"]], "powersimdata.utility.tests": [[57, "module-powersimdata.utility.tests"]], "powersimdata.utility.tests.test_distance": [[57, "module-powersimdata.utility.tests.test_distance"]], "powersimdata.utility.tests.test_helpers": [[57, "module-powersimdata.utility.tests.test_helpers"]], "test_angular_distance() (in module powersimdata.utility.tests.test_distance)": [[57, "powersimdata.utility.tests.test_distance.test_angular_distance"]], "test_cache_key_distinct_types() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_cache_key_distinct_types"]], "test_cache_key_valid_types() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_cache_key_valid_types"]], "test_find_closest_neighbor() (in module powersimdata.utility.tests.test_distance)": [[57, "powersimdata.utility.tests.test_distance.test_find_closest_neighbor"]], "test_ll2uv() (in module powersimdata.utility.tests.test_distance)": [[57, "powersimdata.utility.tests.test_distance.test_ll2uv"]], "test_mem_cache_get_returns_copy() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_mem_cache_get_returns_copy"]], "test_mem_cache_put_dict() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_mem_cache_put_dict"]], "test_mem_cache_put_version_never_changes() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_mem_cache_put_version_never_changes"]], "test_no_collision() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_no_collision"]], "test_print_is_disabled() (in module powersimdata.utility.tests.test_helpers)": [[57, "powersimdata.utility.tests.test_helpers.test_print_is_disabled"]], "prereise": [[63, "module-prereise"]], "add_data_source_to_download_parser() (in module prereise.cli.helpers)": [[64, "prereise.cli.helpers.add_data_source_to_download_parser"]], "prereise.cli": [[64, "module-prereise.cli"]], "prereise.cli.constants": [[64, "module-prereise.cli.constants"]], "prereise.cli.helpers": [[64, "module-prereise.cli.helpers"]], "validate_date() (in module prereise.cli.helpers)": [[64, "prereise.cli.helpers.validate_date"]], "validate_file_path() (in module prereise.cli.helpers)": [[64, "prereise.cli.helpers.validate_file_path"]], "validate_year() (in module prereise.cli.helpers)": [[64, "prereise.cli.helpers.validate_year"]], "commandnotsupportederror": [[65, "prereise.cli.data_sources.exceptions.CommandNotSupportedError"]], "demanddata (class in prereise.cli.data_sources.demand_data)": [[65, "prereise.cli.data_sources.demand_data.DemandData"]], "hydrodata (class in prereise.cli.data_sources.hydro_data)": [[65, "prereise.cli.data_sources.hydro_data.HydroData"]], "command_name (prereise.cli.data_sources.demand_data.demanddata property)": [[65, "prereise.cli.data_sources.demand_data.DemandData.command_name"]], "command_name (prereise.cli.data_sources.hydro_data.hydrodata property)": [[65, "prereise.cli.data_sources.hydro_data.HydroData.command_name"]], "prereise.cli.data_sources.demand_data": [[65, "module-prereise.cli.data_sources.demand_data"]], "prereise.cli.data_sources.exceptions": [[65, "module-prereise.cli.data_sources.exceptions"]], "prereise.cli.data_sources.hydro_data": [[65, "module-prereise.cli.data_sources.hydro_data"]], "prereise.cli.download": [[67, "module-prereise.cli.download"]], "prereise.cli.download.tests": [[68, "module-prereise.cli.download.tests"]], "data_source() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.data_source"]], "prereise.cli.tests": [[69, "module-prereise.cli.tests"]], "prereise.cli.tests.test_helpers": [[69, "module-prereise.cli.tests.test_helpers"]], "test_add_data_source_to_download_parser() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_add_data_source_to_download_parser"]], "test_validate_date() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_date"]], "test_validate_date_bad_date() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_date_bad_date"]], "test_validate_file_path() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_file_path"]], "test_validate_file_path_bad_path() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_file_path_bad_path"]], "test_validate_file_path_is_direcotry() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_file_path_is_direcotry"]], "test_validate_year() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_year"]], "test_validate_year_bad_year() (in module prereise.cli.tests.test_helpers)": [[69, "prereise.cli.tests.test_helpers.test_validate_year_bad_year"]], "ratelimit (class in prereise.gather.request_util)": [[70, "prereise.gather.request_util.RateLimit"]], "transienterror": [[70, "prereise.gather.request_util.TransientError"]], "get_monthly_net_generation() (in module prereise.gather.helpers)": [[70, "prereise.gather.helpers.get_monthly_net_generation"]], "invoke() (prereise.gather.request_util.ratelimit method)": [[70, "prereise.gather.request_util.RateLimit.invoke"]], "prereise.gather": [[70, "module-prereise.gather"]], "prereise.gather.const": [[70, "module-prereise.gather.const"]], "prereise.gather.helpers": [[70, "module-prereise.gather.helpers"]], "prereise.gather.request_util": [[70, "module-prereise.gather.request_util"]], "rate_limit() (in module prereise.gather.request_util)": [[70, "prereise.gather.request_util.rate_limit"]], "retry() (in module prereise.gather.request_util)": [[70, "prereise.gather.request_util.retry"]], "trim_eia_form_923() (in module prereise.gather.helpers)": [[70, "prereise.gather.helpers.trim_eia_form_923"]], "prereise.gather.demanddata": [[71, "module-prereise.gather.demanddata"]], "loadprojectionscenario (class in prereise.gather.demanddata.bldg_electrification.load_projection_scenario)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario"]], "adjust_puma_slopes() (in module prereise.gather.demanddata.bldg_electrification.ff_model)": [[72, "prereise.gather.demanddata.bldg_electrification.ff_model.adjust_puma_slopes"]], "calculate_cop() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg.calculate_cop"]], "calculate_r2() (in module prereise.gather.demanddata.bldg_electrification.ff_model)": [[72, "prereise.gather.demanddata.bldg_electrification.ff_model.calculate_r2"]], "calculate_state_slopes() (in module prereise.gather.demanddata.bldg_electrification.ff_model)": [[72, "prereise.gather.demanddata.bldg_electrification.ff_model.calculate_state_slopes"]], "compare_hp_heat_type() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.compare_hp_heat_type"]], "floor_area_growth() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.floor_area_growth"]], "floor_area_growth_type() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.floor_area_growth_type"]], "frac_cook_ff2hp() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_cook_ff2hp"]], "frac_cool_growth() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_cool_growth"]], "frac_cooling_eff_change() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_cooling_eff_change"]], "frac_dhw_ff2hp() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_dhw_ff2hp"]], "frac_hp_growth() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_hp_growth"]], "frac_htg_ff2hp() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_htg_ff2hp"]], "frac_resist_growth() (prereise.gather.demanddata.bldg_electrification.load_projection_scenario.loadprojectionscenario method)": [[72, "prereise.gather.demanddata.bldg_electrification.load_projection_scenario.LoadProjectionScenario.frac_resist_growth"]], "func_dhw_cop() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw.func_dhw_cop"]], "generate_cook_profiles() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook.generate_cook_profiles"]], "generate_dhw_profiles() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw.generate_dhw_profiles"]], "generate_htg_profiles() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg.generate_htg_profiles"]], "htg_to_cop() (in module prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg)": [[72, "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg.htg_to_cop"]], "prereise.gather.demanddata.bldg_electrification": [[72, "module-prereise.gather.demanddata.bldg_electrification"]], "prereise.gather.demanddata.bldg_electrification.const": [[72, "module-prereise.gather.demanddata.bldg_electrification.const"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_cook"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_dhw"]], "prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff2elec_profile_generator_htg"]], "prereise.gather.demanddata.bldg_electrification.ff_model": [[72, "module-prereise.gather.demanddata.bldg_electrification.ff_model"]], "prereise.gather.demanddata.bldg_electrification.load_projection_scenario": [[72, "module-prereise.gather.demanddata.bldg_electrification.load_projection_scenario"]], "prereise.gather.demanddata.bldg_electrification.tests": [[73, "module-prereise.gather.demanddata.bldg_electrification.tests"]], "prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg": [[73, "module-prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg"]], "test_generate_profiles_argument_type() (in module prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg)": [[73, "prereise.gather.demanddata.bldg_electrification.tests.test_ff2elec_profile_generator_htg.test_generate_profiles_argument_type"]], "eiagov (class in prereise.gather.demanddata.eia.get_eia_data)": [[74, "prereise.gather.demanddata.eia.get_eia_data.EIAgov"]], "aggregate_ba_demand() (in module prereise.gather.demanddata.eia.map_ba)": [[74, "prereise.gather.demanddata.eia.map_ba.aggregate_ba_demand"]], "fill_ba_demand() (in module prereise.gather.demanddata.eia.clean_data)": [[74, "prereise.gather.demanddata.eia.clean_data.fill_ba_demand"]], "fix_dataframe_outliers() (in module prereise.gather.demanddata.eia.clean_data)": [[74, "prereise.gather.demanddata.eia.clean_data.fix_dataframe_outliers"]], "from_download() (in module prereise.gather.demanddata.eia.get_eia_data)": [[74, "prereise.gather.demanddata.eia.get_eia_data.from_download"]], "from_excel() (in module prereise.gather.demanddata.eia.get_eia_data)": [[74, "prereise.gather.demanddata.eia.get_eia_data.from_excel"]], "get_ba_demand() (in module prereise.gather.demanddata.eia.get_eia_data)": [[74, "prereise.gather.demanddata.eia.get_eia_data.get_ba_demand"]], "get_data() (prereise.gather.demanddata.eia.get_eia_data.eiagov method)": [[74, "prereise.gather.demanddata.eia.get_eia_data.EIAgov.get_data"]], "get_demand_in_loadzone() (in module prereise.gather.demanddata.eia.map_ba)": [[74, "prereise.gather.demanddata.eia.map_ba.get_demand_in_loadzone"]], "map_buses_to_ba() (in module prereise.gather.demanddata.eia.map_ba)": [[74, "prereise.gather.demanddata.eia.map_ba.map_buses_to_ba"]], "map_buses_to_county() (in module prereise.gather.demanddata.eia.map_ba)": [[74, "prereise.gather.demanddata.eia.map_ba.map_buses_to_county"]], "prereise.gather.demanddata.eia": [[74, "module-prereise.gather.demanddata.eia"]], "prereise.gather.demanddata.eia.clean_data": [[74, "module-prereise.gather.demanddata.eia.clean_data"]], "prereise.gather.demanddata.eia.get_eia_data": [[74, "module-prereise.gather.demanddata.eia.get_eia_data"]], "prereise.gather.demanddata.eia.map_ba": [[74, "module-prereise.gather.demanddata.eia.map_ba"]], "raw() (prereise.gather.demanddata.eia.get_eia_data.eiagov method)": [[74, "prereise.gather.demanddata.eia.get_eia_data.EIAgov.raw"]], "replace_with_shifted_demand() (in module prereise.gather.demanddata.eia.clean_data)": [[74, "prereise.gather.demanddata.eia.clean_data.replace_with_shifted_demand"]], "slope_interpolate() (in module prereise.gather.demanddata.eia.clean_data)": [[74, "prereise.gather.demanddata.eia.clean_data.slope_interpolate"]], "create_ba_to_region_dataframe() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.create_ba_to_region_dataframe"]], "create_loadzone_dataframe() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.create_loadzone_dataframe"]], "prereise.gather.demanddata.eia.tests": [[75, "module-prereise.gather.demanddata.eia.tests"]], "prereise.gather.demanddata.eia.tests.test_clean_data": [[75, "module-prereise.gather.demanddata.eia.tests.test_clean_data"]], "prereise.gather.demanddata.eia.tests.test_get_eia_data": [[75, "module-prereise.gather.demanddata.eia.tests.test_get_eia_data"]], "prereise.gather.demanddata.eia.tests.test_map_ba": [[75, "module-prereise.gather.demanddata.eia.tests.test_map_ba"]], "random() (in module prereise.gather.demanddata.eia.tests.test_clean_data)": [[75, "prereise.gather.demanddata.eia.tests.test_clean_data.random"]], "test_aggregate_ba_demand_sums_first_columns_pairs() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_aggregate_ba_demand_sums_first_columns_pairs"]], "test_aggregate_ba_demand_sums_first_three_columns() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_aggregate_ba_demand_sums_first_three_columns"]], "test_eia_download() (in module prereise.gather.demanddata.eia.tests.test_get_eia_data)": [[75, "prereise.gather.demanddata.eia.tests.test_get_eia_data.test_eia_download"]], "test_from_excel() (in module prereise.gather.demanddata.eia.tests.test_get_eia_data)": [[75, "prereise.gather.demanddata.eia.tests.test_get_eia_data.test_from_excel"]], "test_get_demand_in_loadzone_case() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_get_demand_in_loadzone_case"]], "test_get_demand_in_loadzone_has_equal_total_demand() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_get_demand_in_loadzone_has_equal_total_demand"]], "test_map_buses_to_ba() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_map_buses_to_ba"]], "test_map_buses_to_county() (in module prereise.gather.demanddata.eia.tests.test_map_ba)": [[75, "prereise.gather.demanddata.eia.tests.test_map_ba.test_map_buses_to_county"]], "test_slope_interpolate() (in module prereise.gather.demanddata.eia.tests.test_clean_data)": [[75, "prereise.gather.demanddata.eia.tests.test_clean_data.test_slope_interpolate"]], "access_non_efs_demand() (in module prereise.gather.demanddata.nrel_efs.aggregate_demand)": [[76, "prereise.gather.demanddata.nrel_efs.aggregate_demand.access_non_efs_demand"]], "account_for_leap_year() (in module prereise.gather.demanddata.nrel_efs.get_efs_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_data.account_for_leap_year"]], "combine_efs_demand() (in module prereise.gather.demanddata.nrel_efs.aggregate_demand)": [[76, "prereise.gather.demanddata.nrel_efs.aggregate_demand.combine_efs_demand"]], "decompose_demand_profile_by_state_to_loadzone() (in module prereise.gather.demanddata.nrel_efs.map_states)": [[76, "prereise.gather.demanddata.nrel_efs.map_states.decompose_demand_profile_by_state_to_loadzone"]], "download_demand_data() (in module prereise.gather.demanddata.nrel_efs.get_efs_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_data.download_demand_data"]], "download_flexibility_data() (in module prereise.gather.demanddata.nrel_efs.get_efs_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_data.download_flexibility_data"]], "get_efs_annual_data() (in module prereise.gather.demanddata.nrel_efs.get_efs_annual_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_annual_data.get_efs_annual_data"]], "partition_demand_by_sector() (in module prereise.gather.demanddata.nrel_efs.get_efs_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_data.partition_demand_by_sector"]], "partition_flexibility_by_sector() (in module prereise.gather.demanddata.nrel_efs.get_efs_data)": [[76, "prereise.gather.demanddata.nrel_efs.get_efs_data.partition_flexibility_by_sector"]], "prereise.gather.demanddata.nrel_efs": [[76, "module-prereise.gather.demanddata.nrel_efs"]], "prereise.gather.demanddata.nrel_efs.aggregate_demand": [[76, "module-prereise.gather.demanddata.nrel_efs.aggregate_demand"]], "prereise.gather.demanddata.nrel_efs.get_efs_annual_data": [[76, "module-prereise.gather.demanddata.nrel_efs.get_efs_annual_data"]], "prereise.gather.demanddata.nrel_efs.get_efs_data": [[76, "module-prereise.gather.demanddata.nrel_efs.get_efs_data"]], "prereise.gather.demanddata.nrel_efs.map_states": [[76, "module-prereise.gather.demanddata.nrel_efs.map_states"]], "shift_local_time_by_loadzone_to_utc() (in module prereise.gather.demanddata.nrel_efs.map_states)": [[76, "prereise.gather.demanddata.nrel_efs.map_states.shift_local_time_by_loadzone_to_utc"]], "prereise.gather.demanddata.nrel_efs.tests": [[77, "module-prereise.gather.demanddata.nrel_efs.tests"]], "prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand"]], "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data"]], "prereise.gather.demanddata.nrel_efs.tests.test_map_states": [[77, "module-prereise.gather.demanddata.nrel_efs.tests.test_map_states"]], "test_account_for_leap_year() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_account_for_leap_year"]], "test_check_electrification_scenarios_for_download() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_check_electrification_scenarios_for_download"]], "test_check_path() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_check_path"]], "test_check_technology_advancements_for_download() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_check_technology_advancements_for_download"]], "test_combine_efs_demand() (in module prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_aggregate_demand.test_combine_efs_demand"]], "test_decompose_demand_profile_by_state_to_loadzone() (in module prereise.gather.demanddata.nrel_efs.tests.test_map_states)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_map_states.test_decompose_demand_profile_by_state_to_loadzone"]], "test_download_data() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_download_data"]], "test_extract_data() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_extract_data"]], "test_partition_demand_by_sector() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_partition_demand_by_sector"]], "test_partition_flexibility_by_sector() (in module prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_get_efs_data.test_partition_flexibility_by_sector"]], "test_shift_local_time_by_loadzone_to_utc() (in module prereise.gather.demanddata.nrel_efs.tests.test_map_states)": [[77, "prereise.gather.demanddata.nrel_efs.tests.test_map_states.test_shift_local_time_by_loadzone_to_utc"]], "adjust_bev() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.adjust_bev"]], "apply_annual_scaling() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.apply_annual_scaling"]], "apply_daily_adjustments() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.apply_daily_adjustments"]], "calculate_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.calculate_charging"]], "calculate_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate_charging_hdv)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV.calculate_charging"]], "calculate_charging_helper() (in module prereise.gather.demanddata.transportation_electrification.immediate_charging_hdv)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV.calculate_charging_helper"]], "calculate_dwell_time() (in module prereise.gather.demanddata.transportation_electrification.data_process)": [[78, "prereise.gather.demanddata.transportation_electrification.data_process.calculate_dwell_time"]], "calculate_optimization() (in module prereise.gather.demanddata.transportation_electrification.charging_optimization)": [[78, "prereise.gather.demanddata.transportation_electrification.charging_optimization.calculate_optimization"]], "data_filtering() (in module prereise.gather.demanddata.transportation_electrification.data_process)": [[78, "prereise.gather.demanddata.transportation_electrification.data_process.data_filtering"]], "generate_bev_vehicle_profiles() (in module prereise.gather.demanddata.transportation_electrification.generate_bev_vehicle_profiles)": [[78, "prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles.generate_bev_vehicle_profiles"]], "generate_daily_weighting() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.generate_daily_weighting"]], "get_constraints() (in module prereise.gather.demanddata.transportation_electrification.charging_optimization)": [[78, "prereise.gather.demanddata.transportation_electrification.charging_optimization.get_constraints"]], "get_data_day() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.get_data_day"]], "get_energy_limit() (in module prereise.gather.demanddata.transportation_electrification.dwelling)": [[78, "prereise.gather.demanddata.transportation_electrification.dwelling.get_energy_limit"]], "get_input_day() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.get_input_day"]], "get_kwhmi() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.get_kwhmi"]], "get_model_year_dti() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.get_model_year_dti"]], "get_rates() (in module prereise.gather.demanddata.transportation_electrification.dwelling)": [[78, "prereise.gather.demanddata.transportation_electrification.dwelling.get_rates"]], "get_segment() (in module prereise.gather.demanddata.transportation_electrification.dwelling)": [[78, "prereise.gather.demanddata.transportation_electrification.dwelling.get_segment"]], "get_total_daily_vmt() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.get_total_daily_vmt"]], "hdv_use_all_data_rows() (in module prereise.gather.demanddata.transportation_electrification.smart_charging)": [[78, "prereise.gather.demanddata.transportation_electrification.smart_charging.hdv_use_all_data_rows"]], "immediate_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.immediate_charging"]], "immediate_hdv_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate_charging_hdv)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV.immediate_hdv_charging"]], "ldv_weekday_weekend_check() (in module prereise.gather.demanddata.transportation_electrification.smart_charging)": [[78, "prereise.gather.demanddata.transportation_electrification.smart_charging.ldv_weekday_weekend_check"]], "load_data() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.load_data"]], "load_hdv_data() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.load_hdv_data"]], "load_rural_scaling_factor() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.load_rural_scaling_factor"]], "load_urbanized_scaling_factor() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.load_urbanized_scaling_factor"]], "prereise.gather.demanddata.transportation_electrification": [[78, "module-prereise.gather.demanddata.transportation_electrification"]], "prereise.gather.demanddata.transportation_electrification.charging_optimization": [[78, "module-prereise.gather.demanddata.transportation_electrification.charging_optimization"]], "prereise.gather.demanddata.transportation_electrification.const": [[78, "module-prereise.gather.demanddata.transportation_electrification.const"]], "prereise.gather.demanddata.transportation_electrification.data_helper": [[78, "module-prereise.gather.demanddata.transportation_electrification.data_helper"]], "prereise.gather.demanddata.transportation_electrification.data_process": [[78, "module-prereise.gather.demanddata.transportation_electrification.data_process"]], "prereise.gather.demanddata.transportation_electrification.dwelling": [[78, "module-prereise.gather.demanddata.transportation_electrification.dwelling"]], "prereise.gather.demanddata.transportation_electrification.generate_bev_vehicle_profiles": [[78, "module-prereise.gather.demanddata.transportation_electrification.generate_BEV_vehicle_profiles"]], "prereise.gather.demanddata.transportation_electrification.immediate": [[78, "module-prereise.gather.demanddata.transportation_electrification.immediate"]], "prereise.gather.demanddata.transportation_electrification.immediate_charging_hdv": [[78, "module-prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV"]], "prereise.gather.demanddata.transportation_electrification.smart_charging": [[78, "module-prereise.gather.demanddata.transportation_electrification.smart_charging"]], "remove_ldt() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.remove_ldt"]], "remove_ldv() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.remove_ldv"]], "resample_daily_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate.resample_daily_charging"]], "resample_daily_charging() (in module prereise.gather.demanddata.transportation_electrification.immediate_charging_hdv)": [[78, "prereise.gather.demanddata.transportation_electrification.immediate_charging_HDV.resample_daily_charging"]], "smart_charging() (in module prereise.gather.demanddata.transportation_electrification.smart_charging)": [[78, "prereise.gather.demanddata.transportation_electrification.smart_charging.smart_charging"]], "update_if_weekend() (in module prereise.gather.demanddata.transportation_electrification.data_helper)": [[78, "prereise.gather.demanddata.transportation_electrification.data_helper.update_if_weekend"]], "prereise.gather.demanddata.transportation_electrification.data": [[79, "module-prereise.gather.demanddata.transportation_electrification.data"]], "prereise.gather.demanddata.transportation_electrification.tests": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests"]], "prereise.gather.demanddata.transportation_electrification.tests.test_dwelling": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_dwelling"]], "prereise.gather.demanddata.transportation_electrification.tests.test_generate_bev_vehicle_profiles": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate"]], "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration"]], "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration": [[80, "module-prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration"]], "test_apply_annual_scaling() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate.test_apply_annual_scaling"]], "test_apply_daily_adjustments() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate.test_apply_daily_adjustments"]], "test_energy_limit() (in module prereise.gather.demanddata.transportation_electrification.tests.test_dwelling)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_dwelling.test_energy_limit"]], "test_get_segment() (in module prereise.gather.demanddata.transportation_electrification.tests.test_dwelling)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_dwelling.test_get_segment"]], "test_immediate_charging_hdv() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_hdv"]], "test_immediate_charging_hdv_1day() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_hdv_1day"]], "test_immediate_charging_ldv_2days() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_ldv_2days"]], "test_immediate_charging_mdv() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_mdv"]], "test_immediate_charging_mdv_1day() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_mdv_1day"]], "test_immediate_charging_region1() (in module prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_immediate_charging_integration.test_immediate_charging_region1"]], "test_ldv_immediate_runs() (in module prereise.gather.demanddata.transportation_electrification.tests.test_generate_bev_vehicle_profiles)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_generate_BEV_vehicle_profiles.test_ldv_immediate_runs"]], "test_smart_charging_hdv_2days() (in module prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration.test_smart_charging_hdv_2days"]], "test_smart_charging_ldv_2days() (in module prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration.test_smart_charging_ldv_2days"]], "test_smart_charging_mdv_2days() (in module prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration)": [[80, "prereise.gather.demanddata.transportation_electrification.tests.test_smart_charging_integration.test_smart_charging_mdv_2days"]], "prereise.gather.flexibilitydata": [[81, "module-prereise.gather.flexibilitydata"]], "aggregate_doe() (in module prereise.gather.flexibilitydata.doe.doe_data)": [[82, "prereise.gather.flexibilitydata.doe.doe_data.aggregate_doe"]], "cleanup_directory() (in module prereise.gather.flexibilitydata.doe.doe_data)": [[82, "prereise.gather.flexibilitydata.doe.doe_data.cleanup_directory"]], "collect_all_raw_data() (in module prereise.gather.flexibilitydata.doe.batch_process)": [[82, "prereise.gather.flexibilitydata.doe.batch_process.collect_all_raw_data"]], "create_geo_cache_files() (in module prereise.gather.flexibilitydata.doe.batch_process)": [[82, "prereise.gather.flexibilitydata.doe.batch_process.create_geo_cache_files"]], "download_doe() (in module prereise.gather.flexibilitydata.doe.doe_data)": [[82, "prereise.gather.flexibilitydata.doe.doe_data.download_doe"]], "eiaid_to_fips() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.eiaid_to_fips"]], "eiaid_to_zip() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.eiaid_to_zip"]], "fips_to_eiaid() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.fips_to_eiaid"]], "fips_zip_conversion() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.fips_zip_conversion"]], "get_cache_from_blob() (in module prereise.gather.flexibilitydata.doe.batch_process)": [[82, "prereise.gather.flexibilitydata.doe.batch_process.get_cache_from_blob"]], "get_census_data() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_census_data"]], "get_county_fips_data() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_county_fips_data"]], "get_crosswalk_data() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_crosswalk_data"]], "get_fips_population() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_fips_population"]], "get_lse_region_data() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_lse_region_data"]], "get_zip_population() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.get_zip_population"]], "prereise.gather.flexibilitydata.doe": [[82, "module-prereise.gather.flexibilitydata.doe"]], "prereise.gather.flexibilitydata.doe.batch_process": [[82, "module-prereise.gather.flexibilitydata.doe.batch_process"]], "prereise.gather.flexibilitydata.doe.doe_data": [[82, "module-prereise.gather.flexibilitydata.doe.doe_data"]], "prereise.gather.flexibilitydata.doe.geo_data": [[82, "module-prereise.gather.flexibilitydata.doe.geo_data"]], "zip_to_eiaid() (in module prereise.gather.flexibilitydata.doe.geo_data)": [[82, "prereise.gather.flexibilitydata.doe.geo_data.zip_to_eiaid"]], "prereise.gather.flexibilitydata.doe.examples": [[83, "module-prereise.gather.flexibilitydata.doe.examples"]], "prereise.gather.flexibilitydata.doe.tests": [[84, "module-prereise.gather.flexibilitydata.doe.tests"]], "prereise.gather.flexibilitydata.doe.tests.test_geo_data": [[84, "module-prereise.gather.flexibilitydata.doe.tests.test_geo_data"]], "test_batch_download() (in module prereise.gather.flexibilitydata.doe.tests.test_geo_data)": [[84, "prereise.gather.flexibilitydata.doe.tests.test_geo_data.test_batch_download"]], "test_cache_production() (in module prereise.gather.flexibilitydata.doe.tests.test_geo_data)": [[84, "prereise.gather.flexibilitydata.doe.tests.test_geo_data.test_cache_production"]], "prereise.gather.griddata": [[85, "module-prereise.gather.griddata"]], "conductor (class in prereise.gather.griddata.transmission.geometry)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor"]], "conductorbundle (class in prereise.gather.griddata.transmission.geometry)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle"]], "dataclasswithvalidation (class in prereise.gather.griddata.transmission.helpers)": [[86, "prereise.gather.griddata.transmission.helpers.DataclassWithValidation"]], "line (class in prereise.gather.griddata.transmission.geometry)": [[86, "prereise.gather.griddata.transmission.geometry.Line"]], "phaselocations (class in prereise.gather.griddata.transmission.geometry)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations"]], "tower (class in prereise.gather.griddata.transmission.geometry)": [[86, "prereise.gather.griddata.transmission.geometry.Tower"]], "a (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.a"]], "approximate_loadability() (in module prereise.gather.griddata.transmission.helpers)": [[86, "prereise.gather.griddata.transmission.helpers.approximate_loadability"]], "area (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.area"]], "b (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.b"]], "bundle (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.bundle"]], "c (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.c"]], "calculate_distances() (prereise.gather.griddata.transmission.geometry.phaselocations method)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.calculate_distances"]], "calculate_equivalent_spacing() (prereise.gather.griddata.transmission.geometry.conductorbundle method)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.calculate_equivalent_spacing"]], "calculate_equivalent_spacing_circular() (prereise.gather.griddata.transmission.geometry.conductorbundle method)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.calculate_equivalent_spacing_circular"]], "calculate_equivalent_spacing_flat() (prereise.gather.griddata.transmission.geometry.conductorbundle method)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.calculate_equivalent_spacing_flat"]], "calculate_inductance_per_km() (prereise.gather.griddata.transmission.geometry.tower method)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.calculate_inductance_per_km"]], "calculate_multi_circuit_distances() (prereise.gather.griddata.transmission.geometry.phaselocations method)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.calculate_multi_circuit_distances"]], "calculate_shunt_capacitance_per_km() (prereise.gather.griddata.transmission.geometry.tower method)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.calculate_shunt_capacitance_per_km"]], "calculate_single_circuit_distances() (prereise.gather.griddata.transmission.geometry.phaselocations method)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.calculate_single_circuit_distances"]], "calculate_z_base() (in module prereise.gather.griddata.transmission.helpers)": [[86, "prereise.gather.griddata.transmission.helpers.calculate_z_base"]], "capacitance (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.capacitance"]], "circuits (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.circuits"]], "conductor (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.conductor"]], "current_limit (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.current_limit"]], "current_limit (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.current_limit"]], "equivalent_distance (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.equivalent_distance"]], "equivalent_height (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.equivalent_height"]], "equivalent_reflected_distance (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.equivalent_reflected_distance"]], "freq (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.freq"]], "get_standard_conductors() (in module prereise.gather.griddata.transmission.helpers)": [[86, "prereise.gather.griddata.transmission.helpers.get_standard_conductors"]], "gmr (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.gmr"]], "inductance (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.inductance"]], "layout (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.layout"]], "length (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.length"]], "locations (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.locations"]], "material (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.material"]], "n (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.n"]], "name (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.name"]], "permeability (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.permeability"]], "phase_current_limit (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.phase_current_limit"]], "phase_self_distances (prereise.gather.griddata.transmission.geometry.phaselocations attribute)": [[86, "prereise.gather.griddata.transmission.geometry.PhaseLocations.phase_self_distances"]], "power_rating (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.power_rating"]], "prereise.gather.griddata.transmission": [[86, "module-prereise.gather.griddata.transmission"]], "prereise.gather.griddata.transmission.const": [[86, "module-prereise.gather.griddata.transmission.const"]], "prereise.gather.griddata.transmission.geometry": [[86, "module-prereise.gather.griddata.transmission.geometry"]], "prereise.gather.griddata.transmission.helpers": [[86, "module-prereise.gather.griddata.transmission.helpers"]], "propogation_constant_per_km (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.propogation_constant_per_km"]], "radius (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.radius"]], "resistance (prereise.gather.griddata.transmission.geometry.tower attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Tower.resistance"]], "resistance_per_km (prereise.gather.griddata.transmission.geometry.conductor attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Conductor.resistance_per_km"]], "resistance_per_km (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.resistance_per_km"]], "series_impedance (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.series_impedance"]], "series_impedance_per_km (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.series_impedance_per_km"]], "shunt_admittance (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.shunt_admittance"]], "shunt_admittance_per_km (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.shunt_admittance_per_km"]], "spacing (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.spacing"]], "spacing_c (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.spacing_C"]], "spacing_l (prereise.gather.griddata.transmission.geometry.conductorbundle attribute)": [[86, "prereise.gather.griddata.transmission.geometry.ConductorBundle.spacing_L"]], "stability_rating (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.stability_rating"]], "surge_impedance (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.surge_impedance"]], "thermal_rating (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.thermal_rating"]], "tower (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.tower"]], "translate_to_per_unit() (in module prereise.gather.griddata.transmission.helpers)": [[86, "prereise.gather.griddata.transmission.helpers.translate_to_per_unit"]], "validate_input_types() (prereise.gather.griddata.transmission.helpers.dataclasswithvalidation method)": [[86, "prereise.gather.griddata.transmission.helpers.DataclassWithValidation.validate_input_types"]], "voltage (prereise.gather.griddata.transmission.geometry.line attribute)": [[86, "prereise.gather.griddata.transmission.geometry.Line.voltage"]], "custom_dataclass() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.custom_dataclass"]], "prereise.gather.griddata.transmission.tests": [[87, "module-prereise.gather.griddata.transmission.tests"]], "prereise.gather.griddata.transmission.tests.test_geometry": [[87, "module-prereise.gather.griddata.transmission.tests.test_geometry"]], "prereise.gather.griddata.transmission.tests.test_helpers": [[87, "module-prereise.gather.griddata.transmission.tests.test_helpers"]], "test_dataclasswithvalidation_bad_inputs() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.test_DataclassWithValidation_bad_inputs"]], "test_dataclasswithvalidation_not_a_dataclass() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.test_DataclassWithValidation_not_a_dataclass"]], "test_dataclasswithvalidation_success() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.test_DataclassWithValidation_success"]], "test_calculate_z_base() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.test_calculate_z_base"]], "test_conductor_bundle() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_conductor_bundle"]], "test_conductor_by_name() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_conductor_by_name"]], "test_conductor_by_parameter_values() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_conductor_by_parameter_values"]], "test_conductor_name_and_parameters() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_conductor_name_and_parameters"]], "test_line_long() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_line_long"]], "test_line_short() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_line_short"]], "test_tower_double_circuit() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_tower_double_circuit"]], "test_tower_single_circuit() (in module prereise.gather.griddata.transmission.tests.test_geometry)": [[87, "prereise.gather.griddata.transmission.tests.test_geometry.test_tower_single_circuit"]], "test_translate_to_per_unit() (in module prereise.gather.griddata.transmission.tests.test_helpers)": [[87, "prereise.gather.griddata.transmission.tests.test_helpers.test_translate_to_per_unit"]], "prereise.gather.hydrodata": [[88, "module-prereise.gather.hydrodata"]], "get_net_demand_profile() (in module prereise.gather.hydrodata.eia.net_demand)": [[89, "prereise.gather.hydrodata.eia.net_demand.get_net_demand_profile"]], "get_normalized_profile() (in module prereise.gather.hydrodata.eia.decompose_profile)": [[89, "prereise.gather.hydrodata.eia.decompose_profile.get_normalized_profile"]], "get_profile() (in module prereise.gather.hydrodata.eia.interpolate_capacity_factors)": [[89, "prereise.gather.hydrodata.eia.interpolate_capacity_factors.get_profile"]], "get_profile_by_plant() (in module prereise.gather.hydrodata.eia.decompose_profile)": [[89, "prereise.gather.hydrodata.eia.decompose_profile.get_profile_by_plant"]], "get_profile_by_state() (in module prereise.gather.hydrodata.eia.decompose_profile)": [[89, "prereise.gather.hydrodata.eia.decompose_profile.get_profile_by_state"]], "prereise.gather.hydrodata.eia": [[89, "module-prereise.gather.hydrodata.eia"]], "prereise.gather.hydrodata.eia.decompose_profile": [[89, "module-prereise.gather.hydrodata.eia.decompose_profile"]], "prereise.gather.hydrodata.eia.helpers": [[89, "module-prereise.gather.hydrodata.eia.helpers"]], "prereise.gather.hydrodata.eia.interpolate_capacity_factors": [[89, "module-prereise.gather.hydrodata.eia.interpolate_capacity_factors"]], "prereise.gather.hydrodata.eia.net_demand": [[89, "module-prereise.gather.hydrodata.eia.net_demand"]], "scale_profile() (in module prereise.gather.hydrodata.eia.helpers)": [[89, "prereise.gather.hydrodata.eia.helpers.scale_profile"]], "get_plant_id_unique_location() (in module prereise.gather.solardata.helpers)": [[90, "prereise.gather.solardata.helpers.get_plant_id_unique_location"]], "get_pv_tracking_data() (in module prereise.gather.solardata.pv_tracking)": [[90, "prereise.gather.solardata.pv_tracking.get_pv_tracking_data"]], "get_pv_tracking_ratio_state() (in module prereise.gather.solardata.pv_tracking)": [[90, "prereise.gather.solardata.pv_tracking.get_pv_tracking_ratio_state"]], "prereise.gather.solardata": [[90, "module-prereise.gather.solardata"]], "prereise.gather.solardata.helpers": [[90, "module-prereise.gather.solardata.helpers"]], "prereise.gather.solardata.pv_tracking": [[90, "module-prereise.gather.solardata.pv_tracking"]], "to_reise() (in module prereise.gather.solardata.helpers)": [[90, "prereise.gather.solardata.helpers.to_reise"]], "ll2ij() (in module prereise.gather.solardata.ga_wind.helpers)": [[91, "prereise.gather.solardata.ga_wind.helpers.ll2ij"]], "prereise.gather.solardata.ga_wind": [[91, "module-prereise.gather.solardata.ga_wind"]], "prereise.gather.solardata.ga_wind.helpers": [[91, "module-prereise.gather.solardata.ga_wind.helpers"]], "nrelapi (class in prereise.gather.solardata.nsrdb.nrel_api)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.NrelApi"]], "psm3data (class in prereise.gather.solardata.nsrdb.nrel_api)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data"]], "allowed_attrs (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.allowed_attrs"]], "check_attrs() (prereise.gather.solardata.nsrdb.nrel_api.psm3data static method)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.check_attrs"]], "data_resource (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.data_resource"]], "elevation (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.elevation"]], "get_psm3_at() (prereise.gather.solardata.nsrdb.nrel_api.nrelapi method)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.NrelApi.get_psm3_at"]], "lat (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.lat"]], "lon (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.lon"]], "prereise.gather.solardata.nsrdb": [[92, "module-prereise.gather.solardata.nsrdb"]], "prereise.gather.solardata.nsrdb.naive": [[92, "module-prereise.gather.solardata.nsrdb.naive"]], "prereise.gather.solardata.nsrdb.nrel_api": [[92, "module-prereise.gather.solardata.nsrdb.nrel_api"]], "rename_attrs (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.rename_attrs"]], "retrieve_data() (in module prereise.gather.solardata.nsrdb.naive)": [[92, "prereise.gather.solardata.nsrdb.naive.retrieve_data"]], "to_dict() (prereise.gather.solardata.nsrdb.nrel_api.psm3data method)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.to_dict"]], "tz (prereise.gather.solardata.nsrdb.nrel_api.psm3data attribute)": [[92, "prereise.gather.solardata.nsrdb.nrel_api.Psm3Data.tz"]], "prereise.gather.solardata.nsrdb.tests": [[93, "module-prereise.gather.solardata.nsrdb.tests"]], "prereise.gather.solardata.nsrdb.tests.test_nrel_api": [[93, "module-prereise.gather.solardata.nsrdb.tests.test_nrel_api"]], "test_check_attrs() (in module prereise.gather.solardata.nsrdb.tests.test_nrel_api)": [[93, "prereise.gather.solardata.nsrdb.tests.test_nrel_api.test_check_attrs"]], "test_psm3_to_dict() (in module prereise.gather.solardata.nsrdb.tests.test_nrel_api)": [[93, "prereise.gather.solardata.nsrdb.tests.test_nrel_api.test_psm3_to_dict"]], "create_mock_pv_info() (in module prereise.gather.solardata.tests.mock_pv_info)": [[94, "prereise.gather.solardata.tests.mock_pv_info.create_mock_pv_info"]], "prereise.gather.solardata.tests": [[94, "module-prereise.gather.solardata.tests"]], "prereise.gather.solardata.tests.mock_pv_info": [[94, "module-prereise.gather.solardata.tests.mock_pv_info"]], "prereise.gather.solardata.tests.test_helpers": [[94, "module-prereise.gather.solardata.tests.test_helpers"]], "prereise.gather.solardata.tests.test_pv_tracking": [[94, "module-prereise.gather.solardata.tests.test_pv_tracking"]], "test_plant_id_unique_location() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_plant_id_unique_location"]], "test_plant_id_unique_location_type() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_plant_id_unique_location_type"]], "test_plant_id_unique_location_value() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_plant_id_unique_location_value"]], "test_ratio_state_with_multiple_plants_and_tracking_systems() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_ratio_state_with_multiple_plants_and_tracking_systems"]], "test_ratio_state_with_single_plant_and_multiple_tracking() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_ratio_state_with_single_plant_and_multiple_tracking"]], "test_ratio_state_with_single_plant_and_unique_tracking() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_ratio_state_with_single_plant_and_unique_tracking"]], "test_state_exists() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_state_exists"]], "test_state_type() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_state_type"]], "test_state_with_solar_return_3ple() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_state_with_solar_return_3ple"]], "test_state_without_no_solar_return_none() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_state_without_no_solar_return_none"]], "test_sum_ratio_state_with_multiple_plants_and_tracking_systems() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_sum_ratio_state_with_multiple_plants_and_tracking_systems"]], "test_sum_ratio_state_with_single_plant_and_multiple_tracking_systems() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_sum_ratio_state_with_single_plant_and_multiple_tracking_systems"]], "test_sum_ratio_state_with_single_plant_and_tracking_system() (in module prereise.gather.solardata.tests.test_pv_tracking)": [[94, "prereise.gather.solardata.tests.test_pv_tracking.test_sum_ratio_state_with_single_plant_and_tracking_system"]], "test_to_reise() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_to_reise"]], "test_to_reise_type() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_to_reise_type"]], "test_to_reise_value() (in module prereise.gather.solardata.tests.test_helpers)": [[94, "prereise.gather.solardata.tests.test_helpers.test_to_reise_value"]], "customerror": [[95, "prereise.gather.tests.test_retry.CustomError"]], "sleepcounter (class in prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.SleepCounter"]], "create_mock_generation_data_frame() (in module prereise.gather.tests.mock_generation)": [[95, "prereise.gather.tests.mock_generation.create_mock_generation_data_frame"]], "prereise.gather.tests": [[95, "module-prereise.gather.tests"]], "prereise.gather.tests.mock_generation": [[95, "module-prereise.gather.tests.mock_generation"]], "prereise.gather.tests.test_helpers": [[95, "module-prereise.gather.tests.test_helpers"]], "prereise.gather.tests.test_rate_limit": [[95, "module-prereise.gather.tests.test_rate_limit"]], "prereise.gather.tests.test_retry": [[95, "module-prereise.gather.tests.test_retry"]], "sleep() (prereise.gather.tests.test_rate_limit.sleepcounter method)": [[95, "prereise.gather.tests.test_rate_limit.SleepCounter.sleep"]], "sleepless() (in module prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.sleepless"]], "test_counter_attribute() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_counter_attribute"]], "test_decorate_without_call() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_decorate_without_call"]], "test_decorator_with_default() (in module prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.test_decorator_with_default"]], "test_decorator_with_limit() (in module prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.test_decorator_with_limit"]], "test_default_no_limit() (in module prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.test_default_no_limit"]], "test_get_monthly_net_generation() (in module prereise.gather.tests.test_helpers)": [[95, "prereise.gather.tests.test_helpers.test_get_monthly_net_generation"]], "test_get_monthly_net_generation_argument_type() (in module prereise.gather.tests.test_helpers)": [[95, "prereise.gather.tests.test_helpers.test_get_monthly_net_generation_argument_type"]], "test_get_monthly_net_generation_argument_value() (in module prereise.gather.tests.test_helpers)": [[95, "prereise.gather.tests.test_helpers.test_get_monthly_net_generation_argument_value"]], "test_max_times_reached() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_max_times_reached"]], "test_raises_after_max_attempts() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_raises_after_max_attempts"]], "test_return_value() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_return_value"]], "test_sleep_occurrs() (in module prereise.gather.tests.test_rate_limit)": [[95, "prereise.gather.tests.test_rate_limit.test_sleep_occurrs"]], "test_unhandled_exception() (in module prereise.gather.tests.test_retry)": [[95, "prereise.gather.tests.test_retry.test_unhandled_exception"]], "time() (prereise.gather.tests.test_rate_limit.sleepcounter method)": [[95, "prereise.gather.tests.test_rate_limit.SleepCounter.time"]], "build_state_curves() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.build_state_curves"]], "gaussian() (in module prereise.gather.winddata.impute)": [[96, "prereise.gather.winddata.impute.gaussian"]], "get_form_860() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.get_form_860"]], "get_power() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.get_power"]], "get_state_power_curves() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.get_state_power_curves"]], "get_turbine_power_curves() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.get_turbine_power_curves"]], "linear() (in module prereise.gather.winddata.impute)": [[96, "prereise.gather.winddata.impute.linear"]], "prereise.gather.winddata": [[96, "module-prereise.gather.winddata"]], "prereise.gather.winddata.const": [[96, "module-prereise.gather.winddata.const"]], "prereise.gather.winddata.impute": [[96, "module-prereise.gather.winddata.impute"]], "prereise.gather.winddata.power_curves": [[96, "module-prereise.gather.winddata.power_curves"]], "shift_turbine_curve() (in module prereise.gather.winddata.power_curves)": [[96, "prereise.gather.winddata.power_curves.shift_turbine_curve"]], "simple() (in module prereise.gather.winddata.impute)": [[96, "prereise.gather.winddata.impute.simple"]], "downloader (class in prereise.gather.winddata.hrrr.downloader)": [[97, "prereise.gather.winddata.hrrr.downloader.Downloader"]], "gribrecordinfo (class in prereise.gather.winddata.hrrr.grib)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo"]], "hrrrapi (class in prereise.gather.winddata.hrrr.hrrr_api)": [[97, "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi"]], "u_component_filter (prereise.gather.winddata.hrrr.hrrr_api.hrrrapi attribute)": [[97, "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi.U_COMPONENT_FILTER"]], "v_component_filter (prereise.gather.winddata.hrrr.hrrr_api.hrrrapi attribute)": [[97, "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi.V_COMPONENT_FILTER"]], "beginning_byte (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.beginning_byte"]], "byte_range_header_string() (prereise.gather.winddata.hrrr.grib.gribrecordinfo method)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.byte_range_header_string"]], "calculate_pout_blended() (in module prereise.gather.winddata.hrrr.calculations)": [[97, "prereise.gather.winddata.hrrr.calculations.calculate_pout_blended"]], "calculate_pout_individual() (in module prereise.gather.winddata.hrrr.calculations)": [[97, "prereise.gather.winddata.hrrr.calculations.calculate_pout_individual"]], "download() (prereise.gather.winddata.hrrr.downloader.downloader static method)": [[97, "prereise.gather.winddata.hrrr.downloader.Downloader.download"]], "download_meteorological_data() (prereise.gather.winddata.hrrr.hrrr_api.hrrrapi method)": [[97, "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi.download_meteorological_data"]], "download_wind_data() (prereise.gather.winddata.hrrr.hrrr_api.hrrrapi method)": [[97, "prereise.gather.winddata.hrrr.hrrr_api.HrrrApi.download_wind_data"]], "ending_byte (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.ending_byte"]], "extract_wind_speed() (in module prereise.gather.winddata.hrrr.calculations)": [[97, "prereise.gather.winddata.hrrr.calculations.extract_wind_speed"]], "find_closest_wind_grids() (in module prereise.gather.winddata.hrrr.calculations)": [[97, "prereise.gather.winddata.hrrr.calculations.find_closest_wind_grids"]], "forecast (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.forecast"]], "formatted_filename() (in module prereise.gather.winddata.hrrr.helpers)": [[97, "prereise.gather.winddata.hrrr.helpers.formatted_filename"]], "from_string() (prereise.gather.winddata.hrrr.grib.gribrecordinfo class method)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.from_string"]], "full_file() (prereise.gather.winddata.hrrr.grib.gribrecordinfo class method)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.full_file"]], "generate_grib_record_information_list() (prereise.gather.winddata.hrrr.grib.gribrecordinfo class method)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.generate_grib_record_information_list"]], "get_indices_that_contain_selector() (in module prereise.gather.winddata.hrrr.helpers)": [[97, "prereise.gather.winddata.hrrr.helpers.get_indices_that_contain_selector"]], "get_wind_data_lat_long() (in module prereise.gather.winddata.hrrr.calculations)": [[97, "prereise.gather.winddata.hrrr.calculations.get_wind_data_lat_long"]], "initialization_date (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.initialization_date"]], "level (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.level"]], "message_number (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.message_number"]], "prereise.gather.winddata.hrrr": [[97, "module-prereise.gather.winddata.hrrr"]], "prereise.gather.winddata.hrrr.calculations": [[97, "module-prereise.gather.winddata.hrrr.calculations"]], "prereise.gather.winddata.hrrr.constants": [[97, "module-prereise.gather.winddata.hrrr.constants"]], "prereise.gather.winddata.hrrr.downloader": [[97, "module-prereise.gather.winddata.hrrr.downloader"]], "prereise.gather.winddata.hrrr.grib": [[97, "module-prereise.gather.winddata.hrrr.grib"]], "prereise.gather.winddata.hrrr.helpers": [[97, "module-prereise.gather.winddata.hrrr.helpers"]], "prereise.gather.winddata.hrrr.hrrr": [[97, "module-prereise.gather.winddata.hrrr.hrrr"]], "prereise.gather.winddata.hrrr.hrrr_api": [[97, "module-prereise.gather.winddata.hrrr.hrrr_api"]], "retrieve_data() (in module prereise.gather.winddata.hrrr.hrrr)": [[97, "prereise.gather.winddata.hrrr.hrrr.retrieve_data"]], "variable (prereise.gather.winddata.hrrr.grib.gribrecordinfo attribute)": [[97, "prereise.gather.winddata.hrrr.grib.GribRecordInfo.variable"]], "filename_url_iter_mock() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.filename_url_iter_mock"]], "hrrr_api() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.hrrr_api"]], "open_mock() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.open_mock"]], "prereise.gather.winddata.hrrr.tests": [[98, "module-prereise.gather.winddata.hrrr.tests"]], "prereise.gather.winddata.hrrr.tests.test_calculations": [[98, "module-prereise.gather.winddata.hrrr.tests.test_calculations"]], "prereise.gather.winddata.hrrr.tests.test_grib": [[98, "module-prereise.gather.winddata.hrrr.tests.test_grib"]], "prereise.gather.winddata.hrrr.tests.test_helpers": [[98, "module-prereise.gather.winddata.hrrr.tests.test_helpers"]], "prereise.gather.winddata.hrrr.tests.test_hrrr_api": [[98, "module-prereise.gather.winddata.hrrr.tests.test_hrrr_api"]], "requests_mock() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.requests_mock"]], "test_calculate_pout_blended() (in module prereise.gather.winddata.hrrr.tests.test_calculations)": [[98, "prereise.gather.winddata.hrrr.tests.test_calculations.test_calculate_pout_blended"]], "test_download_meteorological_data_no_selectors() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.test_download_meteorological_data_no_selectors"]], "test_download_meteorological_data_with_selectors() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.test_download_meteorological_data_with_selectors"]], "test_download_wind_data() (in module prereise.gather.winddata.hrrr.tests.test_hrrr_api)": [[98, "prereise.gather.winddata.hrrr.tests.test_hrrr_api.test_download_wind_data"]], "test_find_closest_wind_grids() (in module prereise.gather.winddata.hrrr.tests.test_calculations)": [[98, "prereise.gather.winddata.hrrr.tests.test_calculations.test_find_closest_wind_grids"]], "test_get_indices_that_contain_selector() (in module prereise.gather.winddata.hrrr.tests.test_helpers)": [[98, "prereise.gather.winddata.hrrr.tests.test_helpers.test_get_indices_that_contain_selector"]], "test_grib_info_byte_range_header_string() (in module prereise.gather.winddata.hrrr.tests.test_grib)": [[98, "prereise.gather.winddata.hrrr.tests.test_grib.test_grib_info_byte_range_header_string"]], "test_grib_info_byte_range_header_string_no_end_byte() (in module prereise.gather.winddata.hrrr.tests.test_grib)": [[98, "prereise.gather.winddata.hrrr.tests.test_grib.test_grib_info_byte_range_header_string_no_end_byte"]], "test_grib_info_from_string() (in module prereise.gather.winddata.hrrr.tests.test_grib)": [[98, "prereise.gather.winddata.hrrr.tests.test_grib.test_grib_info_from_string"]], "test_grib_info_from_string_with_next_string() (in module prereise.gather.winddata.hrrr.tests.test_grib)": [[98, "prereise.gather.winddata.hrrr.tests.test_grib.test_grib_info_from_string_with_next_string"]], "test_grib_info_generate_grib_record_information_list() (in module prereise.gather.winddata.hrrr.tests.test_grib)": [[98, "prereise.gather.winddata.hrrr.tests.test_grib.test_grib_info_generate_grib_record_information_list"]], "noaaapi (class in prereise.gather.winddata.rap.noaa_api)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi"]], "base_url (prereise.gather.winddata.rap.noaa_api.noaaapi attribute)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.base_url"]], "build_url() (prereise.gather.winddata.rap.noaa_api.noaaapi method)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.build_url"]], "fallback_url (prereise.gather.winddata.rap.noaa_api.noaaapi attribute)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.fallback_url"]], "get_hourly_data() (prereise.gather.winddata.rap.noaa_api.noaaapi method)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.get_hourly_data"]], "get_path_list() (prereise.gather.winddata.rap.noaa_api.noaaapi method)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.get_path_list"]], "iter_hours() (prereise.gather.winddata.rap.noaa_api.noaaapi method)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.iter_hours"]], "prereise.gather.winddata.rap": [[99, "module-prereise.gather.winddata.rap"]], "prereise.gather.winddata.rap.helpers": [[99, "module-prereise.gather.winddata.rap.helpers"]], "prereise.gather.winddata.rap.noaa_api": [[99, "module-prereise.gather.winddata.rap.noaa_api"]], "prereise.gather.winddata.rap.rap": [[99, "module-prereise.gather.winddata.rap.rap"]], "retrieve_data() (in module prereise.gather.winddata.rap.rap)": [[99, "prereise.gather.winddata.rap.rap.retrieve_data"]], "to_reise() (in module prereise.gather.winddata.rap.helpers)": [[99, "prereise.gather.winddata.rap.helpers.to_reise"]], "var_u (prereise.gather.winddata.rap.noaa_api.noaaapi attribute)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.var_u"]], "var_v (prereise.gather.winddata.rap.noaa_api.noaaapi attribute)": [[99, "prereise.gather.winddata.rap.noaa_api.NoaaApi.var_v"]], "noaa() (in module prereise.gather.winddata.rap.tests.test_noaa_api)": [[100, "prereise.gather.winddata.rap.tests.test_noaa_api.noaa"]], "prereise.gather.winddata.rap.tests": [[100, "module-prereise.gather.winddata.rap.tests"]], "prereise.gather.winddata.rap.tests.test_noaa_api": [[100, "module-prereise.gather.winddata.rap.tests.test_noaa_api"]], "test_box_query_set() (in module prereise.gather.winddata.rap.tests.test_noaa_api)": [[100, "prereise.gather.winddata.rap.tests.test_noaa_api.test_box_query_set"]], "test_box_validation() (in module prereise.gather.winddata.rap.tests.test_noaa_api)": [[100, "prereise.gather.winddata.rap.tests.test_noaa_api.test_box_validation"]], "test_get_url_list() (in module prereise.gather.winddata.rap.tests.test_noaa_api)": [[100, "prereise.gather.winddata.rap.tests.test_noaa_api.test_get_url_list"]], "test_url_fallback_default() (in module prereise.gather.winddata.rap.tests.test_noaa_api)": [[100, "prereise.gather.winddata.rap.tests.test_noaa_api.test_url_fallback_default"]]}})